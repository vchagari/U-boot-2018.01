!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A29L040	jedec_flash.c	65;"	d	file:
ACC_CLKS	nand/denali.h	77;"	d
ACC_CLKS__VALUE	nand/denali.h	78;"	d
ACC_CLOCKS	nand/denali.h	418;"	d
ACTIVE_SRC_ID	nand/denali.h	329;"	d
ACTIVE_SRC_ID__VALUE	nand/denali.h	330;"	d
ADDRESS_2_DATA	nand/denali.h	414;"	d
ADDR_2_DATA	nand/denali.h	71;"	d
ADDR_2_DATA__VALUE	nand/denali.h	72;"	d
ADDR_CYCLE	nand/denali.c	77;"	d	file:
ADDR_CYCLES_SHIFT	nand/zynq_nand.c	69;"	d	file:
ADDR_REG1_0	nand/tegra_nand.h	143;"	d
ADDR_REG2_0	nand/tegra_nand.h	144;"	d
AHB_GATE_OFFSET_SPI0	spi/sunxi_spi_spl.c	79;"	d	file:
AHB_RESET_SPI0_SHIFT	spi/sunxi_spi_spl.c	78;"	d	file:
ALT_BUF_DATA	nand/vf610_nfc.c	/^	ALT_BUF_DATA = 0,$/;"	e	enum:vf610_nfc_alt_buf	file:
ALT_BUF_ID	nand/vf610_nfc.c	/^	ALT_BUF_ID = 1,$/;"	e	enum:vf610_nfc_alt_buf	file:
ALT_BUF_ONFI	nand/vf610_nfc.c	/^	ALT_BUF_ONFI = 3,$/;"	e	enum:vf610_nfc_alt_buf	file:
ALT_BUF_STAT	nand/vf610_nfc.c	/^	ALT_BUF_STAT = 2,$/;"	e	enum:vf610_nfc_alt_buf	file:
AM29DL800BB	jedec_flash.c	24;"	d	file:
AM29DL800BT	jedec_flash.c	25;"	d	file:
AM29F002T	jedec_flash.c	42;"	d	file:
AM29F016D	jedec_flash.c	37;"	d	file:
AM29F017D	jedec_flash.c	36;"	d	file:
AM29F032B	jedec_flash.c	41;"	d	file:
AM29F040	jedec_flash.c	39;"	d	file:
AM29F080	jedec_flash.c	38;"	d	file:
AM29F400BB	jedec_flash.c	27;"	d	file:
AM29F800BB	jedec_flash.c	28;"	d	file:
AM29F800BT	jedec_flash.c	29;"	d	file:
AM29LV040B	jedec_flash.c	40;"	d	file:
AM29LV160DB	jedec_flash.c	35;"	d	file:
AM29LV160DT	jedec_flash.c	34;"	d	file:
AM29LV400BB	jedec_flash.c	30;"	d	file:
AM29LV400BT	jedec_flash.c	31;"	d	file:
AM29LV800BB	jedec_flash.c	32;"	d	file:
AM29LV800BT	jedec_flash.c	33;"	d	file:
ARASAN_NAND_CMD_ADDR_CYCL_MASK	nand/arasan_nfc.c	84;"	d	file:
ARASAN_NAND_CMD_ADDR_CYCL_SHIFT	nand/arasan_nfc.c	85;"	d	file:
ARASAN_NAND_CMD_CMD12_MASK	nand/arasan_nfc.c	80;"	d	file:
ARASAN_NAND_CMD_CMD2_SHIFT	nand/arasan_nfc.c	83;"	d	file:
ARASAN_NAND_CMD_ECC_ON_MASK	nand/arasan_nfc.c	79;"	d	file:
ARASAN_NAND_CMD_PG_SIZE_MASK	nand/arasan_nfc.c	81;"	d	file:
ARASAN_NAND_CMD_PG_SIZE_SHIFT	nand/arasan_nfc.c	82;"	d	file:
ARASAN_NAND_COL_ADDR_CYCL_MASK	nand/arasan_nfc.c	106;"	d	file:
ARASAN_NAND_COL_ADDR_CYCL_SHIFT	nand/arasan_nfc.c	107;"	d	file:
ARASAN_NAND_ECC_BCH_SHIFT	nand/arasan_nfc.c	110;"	d	file:
ARASAN_NAND_ECC_SIZE_SHIFT	nand/arasan_nfc.c	109;"	d	file:
ARASAN_NAND_INT_STS_BUF_RD_RDY_MASK	nand/arasan_nfc.c	97;"	d	file:
ARASAN_NAND_INT_STS_BUF_WR_RDY_MASK	nand/arasan_nfc.c	98;"	d	file:
ARASAN_NAND_INT_STS_ERR_EN_MASK	nand/arasan_nfc.c	95;"	d	file:
ARASAN_NAND_INT_STS_MUL_BIT_ERR_MASK	nand/arasan_nfc.c	96;"	d	file:
ARASAN_NAND_INT_STS_XFR_CMPLT_MASK	nand/arasan_nfc.c	99;"	d	file:
ARASAN_NAND_INVALID_ADDR_CYCL	nand/arasan_nfc.c	116;"	d	file:
ARASAN_NAND_MEM_ADDR1_COL_MASK	nand/arasan_nfc.c	88;"	d	file:
ARASAN_NAND_MEM_ADDR1_PAGE_MASK	nand/arasan_nfc.c	87;"	d	file:
ARASAN_NAND_MEM_ADDR1_PAGE_SHIFT	nand/arasan_nfc.c	89;"	d	file:
ARASAN_NAND_MEM_ADDR2_BCH_MASK	nand/arasan_nfc.c	92;"	d	file:
ARASAN_NAND_MEM_ADDR2_BCH_SHIFT	nand/arasan_nfc.c	93;"	d	file:
ARASAN_NAND_MEM_ADDR2_CS_MASK	nand/arasan_nfc.c	91;"	d	file:
ARASAN_NAND_MEM_ADDR2_PAGE_MASK	nand/arasan_nfc.c	90;"	d	file:
ARASAN_NAND_PKTSIZE_1K	nand/arasan_nfc.c	112;"	d	file:
ARASAN_NAND_PKTSIZE_512	nand/arasan_nfc.c	113;"	d	file:
ARASAN_NAND_PKT_REG_PKT_CNT_MASK	nand/arasan_nfc.c	101;"	d	file:
ARASAN_NAND_PKT_REG_PKT_CNT_SHFT	nand/arasan_nfc.c	103;"	d	file:
ARASAN_NAND_PKT_REG_PKT_SIZE_MASK	nand/arasan_nfc.c	102;"	d	file:
ARASAN_NAND_POLL_TIMEOUT	nand/arasan_nfc.c	115;"	d	file:
ARASAN_NAND_ROW_ADDR_CYCL_MASK	nand/arasan_nfc.c	105;"	d	file:
ARASAN_PROG_BLK_ERS_MASK	nand/arasan_nfc.c	69;"	d	file:
ARASAN_PROG_CHNG_ROWADR_END_MASK	nand/arasan_nfc.c	77;"	d	file:
ARASAN_PROG_GET_FTRS_MASK	nand/arasan_nfc.c	75;"	d	file:
ARASAN_PROG_PG_PROG_MASK	nand/arasan_nfc.c	72;"	d	file:
ARASAN_PROG_RD_ID_MASK	nand/arasan_nfc.c	70;"	d	file:
ARASAN_PROG_RD_MASK	nand/arasan_nfc.c	68;"	d	file:
ARASAN_PROG_RD_PARAM_PG_MASK	nand/arasan_nfc.c	73;"	d	file:
ARASAN_PROG_RD_STS_MASK	nand/arasan_nfc.c	71;"	d	file:
ARASAN_PROG_RST_MASK	nand/arasan_nfc.c	74;"	d	file:
ARASAN_PROG_SET_FTRS_MASK	nand/arasan_nfc.c	76;"	d	file:
AT91C_TIMEOUT_WRDY	at45.c	17;"	d	file:
AT91F_BlockErase	at45.c	/^AT91S_DataFlashStatus AT91F_BlockErase($/;"	f
AT91F_DataFlashContinuousRead	at45.c	/^AT91S_DataFlashStatus AT91F_DataFlashContinuousRead($/;"	f
AT91F_DataFlashGetStatus	at45.c	/^AT91S_DataFlashStatus AT91F_DataFlashGetStatus(AT91PS_DataflashDesc pDesc)$/;"	f
AT91F_DataFlashPagePgmBuf	at45.c	/^AT91S_DataFlashStatus AT91F_DataFlashPagePgmBuf(AT91PS_DataFlash pDataFlash,$/;"	f
AT91F_DataFlashRead	at45.c	/^int AT91F_DataFlashRead(AT91PS_DataFlash pDataFlash,$/;"	f
AT91F_DataFlashSendCommand	at45.c	/^AT91S_DataFlashStatus AT91F_DataFlashSendCommand(AT91PS_DataFlash pDataFlash,$/;"	f
AT91F_DataFlashWaitReady	at45.c	/^AT91S_DataFlashStatus AT91F_DataFlashWaitReady(AT91PS_DataflashDesc$/;"	f
AT91F_DataFlashWrite	at45.c	/^AT91S_DataFlashStatus AT91F_DataFlashWrite(AT91PS_DataFlash pDataFlash,$/;"	f
AT91F_DataFlashWriteBuffer	at45.c	/^AT91S_DataFlashStatus AT91F_DataFlashWriteBuffer($/;"	f
AT91F_DataflashInit	dataflash.c	/^int AT91F_DataflashInit (void)$/;"	f
AT91F_DataflashProbe	at45.c	/^int AT91F_DataflashProbe(int cs, AT91PS_DataflashDesc pDesc)$/;"	f
AT91F_DataflashSelect	dataflash.c	/^AT91PS_DataFlash AT91F_DataflashSelect (AT91PS_DataFlash pFlash,$/;"	f
AT91F_DataflashSetEnv	dataflash.c	/^void AT91F_DataflashSetEnv (void)$/;"	f
AT91F_MainMemoryToBufferTransfert	at45.c	/^AT91S_DataFlashStatus AT91F_MainMemoryToBufferTransfert($/;"	f
AT91F_PageErase	at45.c	/^AT91S_DataFlashStatus AT91F_PageErase($/;"	f
AT91F_PartialPageWrite	at45.c	/^AT91S_DataFlashStatus AT91F_PartialPageWrite(AT91PS_DataFlash pDataFlash,$/;"	f
AT91F_WriteBufferToMain	at45.c	/^AT91S_DataFlashStatus AT91F_WriteBufferToMain(AT91PS_DataFlash pDataFlash,$/;"	f
ATMEL_ECC_BITADDR	nand/atmel_nand_ecc.h	27;"	d
ATMEL_ECC_CR	nand/atmel_nand_ecc.h	11;"	d
ATMEL_ECC_ECCERR	nand/atmel_nand_ecc.h	23;"	d
ATMEL_ECC_MR	nand/atmel_nand_ecc.h	14;"	d
ATMEL_ECC_MULERR	nand/atmel_nand_ecc.h	24;"	d
ATMEL_ECC_NPARITY	nand/atmel_nand_ecc.h	31;"	d
ATMEL_ECC_NPR	nand/atmel_nand_ecc.h	30;"	d
ATMEL_ECC_PAGESIZE	nand/atmel_nand_ecc.h	15;"	d
ATMEL_ECC_PAGESIZE_1056	nand/atmel_nand_ecc.h	17;"	d
ATMEL_ECC_PAGESIZE_2112	nand/atmel_nand_ecc.h	18;"	d
ATMEL_ECC_PAGESIZE_4224	nand/atmel_nand_ecc.h	19;"	d
ATMEL_ECC_PAGESIZE_528	nand/atmel_nand_ecc.h	16;"	d
ATMEL_ECC_PR	nand/atmel_nand_ecc.h	26;"	d
ATMEL_ECC_RECERR	nand/atmel_nand_ecc.h	22;"	d
ATMEL_ECC_RST	nand/atmel_nand_ecc.h	12;"	d
ATMEL_ECC_SR	nand/atmel_nand_ecc.h	21;"	d
ATMEL_ECC_WORDADDR	nand/atmel_nand_ecc.h	28;"	d
ATMEL_NAND_ECC_H	nand/atmel_nand_ecc.h	9;"	d
BADBLOCK_MARKER_LENGTH	nand/omap_gpmc.c	19;"	d	file:
BADBLOCK_SCAN_MASK	nand/nand_bbt.c	1244;"	d	file:
BANK	nand/denali.c	84;"	d	file:
BANK	nand/denali_spl.c	18;"	d	file:
BBT_BLOCK_FACTORY_BAD	nand/nand_bbt.c	72;"	d	file:
BBT_BLOCK_GOOD	nand/nand_bbt.c	69;"	d	file:
BBT_BLOCK_RESERVED	nand/nand_bbt.c	71;"	d	file:
BBT_BLOCK_WORN	nand/nand_bbt.c	70;"	d	file:
BBT_ENTRY_MASK	nand/nand_bbt.c	74;"	d	file:
BBT_ENTRY_SHIFT	nand/nand_bbt.c	75;"	d	file:
BCH4_BIT_PAD	nand/omap_gpmc.c	24;"	d	file:
BCH_CONFIG_0	nand/tegra_nand.h	186;"	d
BCH_CONFIG_BCH_ECC_DISABLE	nand/tegra_nand.h	196;"	d
BCH_CONFIG_BCH_ECC_ENABLE	nand/tegra_nand.h	197;"	d
BCH_CONFIG_BCH_ECC_MASK	nand/tegra_nand.h	195;"	d
BCH_CONFIG_BCH_TVAL14	nand/tegra_nand.h	/^	BCH_CONFIG_BCH_TVAL14	= 2 << BCH_CONFIG_BCH_TVALUE_SHIFT,$/;"	e	enum:__anon16
BCH_CONFIG_BCH_TVAL16	nand/tegra_nand.h	/^	BCH_CONFIG_BCH_TVAL16	= 3 << BCH_CONFIG_BCH_TVALUE_SHIFT$/;"	e	enum:__anon16
BCH_CONFIG_BCH_TVAL4	nand/tegra_nand.h	/^	BCH_CONFIG_BCH_TVAL4	= 0 << BCH_CONFIG_BCH_TVALUE_SHIFT,$/;"	e	enum:__anon16
BCH_CONFIG_BCH_TVAL8	nand/tegra_nand.h	/^	BCH_CONFIG_BCH_TVAL8	= 1 << BCH_CONFIG_BCH_TVALUE_SHIFT,$/;"	e	enum:__anon16
BCH_CONFIG_BCH_TVALUE_MASK	nand/tegra_nand.h	188;"	d
BCH_CONFIG_BCH_TVALUE_SHIFT	nand/tegra_nand.h	187;"	d
BCH_DEC_RESULT_0	nand/tegra_nand.h	199;"	d
BCH_DEC_RESULT_CORRFAIL_ERR_MASK	nand/tegra_nand.h	200;"	d
BCH_DEC_RESULT_PAGE_COUNT_MASK	nand/tegra_nand.h	201;"	d
BCH_DEC_STATUS_BUF_0	nand/tegra_nand.h	203;"	d
BCH_DEC_STATUS_CORR_SEC_FLAG_MASK	nand/tegra_nand.h	205;"	d
BCH_DEC_STATUS_CORR_TAG_MASK	nand/tegra_nand.h	207;"	d
BCH_DEC_STATUS_FAIL_SEC_FLAG_MASK	nand/tegra_nand.h	204;"	d
BCH_DEC_STATUS_FAIL_TAG_MASK	nand/tegra_nand.h	206;"	d
BCH_DEC_STATUS_MAX_CORR_CNT_MASK	nand/tegra_nand.h	208;"	d
BCH_DEC_STATUS_PAGE_NUMBER_MASK	nand/tegra_nand.h	209;"	d
BITPOS	nand/mxc_nand.c	43;"	d	file:
BITS_PER_BYTE	nand/nand_base.c	902;"	d	file:
BOOTROM_ECC	nand/bfin_nand.c	284;"	d	file:
BOOTROM_ECC	nand/bfin_nand.c	286;"	d	file:
BUFNO_MASK	nand/vf610_nfc.c	87;"	d	file:
BUFNO_SHIFT	nand/vf610_nfc.c	88;"	d	file:
BYTES_PER_BLOCK	nand/lpc32xx_nand_mlc.c	688;"	d	file:
BYTES_PER_PAGE	nand/lpc32xx_nand_mlc.c	686;"	d	file:
CACHE_READ_ENABLE	nand/denali.h	52;"	d
CACHE_READ_ENABLE__FLAG	nand/denali.h	53;"	d
CACHE_READ_SUPPORT	nand/denali.h	410;"	d
CACHE_WRITE_ENABLE	nand/denali.h	49;"	d
CACHE_WRITE_ENABLE__FLAG	nand/denali.h	50;"	d
CACHE_WRITE_SUPPORT	nand/denali.h	409;"	d
CCM_AHB_GATING0	spi/sunxi_spi_spl.c	74;"	d	file:
CCM_SPI0_CLK	spi/sunxi_spi_spl.c	75;"	d	file:
CEH_NORMAL_CE	nand/lpc32xx_nand_mlc.c	66;"	d	file:
CE_DONT_CARE_SUPPORT	nand/denali.h	407;"	d
CFG_0	nand/tegra_nand.h	61;"	d
CFG_BUS_WIDTH_16BIT	nand/tegra_nand.h	91;"	d
CFG_BUS_WIDTH_8BIT	nand/tegra_nand.h	90;"	d
CFG_BUS_WIDTH_MASK	nand/tegra_nand.h	89;"	d
CFG_CE_LOW	nand/lpc32xx_nand_slc.c	49;"	d	file:
CFG_COM_BSY_DISABLE	nand/tegra_nand.h	87;"	d
CFG_COM_BSY_ENABLE	nand/tegra_nand.h	88;"	d
CFG_COM_BSY_MASK	nand/tegra_nand.h	86;"	d
CFG_DMA_BURST	nand/lpc32xx_nand_slc.c	52;"	d	file:
CFG_DMA_DIR	nand/lpc32xx_nand_slc.c	53;"	d	file:
CFG_DMA_ECC	nand/lpc32xx_nand_slc.c	50;"	d	file:
CFG_ECC_EN	nand/lpc32xx_nand_slc.c	51;"	d	file:
CFG_ECC_EN_TAG_DISABLE	nand/tegra_nand.h	75;"	d
CFG_ECC_EN_TAG_ENABLE	nand/tegra_nand.h	76;"	d
CFG_ECC_EN_TAG_MASK	nand/tegra_nand.h	74;"	d
CFG_EDO_MODE_DISABLE	nand/tegra_nand.h	96;"	d
CFG_EDO_MODE_ENABLE	nand/tegra_nand.h	97;"	d
CFG_EDO_MODE_MASK	nand/tegra_nand.h	95;"	d
CFG_HW_ECC_CORRECTION_DISABLE	nand/tegra_nand.h	69;"	d
CFG_HW_ECC_CORRECTION_ENABLE	nand/tegra_nand.h	70;"	d
CFG_HW_ECC_CORRECTION_MASK	nand/tegra_nand.h	68;"	d
CFG_HW_ECC_DISABLE	nand/tegra_nand.h	63;"	d
CFG_HW_ECC_ENABLE	nand/tegra_nand.h	64;"	d
CFG_HW_ECC_MASK	nand/tegra_nand.h	62;"	d
CFG_HW_ECC_SEL_HAMMING	nand/tegra_nand.h	66;"	d
CFG_HW_ECC_SEL_MASK	nand/tegra_nand.h	65;"	d
CFG_HW_ECC_SEL_RS	nand/tegra_nand.h	67;"	d
CFG_LPDDR1_MODE_DISABLE	nand/tegra_nand.h	93;"	d
CFG_LPDDR1_MODE_ENABLE	nand/tegra_nand.h	94;"	d
CFG_LPDDR1_MODE_MASK	nand/tegra_nand.h	92;"	d
CFG_PAGE_SIZE_1024	nand/tegra_nand.h	/^	CFG_PAGE_SIZE_1024	= 2 << 16,$/;"	e	enum:__anon13
CFG_PAGE_SIZE_2048	nand/tegra_nand.h	/^	CFG_PAGE_SIZE_2048	= 3 << 16,$/;"	e	enum:__anon13
CFG_PAGE_SIZE_256	nand/tegra_nand.h	/^	CFG_PAGE_SIZE_256	= 0 << 16,$/;"	e	enum:__anon13
CFG_PAGE_SIZE_4096	nand/tegra_nand.h	/^	CFG_PAGE_SIZE_4096	= 4 << 16$/;"	e	enum:__anon13
CFG_PAGE_SIZE_512	nand/tegra_nand.h	/^	CFG_PAGE_SIZE_512	= 1 << 16,$/;"	e	enum:__anon13
CFG_PAGE_SIZE_SEL_MASK	nand/tegra_nand.h	98;"	d
CFG_PIPELINE_EN_DISABLE	nand/tegra_nand.h	72;"	d
CFG_PIPELINE_EN_ENABLE	nand/tegra_nand.h	73;"	d
CFG_PIPELINE_EN_MASK	nand/tegra_nand.h	71;"	d
CFG_SKIP_SPARE_DISABLE	nand/tegra_nand.h	84;"	d
CFG_SKIP_SPARE_ENABLE	nand/tegra_nand.h	85;"	d
CFG_SKIP_SPARE_MASK	nand/tegra_nand.h	83;"	d
CFG_SKIP_SPARE_SEL_12	nand/tegra_nand.h	/^	CFG_SKIP_SPARE_SEL_12	= 2 << 14,$/;"	e	enum:__anon14
CFG_SKIP_SPARE_SEL_16	nand/tegra_nand.h	/^	CFG_SKIP_SPARE_SEL_16	= 3 << 14$/;"	e	enum:__anon14
CFG_SKIP_SPARE_SEL_4	nand/tegra_nand.h	/^	CFG_SKIP_SPARE_SEL_4	= 0 << 14,$/;"	e	enum:__anon14
CFG_SKIP_SPARE_SEL_8	nand/tegra_nand.h	/^	CFG_SKIP_SPARE_SEL_8	= 1 << 14,$/;"	e	enum:__anon14
CFG_SKIP_SPARE_SEL_MASK	nand/tegra_nand.h	106;"	d
CFG_TAG_BYTE_SIZE_MASK	nand/tegra_nand.h	113;"	d
CFG_TVAL4	nand/tegra_nand.h	/^	CFG_TVAL4 = 0 << 24,$/;"	e	enum:__anon12
CFG_TVAL6	nand/tegra_nand.h	/^	CFG_TVAL6 = 1 << 24,$/;"	e	enum:__anon12
CFG_TVAL8	nand/tegra_nand.h	/^	CFG_TVAL8 = 2 << 24$/;"	e	enum:__anon12
CFG_TVALUE_MASK	nand/tegra_nand.h	77;"	d
CHIP_DELAY_TIMEOUT	nand/pxa3xx_nand.c	23;"	d	file:
CHIP_ENABLE_DONT_CARE	nand/denali.h	59;"	d
CHIP_EN_DONT_CARE__FLAG	nand/denali.h	60;"	d
CHIP_SELECT_INVALID	nand/denali.c	43;"	d	file:
CHNL_ACTIVE	nand/denali.h	323;"	d
CHNL_ACTIVE__CHANNEL0	nand/denali.h	324;"	d
CHNL_ACTIVE__CHANNEL1	nand/denali.h	325;"	d
CHNL_ACTIVE__CHANNEL2	nand/denali.h	326;"	d
CHNL_ACTIVE__CHANNEL3	nand/denali.h	327;"	d
CLEAR_CS_SHIFT	nand/zynq_nand.c	70;"	d	file:
CLK_MULTI	nand/denali.h	371;"	d
CLK_X	nand/denali.h	370;"	d
CMD_AFT_DAT_DISABLE	nand/tegra_nand.h	17;"	d
CMD_AFT_DAT_ENABLE	nand/tegra_nand.h	18;"	d
CMD_AFT_DAT_MASK	nand/tegra_nand.h	16;"	d
CMD_ALE	nand/tegra_nand.h	11;"	d
CMD_ALE_BYTES1	nand/tegra_nand.h	/^	CMD_ALE_BYTES1 = 0,$/;"	e	enum:__anon11
CMD_ALE_BYTES2	nand/tegra_nand.h	/^	CMD_ALE_BYTES2,$/;"	e	enum:__anon11
CMD_ALE_BYTES3	nand/tegra_nand.h	/^	CMD_ALE_BYTES3,$/;"	e	enum:__anon11
CMD_ALE_BYTES4	nand/tegra_nand.h	/^	CMD_ALE_BYTES4,$/;"	e	enum:__anon11
CMD_ALE_BYTES5	nand/tegra_nand.h	/^	CMD_ALE_BYTES5,$/;"	e	enum:__anon11
CMD_ALE_BYTES6	nand/tegra_nand.h	/^	CMD_ALE_BYTES6,$/;"	e	enum:__anon11
CMD_ALE_BYTES7	nand/tegra_nand.h	/^	CMD_ALE_BYTES7,$/;"	e	enum:__anon11
CMD_ALE_BYTES8	nand/tegra_nand.h	/^	CMD_ALE_BYTES8$/;"	e	enum:__anon11
CMD_ALE_BYTE_SIZE_SHIFT	nand/tegra_nand.h	40;"	d
CMD_A_VALID	nand/tegra_nand.h	21;"	d
CMD_BANKADDR_BRRD	spi/sf_internal.h	69;"	d
CMD_BANKADDR_BRWR	spi/sf_internal.h	68;"	d
CMD_BYTE1_MASK	nand/vf610_nfc.c	83;"	d	file:
CMD_BYTE1_SHIFT	nand/vf610_nfc.c	84;"	d	file:
CMD_BYTE2_MASK	nand/vf610_nfc.c	79;"	d	file:
CMD_BYTE2_SHIFT	nand/vf610_nfc.c	80;"	d	file:
CMD_B_VALID	nand/tegra_nand.h	22;"	d
CMD_CE0	nand/tegra_nand.h	32;"	d
CMD_CE1	nand/tegra_nand.h	31;"	d
CMD_CE2	nand/tegra_nand.h	30;"	d
CMD_CE3	nand/tegra_nand.h	29;"	d
CMD_CE4	nand/tegra_nand.h	28;"	d
CMD_CE5	nand/tegra_nand.h	27;"	d
CMD_CE6	nand/tegra_nand.h	26;"	d
CMD_CE7	nand/tegra_nand.h	25;"	d
CMD_CLE	nand/tegra_nand.h	10;"	d
CMD_CLE_BYTES1	nand/tegra_nand.h	/^	CMD_CLE_BYTES1 = 0,$/;"	e	enum:__anon10
CMD_CLE_BYTES2	nand/tegra_nand.h	/^	CMD_CLE_BYTES2,$/;"	e	enum:__anon10
CMD_CLE_BYTES3	nand/tegra_nand.h	/^	CMD_CLE_BYTES3,$/;"	e	enum:__anon10
CMD_CLE_BYTES4	nand/tegra_nand.h	/^	CMD_CLE_BYTES4,$/;"	e	enum:__anon10
CMD_CLE_BYTE_SIZE_SHIFT	nand/tegra_nand.h	33;"	d
CMD_CODE_MASK	nand/vf610_nfc.c	85;"	d	file:
CMD_CODE_SHIFT	nand/vf610_nfc.c	86;"	d	file:
CMD_DMA	nand/denali.h	374;"	d
CMD_DONE_CLEAR_BIT	nand/vf610_nfc.c	124;"	d	file:
CMD_ERASE_4K	spi/sf_internal.h	42;"	d
CMD_ERASE_64K	spi/sf_internal.h	44;"	d
CMD_ERASE_CHIP	spi/sf_internal.h	43;"	d
CMD_EXTNADDR_RDEAR	spi/sf_internal.h	71;"	d
CMD_EXTNADDR_WREAR	spi/sf_internal.h	70;"	d
CMD_FLAG_STATUS	spi/sf_internal.h	64;"	d
CMD_GO	nand/tegra_nand.h	9;"	d
CMD_MAP_00	onenand/samsung.c	49;"	d	file:
CMD_MAP_01	onenand/samsung.c	51;"	d	file:
CMD_MAP_10	onenand/samsung.c	53;"	d	file:
CMD_MAP_11	onenand/samsung.c	55;"	d	file:
CMD_PAGE_PROGRAM	spi/sf_internal.h	48;"	d
CMD_PIO	nand/tegra_nand.h	12;"	d
CMD_QUAD_PAGE_PROGRAM	spi/sf_internal.h	51;"	d
CMD_RD_STATUS_CHK	nand/tegra_nand.h	23;"	d
CMD_READ_ARRAY_FAST	spi/sf_internal.h	55;"	d
CMD_READ_ARRAY_SLOW	spi/sf_internal.h	54;"	d
CMD_READ_CONFIG	spi/sf_internal.h	63;"	d
CMD_READ_DUAL_IO_FAST	spi/sf_internal.h	57;"	d
CMD_READ_DUAL_OUTPUT_FAST	spi/sf_internal.h	56;"	d
CMD_READ_ID	spi/sf_internal.h	60;"	d
CMD_READ_QUAD_IO_FAST	spi/sf_internal.h	59;"	d
CMD_READ_QUAD_OUTPUT_FAST	spi/sf_internal.h	58;"	d
CMD_READ_STATUS	spi/sf_internal.h	61;"	d
CMD_READ_STATUS1	spi/sf_internal.h	62;"	d
CMD_REG1_0	nand/tegra_nand.h	141;"	d
CMD_REG2_0	nand/tegra_nand.h	142;"	d
CMD_RX	nand/tegra_nand.h	14;"	d
CMD_R_BSY_CHK	nand/tegra_nand.h	24;"	d
CMD_SEC_CMD	nand/tegra_nand.h	15;"	d
CMD_SST_AAI_WP	spi/sf_internal.h	91;"	d
CMD_SST_BP	spi/sf_internal.h	90;"	d
CMD_TRANS_SIZE_PAGE	nand/tegra_nand.h	20;"	d
CMD_TRANS_SIZE_SHIFT	nand/tegra_nand.h	19;"	d
CMD_TX	nand/tegra_nand.h	13;"	d
CMD_WRITE_DISABLE	spi/sf_internal.h	49;"	d
CMD_WRITE_ENABLE	spi/sf_internal.h	50;"	d
CMD_WRITE_STATUS	spi/sf_internal.h	47;"	d
COLPOS	nand/mxc_nand.c	42;"	d	file:
COL_ADDR_MASK	nand/vf610_nfc.c	92;"	d	file:
COL_ADDR_SHIFT	nand/vf610_nfc.c	93;"	d	file:
COMMAND_0	nand/tegra_nand.h	8;"	d
COMMAND_CYCLE	nand/denali.c	76;"	d	file:
COMMAND_PHASE	nand/zynq_nand.c	72;"	d	file:
CONCAT	mtdconcat.c	54;"	d	file:
CONFIG_16BIT	nand/vf610_nfc.c	114;"	d	file:
CONFIG_ADDR_AUTO_INCR_BIT	nand/vf610_nfc.c	116;"	d	file:
CONFIG_BOOT_MODE_BIT	nand/vf610_nfc.c	115;"	d	file:
CONFIG_BUFNO_AUTO_INCR_BIT	nand/vf610_nfc.c	117;"	d	file:
CONFIG_CFG_DATA_SECTOR	spi/fsl_espi_spl.c	13;"	d	file:
CONFIG_DMA_REQ_BIT	nand/vf610_nfc.c	110;"	d	file:
CONFIG_ECC_MODE_MASK	nand/vf610_nfc.c	111;"	d	file:
CONFIG_ECC_MODE_SHIFT	nand/vf610_nfc.c	112;"	d	file:
CONFIG_ECC_SRAM_ADDR_MASK	nand/vf610_nfc.c	107;"	d	file:
CONFIG_ECC_SRAM_ADDR_SHIFT	nand/vf610_nfc.c	108;"	d	file:
CONFIG_ECC_SRAM_REQ_BIT	nand/vf610_nfc.c	109;"	d	file:
CONFIG_FAST_FLASH_BIT	nand/vf610_nfc.c	113;"	d	file:
CONFIG_KEYSTONE_NAND_MAX_RBL_PAGE	nand/davinci_nand.c	350;"	d	file:
CONFIG_KEYSTONE_NAND_MAX_RBL_PAGE	nand/davinci_nand.c	352;"	d	file:
CONFIG_MTD_NAND_ECC_SMC	nand/nand_ecc.c	34;"	d	file:
CONFIG_MTD_UBI_FASTMAP_AUTOCONVERT	ubi/build.c	89;"	d	file:
CONFIG_MTD_UBI_FM_DEBUG	ubi/build.c	93;"	d	file:
CONFIG_NAND_DATA_REG	nand/kmeter1_nand.c	13;"	d	file:
CONFIG_NAND_MODE_REG	nand/kmeter1_nand.c	12;"	d	file:
CONFIG_PAGE_CNT_MASK	nand/vf610_nfc.c	118;"	d	file:
CONFIG_PAGE_CNT_SHIFT	nand/vf610_nfc.c	119;"	d	file:
CONFIG_SYS_FLASH_CFI_WIDTH	cfi_flash.c	69;"	d	file:
CONFIG_SYS_FSL_IFC_BANK_COUNT	nand/fsl_ifc_nand.c	23;"	d	file:
CONFIG_SYS_NAND_BASE_LIST	nand/atmel_nand.c	1479;"	d	file:
CONFIG_SYS_NAND_BASE_LIST	nand/fsl_elbc_nand.c	799;"	d	file:
CONFIG_SYS_NAND_BASE_LIST	nand/fsl_ifc_nand.c	1054;"	d	file:
CONFIG_SYS_NAND_BASE_LIST	nand/nand.c	15;"	d	file:
CONFIG_SYS_NAND_BCR	nand/ndfc.c	25;"	d	file:
CONFIG_SYS_NAND_ONFI_DETECTION	nand/atmel_nand.c	36;"	d	file:
CONFIG_SYS_NDFC_EBC0_CFG	nand/ndfc.c	28;"	d	file:
CONFIG_U_BOOT_HDR_ADDR	nand/fsl_ifc_spl.c	280;"	d	file:
COPYBACK_DISABLE	nand/denali.h	46;"	d
COPYBACK_DISABLE__FLAG	nand/denali.h	47;"	d
COPYBACK_MODE	nand/denali.h	110;"	d
COPYBACK_MODE__VALUE	nand/denali.h	111;"	d
COPYBACK_SUPPORT	nand/denali.h	408;"	d
CRCPOLY_BE	ubi/crc32defs.h	7;"	d
CRCPOLY_LE	ubi/crc32defs.h	6;"	d
CRC_BE_BITS	ubi/crc32defs.h	15;"	d
CRC_LE_BITS	ubi/crc32.c	39;"	d	file:
CRC_LE_BITS	ubi/crc32defs.h	12;"	d
CS_SETUP_CNT	nand/denali.h	122;"	d
CS_SETUP_CNT__VALUE	nand/denali.h	123;"	d
CTRL_DMA_START	nand/lpc32xx_nand_slc.c	58;"	d	file:
CTRL_ECC_CLEAR	nand/lpc32xx_nand_slc.c	57;"	d	file:
CTRL_SW_RESET	nand/lpc32xx_nand_slc.c	56;"	d	file:
CUSTOM_CONF_PARAMS	nand/denali.h	387;"	d
CmdSet	jedec_flash.c	/^	const int CmdSet;$/;"	m	struct:amd_flash_info	file:
DATA_BLOCK_PTR_0	nand/tegra_nand.h	178;"	d
DATA_INTR	nand/denali.h	255;"	d
DATA_INTR_EN	nand/denali.h	259;"	d
DATA_INTR_EN__READ_DATA_AV	nand/denali.h	261;"	d
DATA_INTR_EN__WRITE_SPACE_AV	nand/denali.h	260;"	d
DATA_INTR__READ_DATA_AV	nand/denali.h	257;"	d
DATA_INTR__WRITE_SPACE_AV	nand/denali.h	256;"	d
DATA_PHASE	nand/zynq_nand.c	73;"	d	file:
DATA_TRANSFER_MODE	nand/denali.h	398;"	d
DEBUG_ELBC	nand/fsl_elbc_nand.c	23;"	d	file:
DEC_STATUS_0	nand/tegra_nand.h	182;"	d
DEC_STATUS_A_ECC_FAIL	nand/tegra_nand.h	183;"	d
DEC_STATUS_B_ECC_FAIL	nand/tegra_nand.h	184;"	d
DEFAULT_TIMEOUT_US	nand/sunxi_nand_spl.c	131;"	d	file:
DEFECTIVE_BLOCK	nand/denali.h	367;"	d
DEFINE_IDR	mtdcore.c	93;"	d	file:
DENALI_BUFFER_LOAD	nand/denali.c	69;"	d	file:
DENALI_BUFFER_WRITE	nand/denali.c	70;"	d	file:
DENALI_BUF_SIZE	nand/denali.h	424;"	d
DENALI_IRQ_ALL	nand/denali.c	25;"	d	file:
DENALI_LOCK	nand/denali.c	67;"	d	file:
DENALI_LOCK_TIGHT	nand/denali.c	68;"	d	file:
DENALI_READ	nand/denali.c	72;"	d	file:
DENALI_UNLOCK_END	nand/denali.c	66;"	d	file:
DENALI_UNLOCK_START	nand/denali.c	65;"	d	file:
DENALI_WRITE	nand/denali.c	73;"	d	file:
DEVICES_CONNECTED	nand/denali.h	131;"	d
DEVICES_CONNECTED__VALUE	nand/denali.h	132;"	d
DEVICE_ID	nand/denali.h	149;"	d
DEVICE_ID__VALUE	nand/denali.h	150;"	d
DEVICE_MAIN_AREA_SIZE	nand/denali.h	89;"	d
DEVICE_MAIN_AREA_SIZE__VALUE	nand/denali.h	90;"	d
DEVICE_PARAM_0	nand/denali.h	152;"	d
DEVICE_PARAM_0__VALUE	nand/denali.h	153;"	d
DEVICE_PARAM_1	nand/denali.h	155;"	d
DEVICE_PARAM_1__VALUE	nand/denali.h	156;"	d
DEVICE_PARAM_2	nand/denali.h	158;"	d
DEVICE_PARAM_2__VALUE	nand/denali.h	159;"	d
DEVICE_RESET	nand/denali.h	13;"	d
DEVICE_RESET__BANK0	nand/denali.h	14;"	d
DEVICE_RESET__BANK1	nand/denali.h	15;"	d
DEVICE_RESET__BANK2	nand/denali.h	16;"	d
DEVICE_RESET__BANK3	nand/denali.h	17;"	d
DEVICE_SPARE_AREA_SIZE	nand/denali.h	92;"	d
DEVICE_SPARE_AREA_SIZE__VALUE	nand/denali.h	93;"	d
DEVICE_WIDTH	nand/denali.h	86;"	d
DEVICE_WIDTH__VALUE	nand/denali.h	87;"	d
DIE_MASK	nand/denali.h	134;"	d
DIE_MASK__VALUE	nand/denali.h	135;"	d
DMA_CFG_A_0	nand/tegra_nand.h	175;"	d
DMA_CFG_B_0	nand/tegra_nand.h	176;"	d
DMA_ENABLE	nand/denali.h	295;"	d
DMA_ENABLE__FLAG	nand/denali.h	296;"	d
DMA_INTR	nand/denali.h	301;"	d
DMA_INTR_EN	nand/denali.h	309;"	d
DMA_INTR_EN__DESC_COMP_CHANNEL0	nand/denali.h	311;"	d
DMA_INTR_EN__DESC_COMP_CHANNEL1	nand/denali.h	312;"	d
DMA_INTR_EN__DESC_COMP_CHANNEL2	nand/denali.h	313;"	d
DMA_INTR_EN__DESC_COMP_CHANNEL3	nand/denali.h	314;"	d
DMA_INTR_EN__MEMCOPY_DESC_COMP	nand/denali.h	315;"	d
DMA_INTR_EN__TARGET_ERROR	nand/denali.h	310;"	d
DMA_INTR__DESC_COMP_CHANNEL0	nand/denali.h	303;"	d
DMA_INTR__DESC_COMP_CHANNEL1	nand/denali.h	304;"	d
DMA_INTR__DESC_COMP_CHANNEL2	nand/denali.h	305;"	d
DMA_INTR__DESC_COMP_CHANNEL3	nand/denali.h	306;"	d
DMA_INTR__MEMCOPY_DESC_COMP	nand/denali.h	307;"	d
DMA_INTR__TARGET_ERROR	nand/denali.h	302;"	d
DMA_MST_CTRL_0	nand/tegra_nand.h	146;"	d
DMA_MST_CTRL_BURST_16WORDS	nand/tegra_nand.h	/^	DMA_MST_CTRL_BURST_16WORDS	= 5 << DMA_MST_CTRL_BURST_SIZE_SHIFT$/;"	e	enum:__anon15
DMA_MST_CTRL_BURST_1WORDS	nand/tegra_nand.h	/^	DMA_MST_CTRL_BURST_1WORDS	= 2 << DMA_MST_CTRL_BURST_SIZE_SHIFT,$/;"	e	enum:__anon15
DMA_MST_CTRL_BURST_4WORDS	nand/tegra_nand.h	/^	DMA_MST_CTRL_BURST_4WORDS	= 3 << DMA_MST_CTRL_BURST_SIZE_SHIFT,$/;"	e	enum:__anon15
DMA_MST_CTRL_BURST_8WORDS	nand/tegra_nand.h	/^	DMA_MST_CTRL_BURST_8WORDS	= 4 << DMA_MST_CTRL_BURST_SIZE_SHIFT,$/;"	e	enum:__anon15
DMA_MST_CTRL_BURST_SIZE_MASK	nand/tegra_nand.h	160;"	d
DMA_MST_CTRL_BURST_SIZE_SHIFT	nand/tegra_nand.h	159;"	d
DMA_MST_CTRL_DIR_MASK	nand/tegra_nand.h	150;"	d
DMA_MST_CTRL_DIR_READ	nand/tegra_nand.h	151;"	d
DMA_MST_CTRL_DIR_WRITE	nand/tegra_nand.h	152;"	d
DMA_MST_CTRL_EN_A_DISABLE	nand/tegra_nand.h	169;"	d
DMA_MST_CTRL_EN_A_ENABLE	nand/tegra_nand.h	170;"	d
DMA_MST_CTRL_EN_A_MASK	nand/tegra_nand.h	168;"	d
DMA_MST_CTRL_EN_B_DISABLE	nand/tegra_nand.h	172;"	d
DMA_MST_CTRL_EN_B_ENABLE	nand/tegra_nand.h	173;"	d
DMA_MST_CTRL_EN_B_MASK	nand/tegra_nand.h	171;"	d
DMA_MST_CTRL_GO_DISABLE	nand/tegra_nand.h	148;"	d
DMA_MST_CTRL_GO_ENABLE	nand/tegra_nand.h	149;"	d
DMA_MST_CTRL_GO_MASK	nand/tegra_nand.h	147;"	d
DMA_MST_CTRL_IS_DMA_DONE	nand/tegra_nand.h	167;"	d
DMA_MST_CTRL_PERF_EN_DISABLE	nand/tegra_nand.h	154;"	d
DMA_MST_CTRL_PERF_EN_ENABLE	nand/tegra_nand.h	155;"	d
DMA_MST_CTRL_PERF_EN_MASK	nand/tegra_nand.h	153;"	d
DMA_MST_CTRL_REUSE_BUFFER_DISABLE	nand/tegra_nand.h	157;"	d
DMA_MST_CTRL_REUSE_BUFFER_ENABLE	nand/tegra_nand.h	158;"	d
DMA_MST_CTRL_REUSE_BUFFER_MASK	nand/tegra_nand.h	156;"	d
DO_CRC	ubi/crc32.c	128;"	d	file:
DO_CRC	ubi/crc32.c	186;"	d	file:
DO_CRC	ubi/crc32.c	225;"	d	file:
DO_CRC	ubi/crc32.c	88;"	d	file:
DRIVER_NAME	nand/mxc_nand.c	19;"	d	file:
DRIVER_NAME	nand/omap_elm.c	22;"	d	file:
DRV_NAME	nand/mpc5121_nfc.c	27;"	d	file:
DT	nand/denali.h	436;"	d
DataFlashInst	dataflash.c	/^static AT91S_DataFlash DataFlashInst;$/;"	v	file:
DevSize	jedec_flash.c	/^	const int DevSize;$/;"	m	struct:amd_flash_info	file:
EBA_RESERVED_PEBS	ubi/eba.c	43;"	d	file:
ECCCLEAR	nand/omap_gpmc.c	21;"	d	file:
ECCRESULTREG1	nand/omap_gpmc.c	22;"	d	file:
ECCSTEPS	nand/am335x_spl_bch.c	22;"	d	file:
ECCSTEPS	nand/atmel_nand.c	1303;"	d	file:
ECCSTEPS	nand/lpc32xx_nand_slc.c	92;"	d	file:
ECCSTEPS	nand/nand_spl_simple.c	17;"	d	file:
ECCTOTAL	nand/am335x_spl_bch.c	24;"	d	file:
ECCTOTAL	nand/atmel_nand.c	1305;"	d	file:
ECCTOTAL	nand/nand_spl_simple.c	19;"	d	file:
ECC_45_BYTE	nand/vf610_nfc.c	73;"	d	file:
ECC_60_BYTE	nand/vf610_nfc.c	74;"	d	file:
ECC_BYPASS	nand/vf610_nfc.c	72;"	d	file:
ECC_CORRECTION	nand/denali.h	101;"	d
ECC_CORRECTION__VALUE	nand/denali.h	102;"	d
ECC_DATA_ERROR	nand/tegra_nand.c	/^	ECC_DATA_ERROR = 1 << 1$/;"	e	enum:__anon19	file:
ECC_ENABLE	nand/denali.h	62;"	d
ECC_ENABLE_SELECT	nand/denali.h	412;"	d
ECC_ENABLE__FLAG	nand/denali.h	63;"	d
ECC_ERROR_ADDRESS	nand/denali.h	285;"	d
ECC_ERROR_ADDRESS__OFFSET	nand/denali.h	286;"	d
ECC_ERROR_ADDRESS__SECTOR_NR	nand/denali.h	287;"	d
ECC_ERROR_BLOCK_ADDRESS	nand/denali.h	278;"	d
ECC_ERROR_BLOCK_ADDRESS__VALUE	nand/denali.h	279;"	d
ECC_ERROR_PAGE_ADDRESS	nand/denali.h	281;"	d
ECC_ERROR_PAGE_ADDRESS__BANK	nand/denali.h	283;"	d
ECC_ERROR_PAGE_ADDRESS__VALUE	nand/denali.h	282;"	d
ECC_HW	nand/bfin_nand.c	366;"	d	file:
ECC_HW_MODE	nand/vf610_nfc.c	160;"	d	file:
ECC_HW_MODE	nand/vf610_nfc.c	175;"	d	file:
ECC_LAST_SHIFT	nand/zynq_nand.c	71;"	d	file:
ECC_OK	nand/tegra_nand.c	/^	ECC_OK,$/;"	e	enum:__anon19	file:
ECC_PTR_0	nand/tegra_nand.h	180;"	d
ECC_SECTOR_SIZE	nand/denali.h	422;"	d
ECC_SRAM_ADDR	nand/vf610_nfc.c	135;"	d	file:
ECC_STATE_ERR_CORR_COMP_N	nand/davinci_nand.c	45;"	d	file:
ECC_STATE_ERR_CORR_COMP_P	nand/davinci_nand.c	44;"	d	file:
ECC_STATE_NO_ERR	nand/davinci_nand.c	42;"	d	file:
ECC_STATE_TOO_MANY_ERRS	nand/davinci_nand.c	43;"	d	file:
ECC_STATUS	nand/vf610_nfc.c	137;"	d	file:
ECC_STATUS_ERR_COUNT	nand/vf610_nfc.c	139;"	d	file:
ECC_STATUS_MASK	nand/vf610_nfc.c	138;"	d	file:
ECC_TAG_ERROR	nand/tegra_nand.c	/^	ECC_TAG_ERROR = 1 << 0,$/;"	e	enum:__anon19	file:
ECC_THRESHOLD	nand/denali.h	275;"	d
ECC_THRESHOLD__VALUE	nand/denali.h	276;"	d
EEP_OPC_ERASE	mw_eeprom.c	9;"	d	file:
EEP_OPC_ERASE_ALL	mw_eeprom.c	13;"	d	file:
EEP_OPC_ERASE_DIS	mw_eeprom.c	16;"	d	file:
EEP_OPC_ERASE_EN	mw_eeprom.c	14;"	d	file:
EEP_OPC_READ	mw_eeprom.c	11;"	d	file:
EEP_OPC_WRITE	mw_eeprom.c	10;"	d	file:
EEP_OPC_WRITE_ALL	mw_eeprom.c	15;"	d	file:
ELM_DEFAULT_POLY	nand/omap_elm.c	23;"	d	file:
EMIF_NANDFSR_ECC_STATE_MASK	nand/davinci_nand.c	41;"	d	file:
EN29LV040A	jedec_flash.c	68;"	d	file:
ENABLE_PREFETCH	nand/omap_gpmc.c	351;"	d	file:
ENDIAN_SHIFT	ubi/crc32.c	127;"	d	file:
ENDIAN_SHIFT	ubi/crc32.c	224;"	d	file:
END_CMD_SHIFT	nand/zynq_nand.c	67;"	d	file:
END_CMD_VALID_SHIFT	nand/zynq_nand.c	68;"	d	file:
ERASEINFO	jedec_flash.c	155;"	d	file:
ERASE_CMD_CODE	nand/vf610_nfc.c	66;"	d	file:
ERASE_WAIT_CNT	nand/denali.h	28;"	d
ERASE_WAIT_CNT__VALUE	nand/denali.h	29;"	d
ERASE_WAIT_COUNT	nand/denali.h	402;"	d
ERR_ADDR_CYCLE	nand/arasan_nfc.c	118;"	d	file:
ERR_BBERR	nand/pxa3xx_nand.c	/^	ERR_BBERR	= -4,$/;"	e	enum:__anon17	file:
ERR_BLOCK_ADDR	nand/denali.h	253;"	d
ERR_BYTE	nand/fsl_elbc_nand.c	39;"	d	file:
ERR_BYTE	nand/fsl_ifc_nand.c	27;"	d	file:
ERR_CORERR	nand/pxa3xx_nand.c	/^	ERR_CORERR	= -5,$/;"	e	enum:__anon17	file:
ERR_CORRECTION_INFO	nand/denali.h	289;"	d
ERR_CORRECTION_INFO__BYTEMASK	nand/denali.h	290;"	d
ERR_CORRECTION_INFO__DEVICE_NR	nand/denali.h	291;"	d
ERR_CORRECTION_INFO__ERROR_TYPE	nand/denali.h	292;"	d
ERR_CORRECTION_INFO__LAST_ERR_INFO	nand/denali.h	293;"	d
ERR_DMABUSERR	nand/pxa3xx_nand.c	/^	ERR_DMABUSERR	= -1,$/;"	e	enum:__anon17	file:
ERR_NONE	nand/pxa3xx_nand.c	/^	ERR_NONE	= 0,$/;"	e	enum:__anon17	file:
ERR_PAGE_ADDR	nand/denali.h	252;"	d
ERR_SENDCMD	nand/pxa3xx_nand.c	/^	ERR_SENDCMD	= -2,$/;"	e	enum:__anon17	file:
ERR_UNCORERR	nand/pxa3xx_nand.c	/^	ERR_UNCORERR	= -3,$/;"	e	enum:__anon17	file:
ESPI_BOOT_IMAGE_ADDR	spi/fsl_espi_spl.c	12;"	d	file:
ESPI_BOOT_IMAGE_SIZE	spi/fsl_espi_spl.c	11;"	d	file:
EXT_CMD_TYPE_DISPATCH	nand/pxa3xx_nand.c	102;"	d	file:
EXT_CMD_TYPE_DISP_WR	nand/pxa3xx_nand.c	105;"	d	file:
EXT_CMD_TYPE_FINAL	nand/pxa3xx_nand.c	106;"	d	file:
EXT_CMD_TYPE_LAST_RW	nand/pxa3xx_nand.c	107;"	d	file:
EXT_CMD_TYPE_MONO	nand/pxa3xx_nand.c	108;"	d	file:
EXT_CMD_TYPE_NAKED_RW	nand/pxa3xx_nand.c	103;"	d	file:
EXT_CMD_TYPE_READ	nand/pxa3xx_nand.c	104;"	d	file:
E_FSR	spi/sf_internal.h	127;"	d
FDT_NAND_MAX_TCR_TAR_TRR	nand/tegra_nand.c	/^	FDT_NAND_MAX_TCR_TAR_TRR,$/;"	e	enum:__anon20	file:
FDT_NAND_MAX_TCS_TCH_TALS_TALH	nand/tegra_nand.c	/^	FDT_NAND_MAX_TCS_TCH_TALS_TALH,$/;"	e	enum:__anon20	file:
FDT_NAND_MAX_TRP_TREA	nand/tegra_nand.c	/^	FDT_NAND_MAX_TRP_TREA,$/;"	e	enum:__anon20	file:
FDT_NAND_TADL	nand/tegra_nand.c	/^	FDT_NAND_TADL,$/;"	e	enum:__anon20	file:
FDT_NAND_TIMING_COUNT	nand/tegra_nand.c	/^	FDT_NAND_TIMING_COUNT$/;"	e	enum:__anon20	file:
FDT_NAND_TRH	nand/tegra_nand.c	/^	FDT_NAND_TRH,$/;"	e	enum:__anon20	file:
FDT_NAND_TWB	nand/tegra_nand.c	/^	FDT_NAND_TWB,$/;"	e	enum:__anon20	file:
FDT_NAND_TWH	nand/tegra_nand.c	/^	FDT_NAND_TWH,$/;"	e	enum:__anon20	file:
FDT_NAND_TWHR	nand/tegra_nand.c	/^	FDT_NAND_TWHR,$/;"	e	enum:__anon20	file:
FDT_NAND_TWP	nand/tegra_nand.c	/^	FDT_NAND_TWP,$/;"	e	enum:__anon20	file:
FEATURES	nand/denali.h	194;"	d
FEATURES__CMD_DMA	nand/denali.h	198;"	d
FEATURES__DMA	nand/denali.h	197;"	d
FEATURES__ECC_MAX_ERR	nand/denali.h	196;"	d
FEATURES__GPREG	nand/denali.h	201;"	d
FEATURES__INDEX_ADDR	nand/denali.h	202;"	d
FEATURES__N_BANKS	nand/denali.h	195;"	d
FEATURES__PARTITION	nand/denali.h	199;"	d
FEATURES__XDMA_SIDEBAND	nand/denali.h	200;"	d
FIFO_CTRL_0	nand/tegra_nand.h	177;"	d
FIRST_BLOCK_OF_NEXT_PLANE	nand/denali.h	137;"	d
FIRST_BLOCK_OF_NEXT_PLANE__VALUE	nand/denali.h	138;"	d
FLASH_ACR_DCEN	stm32_flash.h	27;"	d
FLASH_ACR_ICEN	stm32_flash.h	26;"	d
FLASH_ACR_PRFTEN	stm32_flash.h	25;"	d
FLASH_ACR_WS	stm32_flash.h	24;"	d
FLASH_ID	st_smi.c	34;"	d	file:
FLASH_SHOW_PROGRESS	cfi_flash.c	1289;"	d	file:
FLASH_SHOW_PROGRESS	cfi_flash.c	1302;"	d	file:
GLOBAL_INT_ENABLE	nand/denali.h	65;"	d
GLOBAL_INT_EN_FLAG	nand/denali.h	66;"	d
GLOB_HWCTL_DEFAULT_BLKS	nand/denali.h	385;"	d
GOOD_BLOCK	nand/denali.h	366;"	d
GPREG_0	nand/denali.h	263;"	d
GPREG_0__VALUE	nand/denali.h	264;"	d
GPREG_1	nand/denali.h	266;"	d
GPREG_1__VALUE	nand/denali.h	267;"	d
GPREG_2	nand/denali.h	269;"	d
GPREG_2__VALUE	nand/denali.h	270;"	d
GPREG_3	nand/denali.h	272;"	d
GPREG_3__VALUE	nand/denali.h	273;"	d
ICR_ADDR4	nand/lpc32xx_nand_mlc.c	63;"	d	file:
ICR_LARGE_BLOCKS	nand/lpc32xx_nand_mlc.c	62;"	d	file:
IDCODE_LEN	spi/sandbox.c	62;"	d	file:
IDLE_CLEAR_BIT	nand/vf610_nfc.c	125;"	d	file:
IDLE_EN_BIT	nand/vf610_nfc.c	123;"	d	file:
IDLE_IRQ_BIT	nand/vf610_nfc.c	122;"	d	file:
IER_0	nand/tegra_nand.h	59;"	d
IGNORE_ECC_DONE	nand/denali.h	298;"	d
IGNORE_ECC_DONE__FLAG	nand/denali.h	299;"	d
INDEX_CTRL_REG	nand/denali.h	389;"	d
INDEX_DATA_REG	nand/denali.h	390;"	d
INFO	spi/spi_flash_ids.c	17;"	d	file:
INFO6	spi/spi_flash_ids.c	31;"	d	file:
INIT1	ubi/crc32.c	479;"	d	file:
INIT2	ubi/crc32.c	480;"	d	file:
INIT_BUFFER_SIZE	nand/pxa3xx_nand.c	32;"	d	file:
INTEL_CE4100	nand/denali.h	434;"	d
INTEL_MRST	nand/denali.h	435;"	d
INTR_EN	nand/denali.h	208;"	d
INTR_EN__DMA_CMD_COMP	nand/denali.h	236;"	d
INTR_EN__ECC_ERR	nand/denali.h	235;"	d
INTR_EN__ECC_TRANSACTION_DONE	nand/denali.h	234;"	d
INTR_EN__ERASE_COMP	nand/denali.h	242;"	d
INTR_EN__ERASE_FAIL	nand/denali.h	239;"	d
INTR_EN__INT_ACT	nand/denali.h	246;"	d
INTR_EN__LOAD_COMP	nand/denali.h	240;"	d
INTR_EN__LOCKED_BLK	nand/denali.h	244;"	d
INTR_EN__PAGE_XFER_INC	nand/denali.h	249;"	d
INTR_EN__PIPE_CMD_ERR	nand/denali.h	248;"	d
INTR_EN__PIPE_CPYBCK_CMD_COMP	nand/denali.h	243;"	d
INTR_EN__PROGRAM_COMP	nand/denali.h	241;"	d
INTR_EN__PROGRAM_FAIL	nand/denali.h	238;"	d
INTR_EN__RST_COMP	nand/denali.h	247;"	d
INTR_EN__TIME_OUT	nand/denali.h	237;"	d
INTR_EN__UNSUP_CMD	nand/denali.h	245;"	d
INTR_STATUS	nand/denali.h	207;"	d
INTR_STATUS__DMA_CMD_COMP	nand/denali.h	219;"	d
INTR_STATUS__ECC_ERR	nand/denali.h	218;"	d
INTR_STATUS__ECC_TRANSACTION_DONE	nand/denali.h	217;"	d
INTR_STATUS__ECC_UNCOR_ERR	nand/denali.h	216;"	d
INTR_STATUS__ERASE_COMP	nand/denali.h	225;"	d
INTR_STATUS__ERASE_FAIL	nand/denali.h	222;"	d
INTR_STATUS__INT_ACT	nand/denali.h	229;"	d
INTR_STATUS__LOAD_COMP	nand/denali.h	223;"	d
INTR_STATUS__LOCKED_BLK	nand/denali.h	227;"	d
INTR_STATUS__PAGE_XFER_INC	nand/denali.h	232;"	d
INTR_STATUS__PIPE_CMD_ERR	nand/denali.h	231;"	d
INTR_STATUS__PIPE_CPYBCK_CMD_COMP	nand/denali.h	226;"	d
INTR_STATUS__PROGRAM_COMP	nand/denali.h	224;"	d
INTR_STATUS__PROGRAM_FAIL	nand/denali.h	221;"	d
INTR_STATUS__RST_COMP	nand/denali.h	230;"	d
INTR_STATUS__TIME_OUT	nand/denali.h	220;"	d
INTR_STATUS__UNSUP_CMD	nand/denali.h	228;"	d
INT_MONITOR_CYCLE_COUNT	nand/denali.h	403;"	d
INT_MON_CYCCNT	nand/denali.h	31;"	d
INT_MON_CYCCNT__VALUE	nand/denali.h	32;"	d
INT_STAT_RDY	nand/lpc32xx_nand_slc.c	66;"	d	file:
INT_STAT_TC	nand/lpc32xx_nand_slc.c	65;"	d	file:
ISR_0	nand/tegra_nand.h	55;"	d
ISR_CONTROLLER_READY	nand/lpc32xx_nand_mlc.c	70;"	d	file:
ISR_DECODER_ERROR	nand/lpc32xx_nand_mlc.c	74;"	d	file:
ISR_DECODER_ERRORS	nand/lpc32xx_nand_mlc.c	72;"	d	file:
ISR_DECODER_FAILURE	nand/lpc32xx_nand_mlc.c	73;"	d	file:
ISR_ECC_READY	nand/lpc32xx_nand_mlc.c	71;"	d	file:
ISR_IS_CMD_DONE	nand/tegra_nand.h	56;"	d
ISR_IS_ECC_ERR	nand/tegra_nand.h	57;"	d
ISR_NAND_READY	nand/lpc32xx_nand_mlc.c	69;"	d	file:
IS_POW2PS	spi/sf_dataflash.c	455;"	d	file:
JEDEC_EXT	spi/sf_internal.h	101;"	d
JEDEC_ID	spi/sf_internal.h	100;"	d
JEDEC_MFR	spi/sf_internal.h	99;"	d
KB9202_NAND_BUSY	nand/kb9202_nand.c	26;"	d	file:
KB9202_NAND_NCE	nand/kb9202_nand.c	25;"	d	file:
KB9202_SMC2_NWS	nand/kb9202_nand.c	28;"	d	file:
KB9202_SMC2_RWHOLD	nand/kb9202_nand.c	31;"	d	file:
KB9202_SMC2_RWSETUP	nand/kb9202_nand.c	30;"	d	file:
KB9202_SMC2_TDF	nand/kb9202_nand.c	29;"	d	file:
KPN_ALE	nand/kmeter1_nand.c	25;"	d	file:
KPN_CE1N	nand/kmeter1_nand.c	24;"	d	file:
KPN_CE2N	nand/kmeter1_nand.c	23;"	d	file:
KPN_CLE	nand/kmeter1_nand.c	26;"	d	file:
KPN_DEFAULT_CHIP_DELAY	nand/kmeter1_nand.c	28;"	d	file:
KPN_RDY1	nand/kmeter1_nand.c	21;"	d	file:
KPN_RDY2	nand/kmeter1_nand.c	20;"	d	file:
KPN_WPN	nand/kmeter1_nand.c	22;"	d	file:
LOAD_WAIT_CNT	nand/denali.h	22;"	d
LOAD_WAIT_CNT__VALUE	nand/denali.h	23;"	d
LOAD_WAIT_COUNT	nand/denali.h	400;"	d
LOCK_KEY	pic32_flash.c	38;"	d	file:
LOCK_PR_UNLOCK_KEY	nand/lpc32xx_nand_mlc.c	59;"	d	file:
LOGICAL_PAGE_DATA_SIZE	nand/denali.h	161;"	d
LOGICAL_PAGE_DATA_SIZE__VALUE	nand/denali.h	162;"	d
LOGICAL_PAGE_SPARE_SIZE	nand/denali.h	164;"	d
LOGICAL_PAGE_SPARE_SIZE__VALUE	nand/denali.h	165;"	d
LPC32X_NAND_TIMEOUT	nand/lpc32xx_nand_mlc.c	77;"	d	file:
LP_OPTIONS	nand/nand_ids.c	13;"	d	file:
LP_OPTIONS	nand/tegra_nand.h	211;"	d
LP_OPTIONS16	nand/nand_ids.c	14;"	d	file:
LTESR_NAND_MASK	nand/fsl_elbc_nand.c	41;"	d	file:
MAIN_ACCESS	nand/denali.c	61;"	d	file:
MAIN_ACCESS	nand/denali_spl.c	15;"	d	file:
MAIN_SINGLEBIT_ERROR	nand/mxc_nand.c	46;"	d	file:
MAIN_SPARE_ACCESS	nand/denali.c	62;"	d	file:
MAKE_COMPARABLE_REVISION	nand/denali.h	169;"	d
MANUFACTURER_ID	nand/denali.h	146;"	d
MANUFACTURER_ID__VALUE	nand/denali.h	147;"	d
MAP_00	onenand/samsung.c	42;"	d	file:
MAP_01	onenand/samsung.c	43;"	d	file:
MAP_10	onenand/samsung.c	44;"	d	file:
MAP_11	onenand/samsung.c	45;"	d	file:
MASK_ALE	nand/kb9202_nand.c	22;"	d	file:
MASK_CLE	nand/kb9202_nand.c	23;"	d	file:
MAX_BANKS	nand/fsl_elbc_nand.c	38;"	d	file:
MAX_BANKS	nand/fsl_ifc_nand.c	26;"	d	file:
MAX_BLK_ADDR	nand/denali.h	358;"	d
MAX_BLK_ADDR__VALUE	nand/denali.h	359;"	d
MAX_IDR_ID	mtdcore.c	82;"	d	file:
MAX_MTD_UBI_BEB_LIMIT	ubi/build.c	49;"	d	file:
MAX_RD_DELAY	nand/denali.h	119;"	d
MAX_RD_DELAY__VALUE	nand/denali.h	120;"	d
MIN_BLK_ADDR	nand/denali.h	355;"	d
MIN_BLK_ADDR__VALUE	nand/denali.h	356;"	d
MIN_MAX_BANK	nand/denali.h	361;"	d
MIN_MAX_BANK__MAX_VALUE	nand/denali.h	363;"	d
MIN_MAX_BANK__MIN_VALUE	nand/denali.h	362;"	d
MODE_00	nand/denali.h	392;"	d
MODE_01	nand/denali.h	393;"	d
MODE_10	nand/denali.h	394;"	d
MODE_11	nand/denali.h	395;"	d
MOVE_CANCEL_RACE	ubi/ubi.h	/^	MOVE_CANCEL_RACE = 1,$/;"	e	enum:__anon2
MOVE_RETRY	ubi/ubi.h	/^	MOVE_RETRY,$/;"	e	enum:__anon2
MOVE_SOURCE_RD_ERR	ubi/ubi.h	/^	MOVE_SOURCE_RD_ERR,$/;"	e	enum:__anon2
MOVE_TARGET_BITFLIPS	ubi/ubi.h	/^	MOVE_TARGET_BITFLIPS,$/;"	e	enum:__anon2
MOVE_TARGET_RD_ERR	ubi/ubi.h	/^	MOVE_TARGET_RD_ERR,$/;"	e	enum:__anon2
MOVE_TARGET_WR_ERR	ubi/ubi.h	/^	MOVE_TARGET_WR_ERR,$/;"	e	enum:__anon2
MTD_DEVT	mtdcore.c	163;"	d	file:
MTD_PARAM_LEN_MAX	ubi/build.c	43;"	d	file:
MTD_PARAM_MAX_COUNT	ubi/build.c	46;"	d	file:
MTD_UADDR_0x0555_0x02AA	jedec_flash.c	/^	MTD_UADDR_0x0555_0x02AA,$/;"	e	enum:uaddr	file:
MTD_UADDR_0x0555_0x0AAA	jedec_flash.c	/^	MTD_UADDR_0x0555_0x0AAA,$/;"	e	enum:uaddr	file:
MTD_UADDR_0x0AAA_0x0555	jedec_flash.c	/^	MTD_UADDR_0x0AAA_0x0555,$/;"	e	enum:uaddr	file:
MTD_UADDR_0x5555_0x2AAA	jedec_flash.c	/^	MTD_UADDR_0x5555_0x2AAA,$/;"	e	enum:uaddr	file:
MTD_UADDR_DONT_CARE	jedec_flash.c	/^	MTD_UADDR_DONT_CARE,		\/* Requires an arbitrary address *\/$/;"	e	enum:uaddr	file:
MTD_UADDR_NOT_SUPPORTED	jedec_flash.c	/^	MTD_UADDR_NOT_SUPPORTED = 0,	\/* data width not supported *\/$/;"	e	enum:uaddr	file:
MTD_UADDR_UNNECESSARY	jedec_flash.c	/^	MTD_UADDR_UNNECESSARY,		\/* Does not require any address *\/$/;"	e	enum:uaddr	file:
MULTIPLANE_ADDRESS_RESTRICT	nand/denali.h	417;"	d
MULTIPLANE_ADDR_RESTRICT	nand/denali.h	98;"	d
MULTIPLANE_ADDR_RESTRICT__FLAG	nand/denali.h	99;"	d
MULTIPLANE_OPERATION	nand/denali.h	40;"	d
MULTIPLANE_OPERATION_SUPPORT	nand/denali.h	405;"	d
MULTIPLANE_OPERATION__FLAG	nand/denali.h	41;"	d
MULTIPLANE_READ_ENABLE	nand/denali.h	43;"	d
MULTIPLANE_READ_ENABLE__FLAG	nand/denali.h	44;"	d
MX29LV040	jedec_flash.c	59;"	d	file:
MXC_NFC_V1	nand/mxc_nand.h	29;"	d
MXC_NFC_V2_1	nand/mxc_nand.h	34;"	d
MXC_NFC_V3	nand/mxc_nand.h	39;"	d
MXC_NFC_V3_2	nand/mxc_nand.h	40;"	d
MXS_NAND_BCH_TIMEOUT	nand/mxs_nand.c	47;"	d	file:
MXS_NAND_BITS_PER_ECC_LEVEL	nand/mxs_nand.c	39;"	d	file:
MXS_NAND_CHUNK_DATA_CHUNK_SIZE	nand/mxs_nand.c	32;"	d	file:
MXS_NAND_CHUNK_DATA_CHUNK_SIZE_SHIFT	nand/mxs_nand.c	34;"	d	file:
MXS_NAND_CHUNK_DATA_CHUNK_SIZE_SHIFT	nand/mxs_nand.c	36;"	d	file:
MXS_NAND_COMMAND_BUFFER_SIZE	nand/mxs_nand.c	42;"	d	file:
MXS_NAND_COMMAND_BUFFER_SIZE	nand/mxs_nand.c	44;"	d	file:
MXS_NAND_DMA_DESCRIPTOR_COUNT	nand/mxs_nand.c	30;"	d	file:
MXS_NAND_METADATA_SIZE	nand/mxs_nand.c	38;"	d	file:
NAND_4BITECC_MASK	nand/davinci_nand.c	40;"	d	file:
NAND_ACTCEBOOT_BIT	nand/kirkwood_nand.c	31;"	d	file:
NAND_ADDR_CYCL_BOTH	nand/arasan_nfc.c	/^	NAND_ADDR_CYCL_BOTH,$/;"	e	enum:addr_cycles	file:
NAND_ADDR_CYCL_COL	nand/arasan_nfc.c	/^	NAND_ADDR_CYCL_COL,$/;"	e	enum:addr_cycles	file:
NAND_ADDR_CYCL_NONE	nand/arasan_nfc.c	/^	NAND_ADDR_CYCL_NONE,$/;"	e	enum:addr_cycles	file:
NAND_ADDR_CYCL_ONE	nand/arasan_nfc.c	/^	NAND_ADDR_CYCL_ONE,$/;"	e	enum:addr_cycles	file:
NAND_ADDR_CYCL_ROW	nand/arasan_nfc.c	/^	NAND_ADDR_CYCL_ROW,$/;"	e	enum:addr_cycles	file:
NAND_CMD_LOCK_STATUS	nand/nand_util.c	189;"	d	file:
NAND_CMD_LOCK_TIGHT	nand/nand_util.c	188;"	d	file:
NAND_CMD_TIMEOUT_MS	nand/tegra_nand.c	25;"	d	file:
NAND_DEFAULT_TIMINGS	nand/denali.c	17;"	d	file:
NAND_ECC_BUSY	nand/davinci_nand.c	39;"	d	file:
NAND_IS_512	nand/bfin_nand.c	55;"	d	file:
NAND_MXC_2K_MULTI_CYCLE	nand/mxc_nand.h	53;"	d
NAND_MXC_NR_BUFS	nand/mxc_nand.h	50;"	d
NAND_MXC_NR_BUFS	nand/mxc_nand.h	55;"	d
NAND_MXC_REG_OFFSET	nand/mxc_nand.h	52;"	d
NAND_MXC_REG_OFFSET	nand/mxc_nand.h	57;"	d
NAND_MXC_SPARE_BUF_SIZE	nand/mxc_nand.h	51;"	d
NAND_MXC_SPARE_BUF_SIZE	nand/mxc_nand.h	56;"	d
NAND_PLAT_DEV_READY	nand/nand_plat.c	21;"	d	file:
NAND_STOP_DELAY	nand/pxa3xx_nand.c	24;"	d	file:
NAND_TIMEOUT	nand/davinci_nand.c	38;"	d	file:
NBUSY	nand/bfin_nand.c	41;"	d	file:
NBUSYIRQ	nand/bfin_nand.c	49;"	d	file:
NDBDR0	nand/pxa3xx_nand.c	40;"	d	file:
NDBDR1	nand/pxa3xx_nand.c	41;"	d	file:
NDCB0	nand/pxa3xx_nand.c	44;"	d	file:
NDCB0_ADDR_CYC	nand/pxa3xx_nand.c	97;"	d	file:
NDCB0_ADDR_CYC_MASK	nand/pxa3xx_nand.c	96;"	d	file:
NDCB0_ADDR_CYC_SHIFT	nand/pxa3xx_nand.c	100;"	d	file:
NDCB0_AUTO_RS	nand/pxa3xx_nand.c	88;"	d	file:
NDCB0_CMD1_MASK	nand/pxa3xx_nand.c	99;"	d	file:
NDCB0_CMD2_MASK	nand/pxa3xx_nand.c	98;"	d	file:
NDCB0_CMD_TYPE	nand/pxa3xx_nand.c	93;"	d	file:
NDCB0_CMD_TYPE_MASK	nand/pxa3xx_nand.c	92;"	d	file:
NDCB0_CSEL	nand/pxa3xx_nand.c	89;"	d	file:
NDCB0_DBC	nand/pxa3xx_nand.c	95;"	d	file:
NDCB0_EXT_CMD_TYPE	nand/pxa3xx_nand.c	91;"	d	file:
NDCB0_EXT_CMD_TYPE_MASK	nand/pxa3xx_nand.c	90;"	d	file:
NDCB0_LEN_OVRD	nand/pxa3xx_nand.c	86;"	d	file:
NDCB0_NC	nand/pxa3xx_nand.c	94;"	d	file:
NDCB0_ST_ROW_EN	nand/pxa3xx_nand.c	87;"	d	file:
NDCB1	nand/pxa3xx_nand.c	45;"	d	file:
NDCB2	nand/pxa3xx_nand.c	46;"	d	file:
NDCR	nand/pxa3xx_nand.c	35;"	d	file:
NDCR_CLR_PG_CNT	nand/pxa3xx_nand.c	58;"	d	file:
NDCR_DMA_EN	nand/pxa3xx_nand.c	50;"	d	file:
NDCR_DWIDTH_C	nand/pxa3xx_nand.c	52;"	d	file:
NDCR_DWIDTH_M	nand/pxa3xx_nand.c	53;"	d	file:
NDCR_ECC_EN	nand/pxa3xx_nand.c	49;"	d	file:
NDCR_INT_MASK	nand/pxa3xx_nand.c	66;"	d	file:
NDCR_NAND_MODE	nand/pxa3xx_nand.c	57;"	d	file:
NDCR_NCSX	nand/pxa3xx_nand.c	55;"	d	file:
NDCR_ND_ARB_EN	nand/pxa3xx_nand.c	65;"	d	file:
NDCR_ND_MODE	nand/pxa3xx_nand.c	56;"	d	file:
NDCR_ND_RUN	nand/pxa3xx_nand.c	51;"	d	file:
NDCR_PAGE_SZ	nand/pxa3xx_nand.c	54;"	d	file:
NDCR_PG_PER_BLK	nand/pxa3xx_nand.c	64;"	d	file:
NDCR_RA_START	nand/pxa3xx_nand.c	63;"	d	file:
NDCR_RD_ID_CNT	nand/pxa3xx_nand.c	61;"	d	file:
NDCR_RD_ID_CNT_MASK	nand/pxa3xx_nand.c	60;"	d	file:
NDCR_SPARE_EN	nand/pxa3xx_nand.c	48;"	d	file:
NDCR_STOP_ON_UNCOR	nand/pxa3xx_nand.c	59;"	d	file:
NDDB	nand/pxa3xx_nand.c	43;"	d	file:
NDECCCTRL	nand/pxa3xx_nand.c	42;"	d	file:
NDPCR	nand/pxa3xx_nand.c	39;"	d	file:
NDSR	nand/pxa3xx_nand.c	38;"	d	file:
NDSR_CORERR	nand/pxa3xx_nand.c	81;"	d	file:
NDSR_CS0_BBD	nand/pxa3xx_nand.c	78;"	d	file:
NDSR_CS0_CMDD	nand/pxa3xx_nand.c	76;"	d	file:
NDSR_CS0_PAGED	nand/pxa3xx_nand.c	74;"	d	file:
NDSR_CS1_BBD	nand/pxa3xx_nand.c	79;"	d	file:
NDSR_CS1_CMDD	nand/pxa3xx_nand.c	77;"	d	file:
NDSR_CS1_PAGED	nand/pxa3xx_nand.c	75;"	d	file:
NDSR_ERR_CNT	nand/pxa3xx_nand.c	71;"	d	file:
NDSR_ERR_CNT_MASK	nand/pxa3xx_nand.c	70;"	d	file:
NDSR_ERR_CNT_OFF	nand/pxa3xx_nand.c	69;"	d	file:
NDSR_FLASH_RDY	nand/pxa3xx_nand.c	73;"	d	file:
NDSR_MASK	nand/pxa3xx_nand.c	68;"	d	file:
NDSR_RDDREQ	nand/pxa3xx_nand.c	83;"	d	file:
NDSR_RDY	nand/pxa3xx_nand.c	72;"	d	file:
NDSR_UNCORERR	nand/pxa3xx_nand.c	80;"	d	file:
NDSR_WRCMDREQ	nand/pxa3xx_nand.c	84;"	d	file:
NDSR_WRDREQ	nand/pxa3xx_nand.c	82;"	d	file:
NDTR0CS0	nand/pxa3xx_nand.c	36;"	d	file:
NDTR0_tCH	nand/pxa3xx_nand.c	291;"	d	file:
NDTR0_tCS	nand/pxa3xx_nand.c	292;"	d	file:
NDTR0_tRH	nand/pxa3xx_nand.c	295;"	d	file:
NDTR0_tRP	nand/pxa3xx_nand.c	296;"	d	file:
NDTR0_tWH	nand/pxa3xx_nand.c	293;"	d	file:
NDTR0_tWP	nand/pxa3xx_nand.c	294;"	d	file:
NDTR1CS0	nand/pxa3xx_nand.c	37;"	d	file:
NDTR1_tAR	nand/pxa3xx_nand.c	300;"	d	file:
NDTR1_tR	nand/pxa3xx_nand.c	298;"	d	file:
NDTR1_tWHR	nand/pxa3xx_nand.c	299;"	d	file:
NFC_ACCESS_DIR	nand/sunxi_nand.c	117;"	d	file:
NFC_ACCESS_DIR	nand/sunxi_nand_spl.c	59;"	d	file:
NFC_ACTIVE_CS_MASK	nand/mpc5121_nfc.c	65;"	d	file:
NFC_ACTIVE_CS_SHIFT	nand/mpc5121_nfc.c	64;"	d	file:
NFC_ADDR	nand/mxc_nand.h	133;"	d
NFC_ADDRESS	nand/mpc5121_nfc.c	89;"	d	file:
NFC_ADDR_HIGH	nand/sunxi_nand_spl.c	21;"	d	file:
NFC_ADDR_LOW	nand/sunxi_nand_spl.c	20;"	d	file:
NFC_ADDR_NUM_OFFSET	nand/sunxi_nand_spl.c	57;"	d	file:
NFC_ADR_NUM	nand/sunxi_nand.c	115;"	d	file:
NFC_ADR_NUM_MSK	nand/sunxi_nand.c	114;"	d	file:
NFC_B2R_INT_ENABLE	nand/sunxi_nand.c	94;"	d	file:
NFC_BIG_ENDIAN	nand/mpc5121_nfc.c	76;"	d	file:
NFC_BLS_UNLOCKED	nand/mpc5121_nfc.c	68;"	d	file:
NFC_BUF_ADDR	nand/mpc5121_nfc.c	42;"	d	file:
NFC_BUS_WIDTH_16	nand/sunxi_nand.c	72;"	d	file:
NFC_BUS_WIDTH_8	nand/sunxi_nand.c	71;"	d	file:
NFC_BUS_WIDTH_MSK	nand/sunxi_nand.c	70;"	d	file:
NFC_CACHE_SWAP	nand/vf610_nfc.c	44;"	d	file:
NFC_CE	nand/mpc5121_nfc.c	78;"	d	file:
NFC_CE_CTL	nand/sunxi_nand.c	77;"	d	file:
NFC_CE_SEL	nand/sunxi_nand.c	76;"	d	file:
NFC_CE_SEL_MSK	nand/sunxi_nand.c	75;"	d	file:
NFC_CMD	nand/mxc_nand.h	130;"	d
NFC_CMD	nand/sunxi_nand.c	113;"	d	file:
NFC_CMD	nand/sunxi_nand_spl.c	24;"	d	file:
NFC_CMD_FAIL	nand/mpc5121_nfc.c	94;"	d	file:
NFC_CMD_FIFO_STATUS	nand/sunxi_nand.c	88;"	d	file:
NFC_CMD_HIGH_BYTE_MSK	nand/sunxi_nand.c	112;"	d	file:
NFC_CMD_INT_ENABLE	nand/sunxi_nand.c	95;"	d	file:
NFC_CMD_INT_FLAG	nand/sunxi_nand.c	86;"	d	file:
NFC_CMD_LOW_BYTE_MSK	nand/sunxi_nand.c	111;"	d	file:
NFC_CMD_READSTART	nand/sunxi_nand_spl.c	81;"	d	file:
NFC_CMD_RNDOUT	nand/sunxi_nand_spl.c	80;"	d	file:
NFC_CMD_RNDOUTSTART	nand/sunxi_nand_spl.c	79;"	d	file:
NFC_CMD_TYPE_MSK	nand/sunxi_nand.c	127;"	d	file:
NFC_CNT	nand/sunxi_nand_spl.c	23;"	d	file:
NFC_COL_ADDR	nand/vf610_nfc.c	39;"	d	file:
NFC_COMMAND	nand/mpc5121_nfc.c	88;"	d	file:
NFC_CONFIG	nand/mpc5121_nfc.c	45;"	d	file:
NFC_CONFIG1	nand/mpc5121_nfc.c	51;"	d	file:
NFC_CONFIG1_CE	nand/mxc_nand.h	150;"	d
NFC_CONFIG1_CE	nand/mxc_nand.h	153;"	d
NFC_CONFIG1_RST	nand/mxc_nand.h	149;"	d
NFC_CONFIG1_RST	nand/mxc_nand.h	154;"	d
NFC_CONFIG1_SP_EN	nand/mxc_nand.h	148;"	d
NFC_CONFIG1_SP_EN	nand/mxc_nand.h	152;"	d
NFC_CONFIG2	nand/mpc5121_nfc.c	52;"	d	file:
NFC_CTL	nand/sunxi_nand_spl.c	15;"	d	file:
NFC_CTL_EN	nand/sunxi_nand_spl.c	42;"	d	file:
NFC_CTL_PAGE_SIZE	nand/sunxi_nand_spl.c	46;"	d	file:
NFC_CTL_PAGE_SIZE_MASK	nand/sunxi_nand_spl.c	45;"	d	file:
NFC_CTL_RAM_METHOD	nand/sunxi_nand_spl.c	44;"	d	file:
NFC_CTL_RESET	nand/sunxi_nand_spl.c	43;"	d	file:
NFC_DATA_SWAP_METHOD	nand/sunxi_nand.c	123;"	d	file:
NFC_DATA_SWAP_METHOD	nand/sunxi_nand_spl.c	65;"	d	file:
NFC_DATA_TRANS	nand/sunxi_nand.c	118;"	d	file:
NFC_DATA_TRANS	nand/sunxi_nand_spl.c	60;"	d	file:
NFC_DEBUG	nand/sunxi_nand_spl.c	30;"	d	file:
NFC_DEBUG_CTL	nand/sunxi_nand.c	82;"	d	file:
NFC_DEFAULT_TIMEOUT_MS	nand/sunxi_nand.c	161;"	d	file:
NFC_DMA_INT_ENABLE	nand/sunxi_nand.c	96;"	d	file:
NFC_DMA_INT_FLAG	nand/sunxi_nand.c	87;"	d	file:
NFC_ECC_4BIT	nand/mpc5121_nfc.c	71;"	d	file:
NFC_ECC_BLOCK_512	nand/sunxi_nand.c	148;"	d	file:
NFC_ECC_BLOCK_SIZE	nand/sunxi_nand_spl.c	52;"	d	file:
NFC_ECC_BLOCK_SIZE_MSK	nand/sunxi_nand.c	147;"	d	file:
NFC_ECC_CNT0	nand/sunxi_nand_spl.c	31;"	d	file:
NFC_ECC_CNT1	nand/sunxi_nand_spl.c	32;"	d	file:
NFC_ECC_CNT2	nand/sunxi_nand_spl.c	33;"	d	file:
NFC_ECC_CNT3	nand/sunxi_nand_spl.c	34;"	d	file:
NFC_ECC_CTL	nand/sunxi_nand_spl.c	28;"	d	file:
NFC_ECC_EN	nand/sunxi_nand.c	144;"	d	file:
NFC_ECC_EN	nand/sunxi_nand_spl.c	49;"	d	file:
NFC_ECC_ENABLE	nand/mpc5121_nfc.c	74;"	d	file:
NFC_ECC_ERR	nand/sunxi_nand.c	157;"	d	file:
NFC_ECC_ERR_CNT	nand/sunxi_nand.c	159;"	d	file:
NFC_ECC_EXCEPTION	nand/sunxi_nand.c	146;"	d	file:
NFC_ECC_EXCEPTION	nand/sunxi_nand_spl.c	51;"	d	file:
NFC_ECC_MODE	nand/sunxi_nand.c	152;"	d	file:
NFC_ECC_MODE_MSK	nand/sunxi_nand.c	151;"	d	file:
NFC_ECC_OP	nand/sunxi_nand.c	129;"	d	file:
NFC_ECC_PAT_FOUND	nand/sunxi_nand.c	158;"	d	file:
NFC_ECC_PIPELINE	nand/sunxi_nand.c	145;"	d	file:
NFC_ECC_PIPELINE	nand/sunxi_nand_spl.c	50;"	d	file:
NFC_ECC_RANDOM_DIRECTION	nand/sunxi_nand_spl.c	54;"	d	file:
NFC_ECC_RANDOM_EN	nand/sunxi_nand_spl.c	53;"	d	file:
NFC_ECC_ST	nand/sunxi_nand_spl.c	29;"	d	file:
NFC_ECC_STATUS1	nand/mpc5121_nfc.c	46;"	d	file:
NFC_ECC_STATUS2	nand/mpc5121_nfc.c	47;"	d	file:
NFC_EFNAND_STATUS	nand/sunxi_nand_spl.c	36;"	d	file:
NFC_EN	nand/sunxi_nand.c	68;"	d	file:
NFC_FLASH_ADDR	nand/mpc5121_nfc.c	43;"	d	file:
NFC_FLASH_CMD	nand/mpc5121_nfc.c	44;"	d	file:
NFC_FLASH_CMD1	nand/vf610_nfc.c	37;"	d	file:
NFC_FLASH_CMD2	nand/vf610_nfc.c	38;"	d	file:
NFC_FLASH_CONFIG	nand/vf610_nfc.c	46;"	d	file:
NFC_FLASH_STATUS1	nand/vf610_nfc.c	42;"	d	file:
NFC_FLASH_STATUS2	nand/vf610_nfc.c	43;"	d	file:
NFC_FULL_PAGE_DMA	nand/mpc5121_nfc.c	72;"	d	file:
NFC_FULL_PAGE_INT	nand/mpc5121_nfc.c	85;"	d	file:
NFC_ID	nand/mpc5121_nfc.c	92;"	d	file:
NFC_ID	nand/mxc_nand.h	142;"	d
NFC_INPUT	nand/mpc5121_nfc.c	90;"	d	file:
NFC_INPUT	nand/mxc_nand.h	136;"	d
NFC_INT	nand/mpc5121_nfc.c	95;"	d	file:
NFC_INT	nand/sunxi_nand_spl.c	17;"	d	file:
NFC_INT_MASK	nand/mpc5121_nfc.c	75;"	d	file:
NFC_INT_MASK	nand/sunxi_nand.c	97;"	d	file:
NFC_IO_DATA	nand/sunxi_nand_spl.c	27;"	d	file:
NFC_IRQ_STATUS	nand/vf610_nfc.c	47;"	d	file:
NFC_MAIN_AREA	nand/mpc5121_nfc.c	34;"	d	file:
NFC_MAIN_AREA	nand/vf610_nfc.c	50;"	d	file:
NFC_MAX_CS	nand/sunxi_nand.c	165;"	d	file:
NFC_NATCH_INT_FLAG	nand/sunxi_nand.c	90;"	d	file:
NFC_NF_WRPRST	nand/mpc5121_nfc.c	50;"	d	file:
NFC_NORMAL_OP	nand/sunxi_nand.c	128;"	d	file:
NFC_ONE_CYCLE	nand/mpc5121_nfc.c	79;"	d	file:
NFC_OUTPUT	nand/mpc5121_nfc.c	91;"	d	file:
NFC_OUTPUT	nand/mxc_nand.h	139;"	d
NFC_PAGE_CMD	nand/sunxi_nand_spl.c	70;"	d	file:
NFC_PAGE_OP	nand/sunxi_nand.c	130;"	d	file:
NFC_PAGE_SHIFT	nand/sunxi_nand.c	79;"	d	file:
NFC_PAGE_SHIFT_MSK	nand/sunxi_nand.c	78;"	d	file:
NFC_PATTERN_ID	nand/sunxi_nand_spl.c	38;"	d	file:
NFC_PPB_128	nand/mpc5121_nfc.c	82;"	d	file:
NFC_PPB_256	nand/mpc5121_nfc.c	83;"	d	file:
NFC_PPB_32	nand/mpc5121_nfc.c	80;"	d	file:
NFC_PPB_64	nand/mpc5121_nfc.c	81;"	d	file:
NFC_PPB_MASK	nand/mpc5121_nfc.c	84;"	d	file:
NFC_PROGRAM_CMD_MSK	nand/sunxi_nand.c	138;"	d	file:
NFC_RAM0_BASE	nand/sunxi_nand.c	64;"	d	file:
NFC_RAM0_BASE	nand/sunxi_nand_spl.c	39;"	d	file:
NFC_RAM1_BASE	nand/sunxi_nand.c	65;"	d	file:
NFC_RAM1_BASE	nand/sunxi_nand_spl.c	40;"	d	file:
NFC_RAM_METHOD	nand/sunxi_nand.c	81;"	d	file:
NFC_RANDOM_DIRECTION	nand/sunxi_nand.c	150;"	d	file:
NFC_RANDOM_EN	nand/sunxi_nand.c	149;"	d	file:
NFC_RANDOM_READ_CMD0_OFFSET	nand/sunxi_nand_spl.c	76;"	d	file:
NFC_RANDOM_READ_CMD1_OFFSET	nand/sunxi_nand_spl.c	77;"	d	file:
NFC_RANDOM_SEED	nand/sunxi_nand.c	154;"	d	file:
NFC_RANDOM_SEED_MSK	nand/sunxi_nand.c	153;"	d	file:
NFC_RAW_CMD	nand/sunxi_nand_spl.c	69;"	d	file:
NFC_RBA_MASK	nand/mpc5121_nfc.c	63;"	d	file:
NFC_RB_B2R	nand/sunxi_nand.c	85;"	d	file:
NFC_RB_SEL	nand/sunxi_nand.c	74;"	d	file:
NFC_RB_SEL_MSK	nand/sunxi_nand.c	73;"	d	file:
NFC_RB_STATE	nand/sunxi_nand.c	91;"	d	file:
NFC_RCMD_SET	nand/sunxi_nand_spl.c	25;"	d	file:
NFC_READ_CMD0_MSK	nand/sunxi_nand.c	140;"	d	file:
NFC_READ_CMD1_MSK	nand/sunxi_nand.c	141;"	d	file:
NFC_READ_CMD_MSK	nand/sunxi_nand.c	133;"	d	file:
NFC_READ_CMD_OFFSET	nand/sunxi_nand_spl.c	75;"	d	file:
NFC_REG_ADDR_HIGH	nand/sunxi_nand.c	50;"	d	file:
NFC_REG_ADDR_LOW	nand/sunxi_nand.c	49;"	d	file:
NFC_REG_CMD	nand/sunxi_nand.c	53;"	d	file:
NFC_REG_CNT	nand/sunxi_nand.c	52;"	d	file:
NFC_REG_CTL	nand/sunxi_nand.c	44;"	d	file:
NFC_REG_DEBUG	nand/sunxi_nand.c	59;"	d	file:
NFC_REG_ECC_CTL	nand/sunxi_nand.c	57;"	d	file:
NFC_REG_ECC_ERR_CNT	nand/sunxi_nand.c	60;"	d	file:
NFC_REG_ECC_ST	nand/sunxi_nand.c	58;"	d	file:
NFC_REG_INT	nand/sunxi_nand.c	46;"	d	file:
NFC_REG_IO_DATA	nand/sunxi_nand.c	56;"	d	file:
NFC_REG_PAT_ID	nand/sunxi_nand.c	63;"	d	file:
NFC_REG_RCMD_SET	nand/sunxi_nand.c	54;"	d	file:
NFC_REG_SECTOR_NUM	nand/sunxi_nand.c	51;"	d	file:
NFC_REG_SPARE_AREA	nand/sunxi_nand.c	62;"	d	file:
NFC_REG_ST	nand/sunxi_nand.c	45;"	d	file:
NFC_REG_TIMING_CFG	nand/sunxi_nand.c	48;"	d	file:
NFC_REG_TIMING_CTL	nand/sunxi_nand.c	47;"	d	file:
NFC_REG_USER_DATA	nand/sunxi_nand.c	61;"	d	file:
NFC_REG_WCMD_SET	nand/sunxi_nand.c	55;"	d	file:
NFC_RESET	nand/mpc5121_nfc.c	77;"	d	file:
NFC_RESET	nand/sunxi_nand.c	69;"	d	file:
NFC_RESET_TIMEOUT	nand/mpc5121_nfc.c	30;"	d	file:
NFC_RND_READ_CMD0_MSK	nand/sunxi_nand.c	134;"	d	file:
NFC_RND_READ_CMD1_MSK	nand/sunxi_nand.c	135;"	d	file:
NFC_RND_WRITE_CMD_MSK	nand/sunxi_nand.c	139;"	d	file:
NFC_ROW_ADDR	nand/vf610_nfc.c	40;"	d	file:
NFC_ROW_ADDR_INC	nand/vf610_nfc.c	41;"	d	file:
NFC_ROW_AUTO_INC	nand/sunxi_nand.c	124;"	d	file:
NFC_ROW_AUTO_INC	nand/sunxi_nand_spl.c	66;"	d	file:
NFC_SAM	nand/sunxi_nand.c	80;"	d	file:
NFC_SECTOR_NUM	nand/sunxi_nand_spl.c	22;"	d	file:
NFC_SECTOR_SIZE	nand/vf610_nfc.c	45;"	d	file:
NFC_SEND_ADR	nand/sunxi_nand.c	116;"	d	file:
NFC_SEND_ADR	nand/sunxi_nand_spl.c	58;"	d	file:
NFC_SEND_CMD1	nand/sunxi_nand.c	119;"	d	file:
NFC_SEND_CMD1	nand/sunxi_nand_spl.c	61;"	d	file:
NFC_SEND_CMD2	nand/sunxi_nand.c	121;"	d	file:
NFC_SEND_CMD2	nand/sunxi_nand_spl.c	63;"	d	file:
NFC_SEND_CMD3	nand/sunxi_nand.c	125;"	d	file:
NFC_SEND_CMD3	nand/sunxi_nand_spl.c	67;"	d	file:
NFC_SEND_CMD4	nand/sunxi_nand.c	126;"	d	file:
NFC_SEND_CMD4	nand/sunxi_nand_spl.c	68;"	d	file:
NFC_SEQ	nand/sunxi_nand.c	122;"	d	file:
NFC_SEQ	nand/sunxi_nand_spl.c	64;"	d	file:
NFC_SPARE_AREA	nand/mpc5121_nfc.c	39;"	d	file:
NFC_SPARE_AREA	nand/sunxi_nand_spl.c	37;"	d	file:
NFC_SPARE_BUFFERS	nand/mpc5121_nfc.c	37;"	d	file:
NFC_SPARE_LEN	nand/mpc5121_nfc.c	38;"	d	file:
NFC_SPARE_ONLY	nand/mpc5121_nfc.c	73;"	d	file:
NFC_SPAS	nand/mpc5121_nfc.c	48;"	d	file:
NFC_SRAM_SIZE	nand/sunxi_nand.c	163;"	d	file:
NFC_ST	nand/sunxi_nand_spl.c	16;"	d	file:
NFC_STA	nand/sunxi_nand.c	89;"	d	file:
NFC_STATUS	nand/mpc5121_nfc.c	93;"	d	file:
NFC_STATUS	nand/mxc_nand.h	145;"	d
NFC_ST_CMD_INT_FLAG	nand/sunxi_nand_spl.c	72;"	d	file:
NFC_ST_DMA_INT_FLAG	nand/sunxi_nand_spl.c	73;"	d	file:
NFC_TIMEOUT	nand/mpc5121_nfc.c	31;"	d	file:
NFC_TIMEOUT	nand/vf610_nfc.c	127;"	d	file:
NFC_TIMING_CFG	nand/sunxi_nand.c	105;"	d	file:
NFC_TIMING_CFG	nand/sunxi_nand_spl.c	19;"	d	file:
NFC_TIMING_CTL	nand/sunxi_nand_spl.c	18;"	d	file:
NFC_TIMING_CTL_EDO	nand/sunxi_nand.c	102;"	d	file:
NFC_UNLOCKEND_BLK0	nand/mpc5121_nfc.c	54;"	d	file:
NFC_UNLOCKEND_BLK1	nand/mpc5121_nfc.c	56;"	d	file:
NFC_UNLOCKEND_BLK2	nand/mpc5121_nfc.c	58;"	d	file:
NFC_UNLOCKEND_BLK3	nand/mpc5121_nfc.c	60;"	d	file:
NFC_UNLOCKSTART_BLK0	nand/mpc5121_nfc.c	53;"	d	file:
NFC_UNLOCKSTART_BLK1	nand/mpc5121_nfc.c	55;"	d	file:
NFC_UNLOCKSTART_BLK2	nand/mpc5121_nfc.c	57;"	d	file:
NFC_UNLOCKSTART_BLK3	nand/mpc5121_nfc.c	59;"	d	file:
NFC_USER_DATA_BASE	nand/sunxi_nand_spl.c	35;"	d	file:
NFC_V1_V2_CONFIG1_BIG	nand/mxc_nand.h	158;"	d
NFC_V1_V2_CONFIG1_ECC_EN	nand/mxc_nand.h	156;"	d
NFC_V1_V2_CONFIG1_INT_MSK	nand/mxc_nand.h	157;"	d
NFC_V1_V2_CONFIG2_INT	nand/mxc_nand.h	165;"	d
NFC_V2_CONFIG1_ECC_MODE_4	nand/mxc_nand.h	159;"	d
NFC_V2_CONFIG1_FP_INT	nand/mxc_nand.h	161;"	d
NFC_V2_CONFIG1_ONE_CYCLE	nand/mxc_nand.h	160;"	d
NFC_V3_CONFIG1_RBA	nand/mxc_nand.h	163;"	d
NFC_V3_CONFIG1_RBA_MASK	nand/mxc_nand.h	162;"	d
NFC_V3_CONFIG2_2CMD_PHASES	nand/mxc_nand.h	172;"	d
NFC_V3_CONFIG2_ECC_EN	nand/mxc_nand.h	171;"	d
NFC_V3_CONFIG2_ECC_MODE_8	nand/mxc_nand.h	174;"	d
NFC_V3_CONFIG2_EDC	nand/mxc_nand.h	178;"	d
NFC_V3_CONFIG2_EDC_MASK	nand/mxc_nand.h	177;"	d
NFC_V3_CONFIG2_INT_MSK	nand/mxc_nand.h	180;"	d
NFC_V3_CONFIG2_NUM_ADDR_PH0	nand/mxc_nand.h	173;"	d
NFC_V3_CONFIG2_NUM_ADDR_PH1	nand/mxc_nand.h	179;"	d
NFC_V3_CONFIG2_ONE_CYCLE	nand/mxc_nand.h	170;"	d
NFC_V3_CONFIG2_PPB	nand/mxc_nand.h	176;"	d
NFC_V3_CONFIG2_PPB_MASK	nand/mxc_nand.h	175;"	d
NFC_V3_CONFIG2_PS_2048	nand/mxc_nand.h	168;"	d
NFC_V3_CONFIG2_PS_4096	nand/mxc_nand.h	169;"	d
NFC_V3_CONFIG2_PS_512	nand/mxc_nand.h	167;"	d
NFC_V3_CONFIG2_PS_MASK	nand/mxc_nand.h	166;"	d
NFC_V3_CONFIG2_SPAS	nand/mxc_nand.h	182;"	d
NFC_V3_CONFIG2_SPAS_MASK	nand/mxc_nand.h	181;"	d
NFC_V3_CONFIG2_ST_CMD	nand/mxc_nand.h	184;"	d
NFC_V3_CONFIG2_ST_CMD_MASK	nand/mxc_nand.h	183;"	d
NFC_V3_CONFIG3_ADD_OP	nand/mxc_nand.h	186;"	d
NFC_V3_CONFIG3_FW8	nand/mxc_nand.h	187;"	d
NFC_V3_CONFIG3_NO_SDMA	nand/mxc_nand.h	191;"	d
NFC_V3_CONFIG3_NUM_OF_DEVS	nand/mxc_nand.h	189;"	d
NFC_V3_CONFIG3_RBB_MODE	nand/mxc_nand.h	190;"	d
NFC_V3_CONFIG3_SBB	nand/mxc_nand.h	188;"	d
NFC_V3_IPC_CREQ	nand/mxc_nand.h	196;"	d
NFC_V3_IPC_INT	nand/mxc_nand.h	197;"	d
NFC_V3_WRPROT_BLS_UNLOCK	nand/mxc_nand.h	194;"	d
NFC_V3_WRPROT_UNLOCK	nand/mxc_nand.h	193;"	d
NFC_WAIT_FLAG	nand/sunxi_nand.c	120;"	d	file:
NFC_WAIT_FLAG	nand/sunxi_nand_spl.c	62;"	d	file:
NFC_WCMD_SET	nand/sunxi_nand_spl.c	26;"	d	file:
NFC_WPC_LOCK	nand/mpc5121_nfc.c	99;"	d	file:
NFC_WPC_LOCK_TIGHT	nand/mpc5121_nfc.c	98;"	d	file:
NFC_WPC_UNLOCK	nand/mpc5121_nfc.c	100;"	d	file:
NFC_WRPROT	nand/mpc5121_nfc.c	49;"	d	file:
NORMAL_DRIVERS	nand/Makefile	/^NORMAL_DRIVERS=y$/;"	m
NOTALIGNED	nand/nand_base.c	2350;"	d	file:
NOTALIGNED	onenand/onenand_base.c	1354;"	d	file:
NUMBER_OF_PLANES	nand/denali.h	80;"	d
NUMBER_OF_PLANES__VALUE	nand/denali.h	81;"	d
NUM_CHIP_SELECT	nand/pxa3xx_nand.h	38;"	d
NUM_FREE_BLOCKS_GATE	nand/denali.h	379;"	d
NUM_PAGES_IN_BLOCK	nand/denali.h	411;"	d
NVMOP_NOP	pic32_flash.c	27;"	d	file:
NVMOP_PAGE_ERASE	pic32_flash.c	29;"	d	file:
NVMOP_WORD_WRITE	pic32_flash.c	28;"	d	file:
NVM_LVDERR	pic32_flash.c	35;"	d	file:
NVM_WR	pic32_flash.c	32;"	d	file:
NVM_WREN	pic32_flash.c	33;"	d	file:
NVM_WRERR	pic32_flash.c	34;"	d	file:
NWIDTH	nand/bfin_nand.c	36;"	d	file:
NumEraseRegions	jedec_flash.c	/^	const int NumEraseRegions;$/;"	m	struct:amd_flash_info	file:
ONDIE_ECC_FEATURE_ADDR	nand/arasan_nfc.c	66;"	d	file:
ONDIE_ECC_FEATURE_ADDR	nand/zynq_nand.c	74;"	d	file:
ONDIE_ECC_FEATURE_ENABLE	nand/zynq_nand.c	75;"	d	file:
ONENAND_ERASE_START	onenand/samsung.c	26;"	d	file:
ONENAND_ERASE_STATUS	onenand/samsung.c	24;"	d	file:
ONENAND_ERASE_VERIFY	onenand/samsung.c	37;"	d	file:
ONENAND_LOCK_END	onenand/samsung.c	30;"	d	file:
ONENAND_LOCK_START	onenand/samsung.c	29;"	d	file:
ONENAND_LOCK_TIGHT_END	onenand/samsung.c	32;"	d	file:
ONENAND_LOCK_TIGHT_START	onenand/samsung.c	31;"	d	file:
ONENAND_MAIN_ACCESS_ONLY	onenand/samsung.c	36;"	d	file:
ONENAND_MAIN_SPARE_ACCESS	onenand/samsung.c	38;"	d	file:
ONENAND_MULTI_ERASE_SET	onenand/samsung.c	25;"	d	file:
ONENAND_OTP_ACCESS	onenand/samsung.c	34;"	d	file:
ONENAND_PAGES_PER_BLOCK	onenand/onenand_spl.c	26;"	d	file:
ONENAND_PIPELINE_READ	onenand/samsung.c	39;"	d	file:
ONENAND_SPARE_ACCESS_ONLY	onenand/samsung.c	35;"	d	file:
ONENAND_UNLOCK_ALL	onenand/samsung.c	33;"	d	file:
ONENAND_UNLOCK_END	onenand/samsung.c	28;"	d	file:
ONENAND_UNLOCK_START	onenand/samsung.c	27;"	d	file:
ONFI_DEVICE_FEATURES	nand/denali.h	172;"	d
ONFI_DEVICE_FEATURES__VALUE	nand/denali.h	173;"	d
ONFI_DEVICE_NO_OF_BLOCKS_PER_LUN_L	nand/denali.h	188;"	d
ONFI_DEVICE_NO_OF_BLOCKS_PER_LUN_L__VALUE	nand/denali.h	189;"	d
ONFI_DEVICE_NO_OF_BLOCKS_PER_LUN_U	nand/denali.h	191;"	d
ONFI_DEVICE_NO_OF_BLOCKS_PER_LUN_U__VALUE	nand/denali.h	192;"	d
ONFI_DEVICE_NO_OF_LUNS	nand/denali.h	184;"	d
ONFI_DEVICE_NO_OF_LUNS__NO_OF_LUNS	nand/denali.h	185;"	d
ONFI_DEVICE_NO_OF_LUNS__ONFI_DEVICE	nand/denali.h	186;"	d
ONFI_OPTIONAL_COMMANDS	nand/denali.h	175;"	d
ONFI_OPTIONAL_COMMANDS__VALUE	nand/denali.h	176;"	d
ONFI_PGM_CACHE_TIMING_MODE	nand/denali.h	181;"	d
ONFI_PGM_CACHE_TIMING_MODE__VALUE	nand/denali.h	182;"	d
ONFI_TIMING_MODE	nand/denali.h	178;"	d
ONFI_TIMING_MODE__VALUE	nand/denali.h	179;"	d
OOB_64	nand/vf610_nfc.c	53;"	d	file:
OOB_MAX	nand/vf610_nfc.c	54;"	d	file:
OP_COMPARE_BUF1	spi/sf_dataflash.c	54;"	d	file:
OP_COMPARE_BUF2	spi/sf_dataflash.c	55;"	d	file:
OP_ERASE_BLOCK	spi/sf_dataflash.c	37;"	d	file:
OP_ERASE_PAGE	spi/sf_dataflash.c	36;"	d	file:
OP_MREAD_BUFFER1	spi/sf_dataflash.c	42;"	d	file:
OP_MREAD_BUFFER2	spi/sf_dataflash.c	43;"	d	file:
OP_MWERASE_BUFFER1	spi/sf_dataflash.c	44;"	d	file:
OP_MWERASE_BUFFER2	spi/sf_dataflash.c	45;"	d	file:
OP_MWRITE_BUFFER1	spi/sf_dataflash.c	46;"	d	file:
OP_MWRITE_BUFFER2	spi/sf_dataflash.c	47;"	d	file:
OP_PROGRAM_VIA_BUF1	spi/sf_dataflash.c	50;"	d	file:
OP_PROGRAM_VIA_BUF2	spi/sf_dataflash.c	51;"	d	file:
OP_READ_BUFFER1	spi/sf_dataflash.c	30;"	d	file:
OP_READ_BUFFER2	spi/sf_dataflash.c	31;"	d	file:
OP_READ_CONTINUOUS	spi/sf_dataflash.c	23;"	d	file:
OP_READ_ID	spi/sf_dataflash.c	65;"	d	file:
OP_READ_PAGE	spi/sf_dataflash.c	24;"	d	file:
OP_READ_SECURITY	spi/sf_dataflash.c	66;"	d	file:
OP_READ_STATUS	spi/sf_dataflash.c	27;"	d	file:
OP_REWRITE_VIA_BUF1	spi/sf_dataflash.c	58;"	d	file:
OP_REWRITE_VIA_BUF2	spi/sf_dataflash.c	59;"	d	file:
OP_TRANSFER_BUF1	spi/sf_dataflash.c	40;"	d	file:
OP_TRANSFER_BUF2	spi/sf_dataflash.c	41;"	d	file:
OP_WRITE_BUFFER1	spi/sf_dataflash.c	32;"	d	file:
OP_WRITE_BUFFER2	spi/sf_dataflash.c	33;"	d	file:
OP_WRITE_SECURITY	spi/sf_dataflash.c	68;"	d	file:
OP_WRITE_SECURITY_REVC	spi/sf_dataflash.c	67;"	d	file:
PAGES_PER_BLOCK	nand/denali.h	83;"	d
PAGES_PER_BLOCK	nand/lpc32xx_nand_mlc.c	687;"	d	file:
PAGES_PER_BLOCK__VALUE	nand/denali.h	84;"	d
PAGES_PER_CHIP_MAX	nand/lpc32xx_nand_mlc.c	689;"	d	file:
PAGE_2K	nand/vf610_nfc.c	52;"	d	file:
PAGE_2K	onenand/onenand_spl.c	/^	PAGE_2K = 2048,$/;"	e	enum:onenand_spl_pagesize	file:
PAGE_4K	onenand/onenand_spl.c	/^	PAGE_4K = 4096,$/;"	e	enum:onenand_spl_pagesize	file:
PAGE_CHUNK_SIZE	nand/pxa3xx_nand.c	25;"	d	file:
PAGE_CNT	nand/denali.h	251;"	d
PART	mtdpart.c	53;"	d	file:
PERM_SRC_ID	nand/denali.h	348;"	d
PERM_SRC_ID__DIRECT_ACCESS_ACTIVE	nand/denali.h	350;"	d
PERM_SRC_ID__PARTITION_VALID	nand/denali.h	353;"	d
PERM_SRC_ID__READ_ACTIVE	nand/denali.h	352;"	d
PERM_SRC_ID__SRCID	nand/denali.h	349;"	d
PERM_SRC_ID__WRITE_ACTIVE	nand/denali.h	351;"	d
PG_RD_STAT	nand/bfin_nand.c	44;"	d	file:
PG_SIZE	nand/bfin_nand.c	37;"	d	file:
PG_WR_STAT	nand/bfin_nand.c	43;"	d	file:
PIPELINE_ACCESS	nand/denali.c	63;"	d	file:
PIPELINE_ACCESS	nand/denali_spl.c	16;"	d	file:
PMECC_CFG_AUTO_DISABLE	nand/atmel_nand_ecc.h	105;"	d
PMECC_CFG_AUTO_ENABLE	nand/atmel_nand_ecc.h	104;"	d
PMECC_CFG_BCH_ERR12	nand/atmel_nand_ecc.h	86;"	d
PMECC_CFG_BCH_ERR2	nand/atmel_nand_ecc.h	83;"	d
PMECC_CFG_BCH_ERR24	nand/atmel_nand_ecc.h	87;"	d
PMECC_CFG_BCH_ERR32	nand/atmel_nand_ecc.h	88;"	d
PMECC_CFG_BCH_ERR4	nand/atmel_nand_ecc.h	84;"	d
PMECC_CFG_BCH_ERR8	nand/atmel_nand_ecc.h	85;"	d
PMECC_CFG_PAGE_1SECTOR	nand/atmel_nand_ecc.h	93;"	d
PMECC_CFG_PAGE_2SECTORS	nand/atmel_nand_ecc.h	94;"	d
PMECC_CFG_PAGE_4SECTORS	nand/atmel_nand_ecc.h	95;"	d
PMECC_CFG_PAGE_8SECTORS	nand/atmel_nand_ecc.h	96;"	d
PMECC_CFG_READ_OP	nand/atmel_nand_ecc.h	98;"	d
PMECC_CFG_SECTOR1024	nand/atmel_nand_ecc.h	91;"	d
PMECC_CFG_SECTOR512	nand/atmel_nand_ecc.h	90;"	d
PMECC_CFG_SPARE_DISABLE	nand/atmel_nand_ecc.h	102;"	d
PMECC_CFG_SPARE_ENABLE	nand/atmel_nand_ecc.h	101;"	d
PMECC_CFG_WRITE_OP	nand/atmel_nand_ecc.h	99;"	d
PMECC_CLK_133MHZ	nand/atmel_nand_ecc.h	108;"	d
PMECC_CTRL_DATA	nand/atmel_nand_ecc.h	112;"	d
PMECC_CTRL_DISABLE	nand/atmel_nand_ecc.h	115;"	d
PMECC_CTRL_ENABLE	nand/atmel_nand_ecc.h	114;"	d
PMECC_CTRL_RST	nand/atmel_nand_ecc.h	111;"	d
PMECC_CTRL_USER	nand/atmel_nand_ecc.h	113;"	d
PMECC_GF_13_PRIMITIVE_POLY	nand/atmel_nand_ecc.h	193;"	d
PMECC_GF_14_PRIMITIVE_POLY	nand/atmel_nand_ecc.h	194;"	d
PMECC_GF_DIMENSION_13	nand/atmel_nand_ecc.h	189;"	d
PMECC_GF_DIMENSION_14	nand/atmel_nand_ecc.h	190;"	d
PMECC_INDEX_TABLE_SIZE_1024	nand/atmel_nand_ecc.h	197;"	d
PMECC_INDEX_TABLE_SIZE_512	nand/atmel_nand_ecc.h	196;"	d
PMECC_MAX_SECTOR_NUM	nand/atmel_nand_ecc.h	44;"	d
PMECC_MAX_TIMEOUT_US	nand/atmel_nand_ecc.h	199;"	d
PMECC_OOB_RESERVED_BYTES	nand/atmel_nand_ecc.h	202;"	d
PMECC_SR_BUSY	nand/atmel_nand_ecc.h	118;"	d
PMECC_SR_ENABLE	nand/atmel_nand_ecc.h	119;"	d
PMECC_VERSION_AT91SAM9N12	nand/atmel_nand_ecc.h	185;"	d
PMECC_VERSION_AT91SAM9X5	nand/atmel_nand_ecc.h	186;"	d
PMECC_VERSION_SAMA5D2	nand/atmel_nand_ecc.h	182;"	d
PMECC_VERSION_SAMA5D3	nand/atmel_nand_ecc.h	184;"	d
PMECC_VERSION_SAMA5D4	nand/atmel_nand_ecc.h	183;"	d
PMERRLOC_CALC_DONE	nand/atmel_nand_ecc.h	179;"	d
PMERRLOC_DISABLE	nand/atmel_nand_ecc.h	170;"	d
PMERRLOC_ELCFG_NUM_ERRORS	nand/atmel_nand_ecc.h	167;"	d
PMERRLOC_ELCFG_SECTOR_1024	nand/atmel_nand_ecc.h	166;"	d
PMERRLOC_ELCFG_SECTOR_512	nand/atmel_nand_ecc.h	165;"	d
PMERRLOC_ERR_NUM_MASK	nand/atmel_nand_ecc.h	174;"	d
PMERRLOC_ERR_NUM_MASK	nand/atmel_nand_ecc.h	176;"	d
POWER_CUT_EC_WRITE	ubi/ubi.h	/^	POWER_CUT_EC_WRITE = 0x01,$/;"	e	enum:__anon4
POWER_CUT_VID_WRITE	ubi/ubi.h	/^	POWER_CUT_VID_WRITE = 0x02,$/;"	e	enum:__anon4
PREFETCH_CONFIG1_CS_SHIFT	nand/omap_gpmc.c	346;"	d	file:
PREFETCH_FIFOTHRESHOLD	nand/omap_gpmc.c	348;"	d	file:
PREFETCH_FIFOTHRESHOLD_MAX	nand/omap_gpmc.c	347;"	d	file:
PREFETCH_MODE	nand/denali.h	55;"	d
PREFETCH_MODE__PREFETCH_BURST_LENGTH	nand/denali.h	57;"	d
PREFETCH_MODE__PREFETCH_EN	nand/denali.h	56;"	d
PREFETCH_STATUS_COUNT	nand/omap_gpmc.c	349;"	d	file:
PREFETCH_STATUS_FIFO_CNT	nand/omap_gpmc.c	350;"	d	file:
PRE_FETCH_MODE	nand/denali.h	406;"	d
PROGRAM_PAGE_CMD_CODE	nand/vf610_nfc.c	65;"	d	file:
PROGRAM_WAIT_CNT	nand/denali.h	25;"	d
PROGRAM_WAIT_CNT__VALUE	nand/denali.h	26;"	d
PROGRAM_WAIT_COUNT	nand/denali.h	401;"	d
PROTECTION_PER_BLOCK	nand/denali.h	399;"	d
PTN_INTR	nand/denali.h	332;"	d
PTN_INTR_EN	nand/denali.h	340;"	d
PTN_INTR_EN__ACCESS_ERROR_BANK0	nand/denali.h	342;"	d
PTN_INTR_EN__ACCESS_ERROR_BANK1	nand/denali.h	343;"	d
PTN_INTR_EN__ACCESS_ERROR_BANK2	nand/denali.h	344;"	d
PTN_INTR_EN__ACCESS_ERROR_BANK3	nand/denali.h	345;"	d
PTN_INTR_EN__CONFIG_ERROR	nand/denali.h	341;"	d
PTN_INTR_EN__REG_ACCESS_ERROR	nand/denali.h	346;"	d
PTN_INTR__ACCESS_ERROR_BANK0	nand/denali.h	334;"	d
PTN_INTR__ACCESS_ERROR_BANK1	nand/denali.h	335;"	d
PTN_INTR__ACCESS_ERROR_BANK2	nand/denali.h	336;"	d
PTN_INTR__ACCESS_ERROR_BANK3	nand/denali.h	337;"	d
PTN_INTR__CONFIG_ERROR	nand/denali.h	333;"	d
PTN_INTR__REG_ACCESS_ERROR	nand/denali.h	338;"	d
PXA3XX_NAND_VARIANT_ARMADA370	nand/pxa3xx_nand.c	/^	PXA3XX_NAND_VARIANT_ARMADA370,$/;"	e	enum:pxa3xx_nand_variant	file:
PXA3XX_NAND_VARIANT_PXA	nand/pxa3xx_nand.c	/^	PXA3XX_NAND_VARIANT_PXA,$/;"	e	enum:pxa3xx_nand_variant	file:
P_ID_AMD_STD	jedec_flash.c	21;"	d	file:
QUADSPI_ISR_ILLEGAL_ERASE	altera_qspi.c	37;"	d	file:
QUADSPI_ISR_ILLEGAL_WRITE	altera_qspi.c	38;"	d	file:
QUADSPI_MEM_OP_BULK_ERASE	altera_qspi.c	29;"	d	file:
QUADSPI_MEM_OP_SECTOR_ERASE	altera_qspi.c	30;"	d	file:
QUADSPI_MEM_OP_SECTOR_PROTECT	altera_qspi.c	31;"	d	file:
QUADSPI_SR_BP0	altera_qspi.c	19;"	d	file:
QUADSPI_SR_BP1	altera_qspi.c	20;"	d	file:
QUADSPI_SR_BP2	altera_qspi.c	21;"	d	file:
QUADSPI_SR_BP2_0	altera_qspi.c	22;"	d	file:
QUADSPI_SR_BP3	altera_qspi.c	23;"	d	file:
QUADSPI_SR_TB	altera_qspi.c	24;"	d	file:
RB_GPIO	nand/sunxi_nand.c	/^	RB_GPIO,$/;"	e	enum:sunxi_nand_rb_type	file:
RB_NATIVE	nand/sunxi_nand.c	/^	RB_NATIVE,$/;"	e	enum:sunxi_nand_rb_type	file:
RB_NONE	nand/sunxi_nand.c	/^	RB_NONE,$/;"	e	enum:sunxi_nand_rb_type	file:
RB_PIN_ENABLED	nand/denali.h	34;"	d
RB_PIN_ENABLED__BANK0	nand/denali.h	35;"	d
RB_PIN_ENABLED__BANK1	nand/denali.h	36;"	d
RB_PIN_ENABLED__BANK2	nand/denali.h	37;"	d
RB_PIN_ENABLED__BANK3	nand/denali.h	38;"	d
RDWR_EN_HI_CNT	nand/denali.h	116;"	d
RDWR_EN_HI_CNT__VALUE	nand/denali.h	117;"	d
RDWR_EN_LO_CNT	nand/denali.h	113;"	d
RDWR_EN_LO_CNT__VALUE	nand/denali.h	114;"	d
RD_DLY	nand/bfin_nand.c	35;"	d	file:
RD_DUAL	spi/sf_internal.h	131;"	d
RD_DUALIO	spi/sf_internal.h	133;"	d
RD_FULL	spi/sf_internal.h	134;"	d
RD_QUAD	spi/sf_internal.h	130;"	d
RD_QUADIO	spi/sf_internal.h	132;"	d
RD_RDY	nand/bfin_nand.c	52;"	d	file:
READ_BUFF_SIZE	nand/arasan_nfc.c	119;"	d	file:
READ_BUSY_PIN_ENABLED	nand/denali.h	404;"	d
READ_ENABLE_2_WRITE_ENABLE	nand/denali.h	415;"	d
READ_ERROR	nand/denali.h	368;"	d
READ_ID_CMD_CODE	nand/vf610_nfc.c	67;"	d	file:
READ_MODE	nand/denali.h	104;"	d
READ_MODE__VALUE	nand/denali.h	105;"	d
READ_ONFI_PARAM_CMD_CODE	nand/vf610_nfc.c	64;"	d	file:
READ_PAGE_CMD_CODE	nand/vf610_nfc.c	63;"	d	file:
READ_WRITE_ENABLE_HIGH_COUNT	nand/denali.h	420;"	d
READ_WRITE_ENABLE_LOW_COUNT	nand/denali.h	419;"	d
RESET_CMD_CODE	nand/vf610_nfc.c	68;"	d	file:
RESP_0	nand/tegra_nand.h	135;"	d
REVISION	nand/denali.h	167;"	d
REVISION_5_1	nand/denali.h	170;"	d
REVISION__VALUE	nand/denali.h	168;"	d
RE_2_RE	nand/denali.h	143;"	d
RE_2_RE__VALUE	nand/denali.h	144;"	d
RE_2_WE	nand/denali.h	74;"	d
RE_2_WE__VALUE	nand/denali.h	75;"	d
ROW_ADDR_CHIP_SEL_MASK	nand/vf610_nfc.c	100;"	d	file:
ROW_ADDR_CHIP_SEL_RB_MASK	nand/vf610_nfc.c	98;"	d	file:
ROW_ADDR_CHIP_SEL_RB_SHIFT	nand/vf610_nfc.c	99;"	d	file:
ROW_ADDR_CHIP_SEL_SHIFT	nand/vf610_nfc.c	101;"	d	file:
ROW_ADDR_MASK	nand/vf610_nfc.c	96;"	d	file:
ROW_ADDR_SHIFT	nand/vf610_nfc.c	97;"	d	file:
S3C2410_ADDR_NALE	nand/s3c2410_nand.c	23;"	d	file:
S3C2410_ADDR_NCLE	nand/s3c2410_nand.c	24;"	d	file:
S3C2410_NFCONF_4STEP	nand/s3c2410_nand.c	16;"	d	file:
S3C2410_NFCONF_512BYTE	nand/s3c2410_nand.c	15;"	d	file:
S3C2410_NFCONF_EN	nand/s3c2410_nand.c	14;"	d	file:
S3C2410_NFCONF_INITECC	nand/s3c2410_nand.c	17;"	d	file:
S3C2410_NFCONF_TACLS	nand/s3c2410_nand.c	19;"	d	file:
S3C2410_NFCONF_TWRPH0	nand/s3c2410_nand.c	20;"	d	file:
S3C2410_NFCONF_TWRPH1	nand/s3c2410_nand.c	21;"	d	file:
S3C2410_NFCONF_nFCE	nand/s3c2410_nand.c	18;"	d	file:
SCRATCH_REG_ADDR	nand/denali.h	382;"	d
SCRATCH_REG_SIZE	nand/denali.h	383;"	d
SECTOR_BYTES	nand/omap_gpmc.c	20;"	d	file:
SECT_4K	spi/sf_internal.h	126;"	d
SF_ADDR	spi/sandbox.c	/^	SF_ADDR,  \/* processing the offset in the flash to read\/etc... *\/$/;"	e	enum:sandbox_sf_state	file:
SF_ADDR_LEN	spi/sandbox.c	60;"	d	file:
SF_CMD	spi/sandbox.c	/^	SF_CMD,   \/* default state -- we're awaiting a command *\/$/;"	e	enum:sandbox_sf_state	file:
SF_DUAL_PARALLEL_FLASH	spi/sf_internal.h	/^	SF_DUAL_PARALLEL_FLASH	= BIT(1),$/;"	e	enum:spi_dual_flash
SF_DUAL_STACKED_FLASH	spi/sf_internal.h	/^	SF_DUAL_STACKED_FLASH	= BIT(0),$/;"	e	enum:spi_dual_flash
SF_ERASE	spi/sandbox.c	/^	SF_ERASE, \/* erase the flash *\/$/;"	e	enum:sandbox_sf_state	file:
SF_ID	spi/sandbox.c	/^	SF_ID,    \/* read the flash's (jedec) ID code *\/$/;"	e	enum:sandbox_sf_state	file:
SF_READ	spi/sandbox.c	/^	SF_READ,  \/* reading data from the flash *\/$/;"	e	enum:sandbox_sf_state	file:
SF_READ_STATUS	spi/sandbox.c	/^	SF_READ_STATUS, \/* read the flash's status register *\/$/;"	e	enum:sandbox_sf_state	file:
SF_READ_STATUS1	spi/sandbox.c	/^	SF_READ_STATUS1, \/* read the flash's status register upper 8 bits*\/$/;"	e	enum:sandbox_sf_state	file:
SF_SINGLE_FLASH	spi/sf_internal.h	/^	SF_SINGLE_FLASH	= 0,$/;"	e	enum:spi_dual_flash
SF_WRITE	spi/sandbox.c	/^	SF_WRITE, \/* writing data to the flash, i.e. page programming *\/$/;"	e	enum:sandbox_sf_state	file:
SF_WRITE_STATUS	spi/sandbox.c	/^	SF_WRITE_STATUS, \/* write the flash's status register *\/$/;"	e	enum:sandbox_sf_state	file:
SIZE	ubi/crc32.c	478;"	d	file:
SIZEOF_STRUCT_MTD_CONCAT	mtdconcat.c	47;"	d	file:
SIZE_128KiB	jedec_flash.c	158;"	d	file:
SIZE_1MiB	jedec_flash.c	161;"	d	file:
SIZE_256KiB	jedec_flash.c	159;"	d	file:
SIZE_2MiB	jedec_flash.c	162;"	d	file:
SIZE_4MiB	jedec_flash.c	163;"	d	file:
SIZE_512KiB	jedec_flash.c	160;"	d	file:
SIZE_64KiB	jedec_flash.c	157;"	d	file:
SIZE_8MiB	jedec_flash.c	164;"	d	file:
SKIPPED_SPARE_BYTES	nand/tegra_nand.c	27;"	d	file:
SNOR_F_SST_WR	spi/sf_internal.h	/^	SNOR_F_SST_WR		= BIT(0),$/;"	e	enum:spi_nor_option_flags
SNOR_F_USE_FSR	spi/sf_internal.h	/^	SNOR_F_USE_FSR		= BIT(1),$/;"	e	enum:spi_nor_option_flags
SNOR_F_USE_UPAGE	spi/sf_internal.h	/^	SNOR_F_USE_UPAGE	= BIT(3),$/;"	e	enum:spi_nor_option_flags
SPARE_ACCESS	nand/denali.c	60;"	d	file:
SPARE_ACCESS	nand/denali_spl.c	14;"	d	file:
SPARE_AREA_MARKER	nand/denali.h	128;"	d
SPARE_AREA_MARKER__VALUE	nand/denali.h	129;"	d
SPARE_AREA_SKIP_BYTES	nand/denali.h	125;"	d
SPARE_AREA_SKIP_BYTES__VALUE	nand/denali.h	126;"	d
SPARE_SINGLEBIT_ERROR	nand/mxc_nand.c	47;"	d	file:
SPECTRA_PARTITION_ID	nand/denali.h	376;"	d
SPECTRA_START_BLOCK	nand/denali.h	378;"	d
SPI0_CLK_DIV_BY_2	spi/sunxi_spi_spl.c	81;"	d	file:
SPI0_CLK_DIV_BY_4	spi/sunxi_spi_spl.c	82;"	d	file:
SPI_FLASH_16MB_BOUN	spi/sf_internal.h	31;"	d
SPI_FLASH_3B_ADDR_LEN	spi/sf_internal.h	29;"	d
SPI_FLASH_CFI_MFR_ATMEL	spi/sf_internal.h	39;"	d
SPI_FLASH_CFI_MFR_MACRONIX	spi/sf_internal.h	36;"	d
SPI_FLASH_CFI_MFR_SPANSION	spi/sf_internal.h	34;"	d
SPI_FLASH_CFI_MFR_SST	spi/sf_internal.h	37;"	d
SPI_FLASH_CFI_MFR_STMICRO	spi/sf_internal.h	35;"	d
SPI_FLASH_CFI_MFR_WINBOND	spi/sf_internal.h	38;"	d
SPI_FLASH_CMD_LEN	spi/sf_internal.h	30;"	d
SPI_FLASH_MAX_ID_LEN	spi/sf_internal.h	102;"	d
SPI_FLASH_PAGE_ERASE_TIMEOUT	spi/sf_internal.h	85;"	d
SPI_FLASH_PROG_TIMEOUT	spi/sf_internal.h	84;"	d
SPI_FLASH_SECTOR_ERASE_TIMEOUT	spi/sf_internal.h	86;"	d
SPI_READ_MAX_SIZE	spi/sunxi_spi_spl.c	185;"	d	file:
SP_OPTIONS	nand/nand_ids.c	16;"	d	file:
SP_OPTIONS16	nand/nand_ids.c	17;"	d	file:
SR_BP0	spi/sf_internal.h	79;"	d
SR_BP1	spi/sf_internal.h	80;"	d
SR_BP2	spi/sf_internal.h	81;"	d
SST39LF010	jedec_flash.c	49;"	d	file:
SST39LF020	jedec_flash.c	50;"	d	file:
SST39LF040	jedec_flash.c	51;"	d	file:
SST39LF160	jedec_flash.c	46;"	d	file:
SST39LF512	jedec_flash.c	48;"	d	file:
SST39LF800	jedec_flash.c	45;"	d	file:
SST39SF010A	jedec_flash.c	52;"	d	file:
SST39SF020A	jedec_flash.c	53;"	d	file:
SST39VF1601	jedec_flash.c	47;"	d	file:
SST_WR	spi/sf_internal.h	128;"	d
START_BIT	nand/vf610_nfc.c	89;"	d	file:
START_CMD_SHIFT	nand/zynq_nand.c	66;"	d	file:
STATE_CMD_DONE	nand/pxa3xx_nand.c	/^	STATE_CMD_DONE,$/;"	e	enum:__anon18	file:
STATE_CMD_HANDLE	nand/pxa3xx_nand.c	/^	STATE_CMD_HANDLE,$/;"	e	enum:__anon18	file:
STATE_DMA_DONE	nand/pxa3xx_nand.c	/^	STATE_DMA_DONE,$/;"	e	enum:__anon18	file:
STATE_DMA_READING	nand/pxa3xx_nand.c	/^	STATE_DMA_READING,$/;"	e	enum:__anon18	file:
STATE_DMA_WRITING	nand/pxa3xx_nand.c	/^	STATE_DMA_WRITING,$/;"	e	enum:__anon18	file:
STATE_IDLE	nand/pxa3xx_nand.c	/^	STATE_IDLE = 0,$/;"	e	enum:__anon18	file:
STATE_PIO_READING	nand/pxa3xx_nand.c	/^	STATE_PIO_READING,$/;"	e	enum:__anon18	file:
STATE_PIO_WRITING	nand/pxa3xx_nand.c	/^	STATE_PIO_WRITING,$/;"	e	enum:__anon18	file:
STATE_PREPARED	nand/pxa3xx_nand.c	/^	STATE_PREPARED,$/;"	e	enum:__anon18	file:
STATE_READY	nand/pxa3xx_nand.c	/^	STATE_READY,$/;"	e	enum:__anon18	file:
STATUS_0	nand/tegra_nand.h	52;"	d
STATUS_BYTE1_MASK	nand/vf610_nfc.c	104;"	d	file:
STATUS_CYCLE	nand/denali.c	78;"	d	file:
STATUS_PEC	spi/sf_internal.h	78;"	d
STATUS_QEB_MXIC	spi/sf_internal.h	77;"	d
STATUS_QEB_WINSPAN	spi/sf_internal.h	76;"	d
STATUS_RBSY0	nand/tegra_nand.h	53;"	d
STATUS_READ_CMD_CODE	nand/vf610_nfc.c	69;"	d	file:
STATUS_WIP	spi/sf_internal.h	75;"	d
STAT_DMA_FIFO	nand/lpc32xx_nand_slc.c	61;"	d	file:
STAT_NAND_READY	nand/lpc32xx_nand_slc.c	62;"	d	file:
STAT_WEL	spi/sandbox.c	57;"	d	file:
STAT_WIP	spi/sandbox.c	56;"	d	file:
STM29F400BB	jedec_flash.c	56;"	d	file:
STM32_FLASH	stm32_flash.c	15;"	d	file:
STM32_FLASH_CR_LOCK	stm32_flash.h	19;"	d
STM32_FLASH_CR_PG	stm32_flash.h	16;"	d
STM32_FLASH_CR_SER	stm32_flash.h	17;"	d
STM32_FLASH_CR_SNB_MASK	stm32_flash.h	21;"	d
STM32_FLASH_CR_SNB_OFFSET	stm32_flash.h	20;"	d
STM32_FLASH_CR_STRT	stm32_flash.h	18;"	d
STM32_FLASH_KEY1	stm32_flash.h	11;"	d
STM32_FLASH_KEY2	stm32_flash.h	12;"	d
STM32_FLASH_SR_BSY	stm32_flash.h	14;"	d
SUN4I_CTL_ENABLE	spi/sunxi_spi_spl.c	47;"	d	file:
SUN4I_CTL_MASTER	spi/sunxi_spi_spl.c	48;"	d	file:
SUN4I_CTL_RF_RST	spi/sunxi_spi_spl.c	50;"	d	file:
SUN4I_CTL_TF_RST	spi/sunxi_spi_spl.c	49;"	d	file:
SUN4I_CTL_XCH	spi/sunxi_spi_spl.c	51;"	d	file:
SUN4I_SPI0_BC	spi/sunxi_spi_spl.c	44;"	d	file:
SUN4I_SPI0_CCTL	spi/sunxi_spi_spl.c	39;"	d	file:
SUN4I_SPI0_CTL	spi/sunxi_spi_spl.c	40;"	d	file:
SUN4I_SPI0_FIFO_STA	spi/sunxi_spi_spl.c	43;"	d	file:
SUN4I_SPI0_RX	spi/sunxi_spi_spl.c	41;"	d	file:
SUN4I_SPI0_TC	spi/sunxi_spi_spl.c	45;"	d	file:
SUN4I_SPI0_TX	spi/sunxi_spi_spl.c	42;"	d	file:
SUN6I_BUS_SOFT_RST_REG0	spi/sunxi_spi_spl.c	76;"	d	file:
SUN6I_CTL_ENABLE	spi/sunxi_spi_spl.c	67;"	d	file:
SUN6I_CTL_MASTER	spi/sunxi_spi_spl.c	68;"	d	file:
SUN6I_CTL_SRST	spi/sunxi_spi_spl.c	69;"	d	file:
SUN6I_SPI0_BCC	spi/sunxi_spi_spl.c	63;"	d	file:
SUN6I_SPI0_CCTL	spi/sunxi_spi_spl.c	57;"	d	file:
SUN6I_SPI0_FIFO_STA	spi/sunxi_spi_spl.c	60;"	d	file:
SUN6I_SPI0_GCR	spi/sunxi_spi_spl.c	58;"	d	file:
SUN6I_SPI0_MBC	spi/sunxi_spi_spl.c	61;"	d	file:
SUN6I_SPI0_MTC	spi/sunxi_spi_spl.c	62;"	d	file:
SUN6I_SPI0_RXD	spi/sunxi_spi_spl.c	65;"	d	file:
SUN6I_SPI0_TCR	spi/sunxi_spi_spl.c	59;"	d	file:
SUN6I_SPI0_TXD	spi/sunxi_spi_spl.c	64;"	d	file:
SUN6I_TCR_XCH	spi/sunxi_spi_spl.c	70;"	d	file:
SUNXI_DMA_CFG_REG0	nand/sunxi_nand_spl.c	83;"	d	file:
SUNXI_DMA_DDMA_BC_REG0	nand/sunxi_nand_spl.c	86;"	d	file:
SUNXI_DMA_DDMA_CFG_REG_DDMA_DST_DRQ_TYPE_DRAM	nand/sunxi_nand_spl.c	91;"	d	file:
SUNXI_DMA_DDMA_CFG_REG_DDMA_SRC_DRQ_TYPE_NFC	nand/sunxi_nand_spl.c	94;"	d	file:
SUNXI_DMA_DDMA_CFG_REG_DMA_DEST_DATA_WIDTH_32	nand/sunxi_nand_spl.c	90;"	d	file:
SUNXI_DMA_DDMA_CFG_REG_DMA_SRC_ADDR_MODE_IO	nand/sunxi_nand_spl.c	93;"	d	file:
SUNXI_DMA_DDMA_CFG_REG_DMA_SRC_DATA_WIDTH_32	nand/sunxi_nand_spl.c	92;"	d	file:
SUNXI_DMA_DDMA_CFG_REG_LOADING	nand/sunxi_nand_spl.c	89;"	d	file:
SUNXI_DMA_DDMA_PARA_REG0	nand/sunxi_nand_spl.c	87;"	d	file:
SUNXI_DMA_DDMA_PARA_REG_SRC_BLK_SIZE	nand/sunxi_nand_spl.c	97;"	d	file:
SUNXI_DMA_DDMA_PARA_REG_SRC_WAIT_CYC	nand/sunxi_nand_spl.c	96;"	d	file:
SUNXI_DMA_DEST_START_ADDRR_REG0	nand/sunxi_nand_spl.c	85;"	d	file:
SUNXI_DMA_SRC_START_ADDR_REG0	nand/sunxi_nand_spl.c	84;"	d	file:
SUPPORT_8BITECC	nand/denali.c	45;"	d	file:
SUP_POW2PS	spi/sf_dataflash.c	454;"	d	file:
TAC_R_HOLD	nand/lpc32xx_nand_slc.c	75;"	d	file:
TAC_R_RDY	nand/lpc32xx_nand_slc.c	73;"	d	file:
TAC_R_SETUP	nand/lpc32xx_nand_slc.c	76;"	d	file:
TAC_R_WIDTH	nand/lpc32xx_nand_slc.c	74;"	d	file:
TAC_W_HOLD	nand/lpc32xx_nand_slc.c	71;"	d	file:
TAC_W_RDY	nand/lpc32xx_nand_slc.c	69;"	d	file:
TAC_W_SETUP	nand/lpc32xx_nand_slc.c	72;"	d	file:
TAC_W_WIDTH	nand/lpc32xx_nand_slc.c	70;"	d	file:
TAG_ECC_BYTES	nand/tegra_nand.c	30;"	d	file:
TAG_PTR_0	nand/tegra_nand.h	179;"	d
TARGET_ERR_ADDR_HI	nand/denali.h	320;"	d
TARGET_ERR_ADDR_HI__VALUE	nand/denali.h	321;"	d
TARGET_ERR_ADDR_LO	nand/denali.h	317;"	d
TARGET_ERR_ADDR_LO__VALUE	nand/denali.h	318;"	d
TIMEOUT_DRAIN_FIFO	nand/pxa3xx_nand.c	22;"	d	file:
TIMING2_0	nand/tegra_nand.h	137;"	d
TIMING2_TADL_CNT_MASK	nand/tegra_nand.h	139;"	d
TIMING2_TADL_CNT_SHIFT	nand/tegra_nand.h	138;"	d
TIMING_0	nand/tegra_nand.h	115;"	d
TIMING_TCR_TAR_TRR_CNT_MASK	nand/tegra_nand.h	121;"	d
TIMING_TCR_TAR_TRR_CNT_SHIFT	nand/tegra_nand.h	120;"	d
TIMING_TCS_CNT_MASK	nand/tegra_nand.h	125;"	d
TIMING_TCS_CNT_SHIFT	nand/tegra_nand.h	124;"	d
TIMING_TRH_CNT_MASK	nand/tegra_nand.h	131;"	d
TIMING_TRH_CNT_SHIFT	nand/tegra_nand.h	130;"	d
TIMING_TRP_CNT_MASK	nand/tegra_nand.h	133;"	d
TIMING_TRP_CNT_SHIFT	nand/tegra_nand.h	132;"	d
TIMING_TRP_RESP_CNT_MASK	nand/tegra_nand.h	117;"	d
TIMING_TRP_RESP_CNT_SHIFT	nand/tegra_nand.h	116;"	d
TIMING_TWB_CNT_MASK	nand/tegra_nand.h	119;"	d
TIMING_TWB_CNT_SHIFT	nand/tegra_nand.h	118;"	d
TIMING_TWHR_CNT_MASK	nand/tegra_nand.h	123;"	d
TIMING_TWHR_CNT_SHIFT	nand/tegra_nand.h	122;"	d
TIMING_TWH_CNT_MASK	nand/tegra_nand.h	127;"	d
TIMING_TWH_CNT_SHIFT	nand/tegra_nand.h	126;"	d
TIMING_TWP_CNT_MASK	nand/tegra_nand.h	129;"	d
TIMING_TWP_CNT_SHIFT	nand/tegra_nand.h	128;"	d
TRANSFER_MODE	nand/denali.h	204;"	d
TRANSFER_MODE__VALUE	nand/denali.h	205;"	d
TRANSFER_SPARE_REG	nand/denali.h	19;"	d
TRANSFER_SPARE_REG__FLAG	nand/denali.h	20;"	d
TROP_US_DELAY	nand/mxc_nand.c	40;"	d	file:
TWO_ROW_ADDRESS_CYCLES	nand/denali.h	416;"	d
TWO_ROW_ADDR_CYCLES	nand/denali.h	95;"	d
TWO_ROW_ADDR_CYCLES__FLAG	nand/denali.h	96;"	d
UBI_BAD_FASTMAP	ubi/ubi.h	/^	UBI_BAD_FASTMAP,$/;"	e	enum:__anon3
UBI_BAD_FASTMAP	ubispl/ubi-wrapper.h	/^	UBI_BAD_FASTMAP,$/;"	e	enum:__anon28
UBI_BGT_NAME_PATTERN	ubi/ubi.h	60;"	d
UBI_COMPAT_DELETE	ubi/ubi-media.h	/^	UBI_COMPAT_DELETE   = 1,$/;"	e	enum:__anon9
UBI_COMPAT_PRESERVE	ubi/ubi-media.h	/^	UBI_COMPAT_PRESERVE = 4,$/;"	e	enum:__anon9
UBI_COMPAT_REJECT	ubi/ubi-media.h	/^	UBI_COMPAT_REJECT   = 5$/;"	e	enum:__anon9
UBI_COMPAT_RO	ubi/ubi-media.h	/^	UBI_COMPAT_RO       = 2,$/;"	e	enum:__anon9
UBI_CRC32_INIT	ubi/ubi-media.h	30;"	d
UBI_DFS_DIR_LEN	ubi/ubi.h	89;"	d
UBI_DFS_DIR_NAME	ubi/ubi.h	88;"	d
UBI_DYNAMIC_VOLUME	ubispl/ubi-wrapper.h	/^	UBI_DYNAMIC_VOLUME = 3,$/;"	e	enum:__anon27
UBI_EC_HDR_MAGIC	ubi/ubi-media.h	33;"	d
UBI_EC_HDR_SIZE	ubi/ubi-media.h	104;"	d
UBI_EC_HDR_SIZE_CRC	ubi/ubi-media.h	108;"	d
UBI_FASTMAP_ANCHOR	ubispl/ubi-wrapper.h	/^	UBI_FASTMAP_ANCHOR,$/;"	e	enum:__anon26
UBI_FM_BM_SIZE	ubispl/ubispl.h	27;"	d
UBI_FM_BUF_SIZE	ubispl/ubispl.h	23;"	d
UBI_FM_DATA_VOLUME_ID	ubi/ubi-media.h	373;"	d
UBI_FM_EBA_MAGIC	ubi/ubi-media.h	382;"	d
UBI_FM_FMT_VERSION	ubi/ubi-media.h	376;"	d
UBI_FM_HDR_MAGIC	ubi/ubi-media.h	379;"	d
UBI_FM_MAX_BLOCKS	ubi/ubi-media.h	389;"	d
UBI_FM_MAX_POOL_SIZE	ubi/ubi-media.h	396;"	d
UBI_FM_MAX_START	ubi/ubi-media.h	386;"	d
UBI_FM_MIN_POOL_SIZE	ubi/ubi-media.h	395;"	d
UBI_FM_POOL_MAGIC	ubi/ubi-media.h	381;"	d
UBI_FM_SB_MAGIC	ubi/ubi-media.h	378;"	d
UBI_FM_SB_VOLUME_ID	ubi/ubi-media.h	372;"	d
UBI_FM_VHDR_MAGIC	ubi/ubi-media.h	380;"	d
UBI_INTERNAL_VOL_START	ubi/ubi-media.h	292;"	d
UBI_INT_VOL_COUNT	ubi/ubi-media.h	286;"	d
UBI_IO_BAD_HDR	ubi/ubi.h	/^	UBI_IO_BAD_HDR,$/;"	e	enum:__anon1
UBI_IO_BAD_HDR	ubispl/ubi-wrapper.h	/^	UBI_IO_BAD_HDR,$/;"	e	enum:__anon26
UBI_IO_BAD_HDR_EBADMSG	ubi/ubi.h	/^	UBI_IO_BAD_HDR_EBADMSG,$/;"	e	enum:__anon1
UBI_IO_BAD_HDR_EBADMSG	ubispl/ubi-wrapper.h	/^	UBI_IO_BAD_HDR_EBADMSG,$/;"	e	enum:__anon26
UBI_IO_BITFLIPS	ubi/ubi.h	/^	UBI_IO_BITFLIPS,$/;"	e	enum:__anon1
UBI_IO_BITFLIPS	ubispl/ubi-wrapper.h	/^	UBI_IO_BITFLIPS,$/;"	e	enum:__anon26
UBI_IO_FF	ubi/ubi.h	/^	UBI_IO_FF = 1,$/;"	e	enum:__anon1
UBI_IO_FF	ubispl/ubi-wrapper.h	/^	UBI_IO_FF = 1,$/;"	e	enum:__anon26
UBI_IO_FF_BITFLIPS	ubi/ubi.h	/^	UBI_IO_FF_BITFLIPS,$/;"	e	enum:__anon1
UBI_IO_FF_BITFLIPS	ubispl/ubi-wrapper.h	/^	UBI_IO_FF_BITFLIPS,$/;"	e	enum:__anon26
UBI_IO_RETRIES	ubi/ubi.h	72;"	d
UBI_LAYOUT_VOLUME_ALIGN	ubi/ubi-media.h	298;"	d
UBI_LAYOUT_VOLUME_COMPAT	ubi/ubi-media.h	301;"	d
UBI_LAYOUT_VOLUME_EBS	ubi/ubi-media.h	299;"	d
UBI_LAYOUT_VOLUME_ID	ubi/ubi-media.h	296;"	d
UBI_LAYOUT_VOLUME_NAME	ubi/ubi-media.h	300;"	d
UBI_LAYOUT_VOLUME_TYPE	ubi/ubi-media.h	297;"	d
UBI_LEB_UNMAPPED	ubi/ubi.h	66;"	d
UBI_MAX_DEVICES	ubi/ubi.h	39;"	d
UBI_MAX_ERASECOUNTER	ubi/ubi-media.h	27;"	d
UBI_MAX_VOLUMES	ubi/ubi-media.h	304;"	d
UBI_MAX_VOL_LEBS	ubispl/ubispl.h	31;"	d
UBI_NAME_STR	ubi/ubi.h	42;"	d
UBI_NO_FASTMAP	ubi/ubi.h	/^	UBI_NO_FASTMAP = 1,$/;"	e	enum:__anon3
UBI_NO_FASTMAP	ubispl/ubi-wrapper.h	/^	UBI_NO_FASTMAP = 1,$/;"	e	enum:__anon28
UBI_PROT_QUEUE_LEN	ubi/ubi.h	79;"	d
UBI_SPL_VOL_IDS	ubispl/ubispl.h	17;"	d
UBI_STATIC_VOLUME	ubispl/ubi-wrapper.h	/^	UBI_STATIC_VOLUME  = 4,$/;"	e	enum:__anon27
UBI_UNKNOWN	ubi/ubi.h	82;"	d
UBI_VERSION	ubi/ubi-media.h	24;"	d
UBI_VID_DYNAMIC	ubi/ubi-media.h	/^	UBI_VID_DYNAMIC = 1,$/;"	e	enum:__anon7
UBI_VID_HDR_MAGIC	ubi/ubi-media.h	35;"	d
UBI_VID_HDR_SIZE	ubi/ubi-media.h	105;"	d
UBI_VID_HDR_SIZE_CRC	ubi/ubi-media.h	109;"	d
UBI_VID_STATIC	ubi/ubi-media.h	/^	UBI_VID_STATIC  = 2$/;"	e	enum:__anon7
UBI_VOL_BM_SIZE	ubispl/ubispl.h	35;"	d
UBI_VOL_NAME_MAX	ubi/ubi-media.h	307;"	d
UBI_VTBL_AUTORESIZE_FLG	ubi/ubi-media.h	/^	UBI_VTBL_AUTORESIZE_FLG = 0x01,$/;"	e	enum:__anon8
UBI_VTBL_RECORD_SIZE	ubi/ubi-media.h	310;"	d
UBI_VTBL_RECORD_SIZE_CRC	ubi/ubi-media.h	313;"	d
UBI_WL_H	ubi/wl.h	2;"	d
UBI_WL_THRESHOLD	ubi/wl.c	110;"	d	file:
UNLOCK_KEY1	pic32_flash.c	39;"	d	file:
UNLOCK_KEY2	pic32_flash.c	40;"	d	file:
W39L040A	jedec_flash.c	62;"	d	file:
WB_EDGE	nand/bfin_nand.c	51;"	d	file:
WB_EMPTY	nand/bfin_nand.c	45;"	d	file:
WB_FULL	nand/bfin_nand.c	42;"	d	file:
WB_OVF	nand/bfin_nand.c	50;"	d	file:
WE_2_RE	nand/denali.h	68;"	d
WE_2_RE__VALUE	nand/denali.h	69;"	d
WINDOW_SIZE	nand/fsl_elbc_spl.c	18;"	d	file:
WL_FREE_MAX_DIFF	ubi/wl.c	123;"	d	file:
WL_MAX_FAILURES	ubi/wl.c	129;"	d	file:
WL_RESERVED_PEBS	ubi/wl.c	102;"	d	file:
WRITE_ENABLE_2_READ_ENABLE	nand/denali.h	413;"	d
WRITE_MODE	nand/denali.h	107;"	d
WRITE_MODE__VALUE	nand/denali.h	108;"	d
WRITE_PROTECT	nand/denali.h	140;"	d
WRITE_PROTECT__FLAG	nand/denali.h	141;"	d
WR_DLY	nand/bfin_nand.c	34;"	d	file:
WR_DONE	nand/bfin_nand.c	53;"	d	file:
WR_QPP	spi/sf_internal.h	129;"	d
ZYNQ_MEMC_CLRCR_INT_CLR1	nand/zynq_nand.c	28;"	d	file:
ZYNQ_MEMC_NAND_ECC_MODE_MASK	nand/zynq_nand.c	31;"	d	file:
ZYNQ_MEMC_SR_INT_ST1	nand/zynq_nand.c	30;"	d	file:
ZYNQ_MEMC_SR_RAW_INT_ST1	nand/zynq_nand.c	29;"	d	file:
ZYNQ_NAND_CLEAR_CS	nand/zynq_nand.c	78;"	d	file:
ZYNQ_NAND_CLR_CONFIG	nand/zynq_nand.c	34;"	d	file:
ZYNQ_NAND_CMD_PHASE	nand/zynq_nand.c	22;"	d	file:
ZYNQ_NAND_DATA_PHASE	nand/zynq_nand.c	23;"	d	file:
ZYNQ_NAND_DIRECT_CMD	nand/zynq_nand.c	48;"	d	file:
ZYNQ_NAND_ECC_BUSY	nand/zynq_nand.c	81;"	d	file:
ZYNQ_NAND_ECC_CMD1	nand/zynq_nand.c	55;"	d	file:
ZYNQ_NAND_ECC_CMD2	nand/zynq_nand.c	60;"	d	file:
ZYNQ_NAND_ECC_CONFIG	nand/zynq_nand.c	51;"	d	file:
ZYNQ_NAND_ECC_LAST	nand/zynq_nand.c	77;"	d	file:
ZYNQ_NAND_ECC_MASK	nand/zynq_nand.c	82;"	d	file:
ZYNQ_NAND_ECC_SIZE	nand/zynq_nand.c	24;"	d	file:
ZYNQ_NAND_ECC_STATUS	nand/zynq_nand.c	27;"	d	file:
ZYNQ_NAND_SET_CYCLES	nand/zynq_nand.c	39;"	d	file:
ZYNQ_NAND_SET_OPMODE_16BIT	nand/zynq_nand.c	26;"	d	file:
ZYNQ_NAND_SET_OPMODE_8BIT	nand/zynq_nand.c	25;"	d	file:
_SF_INTERNAL_H_	spi/sf_internal.h	11;"	d
_UBOOT_MTD_UBISPL_H	ubispl/ubispl.h	8;"	d
__ASM_ARCH_PXA3XX_NAND_H	nand/pxa3xx_nand.h	2;"	d
__DENALI_H__	nand/denali.h	9;"	d
__MXC_NAND_H	nand/mxc_nand.h	8;"	d
__UBI_DEBUG_H__	ubi/debug.h	10;"	d
__UBI_MEDIA_H__	ubi/ubi-media.h	19;"	d
__UBI_UBI_H__	ubi/ubi.h	11;"	d
__UBOOT_UBI_WRAPPER_H	ubispl/ubi-wrapper.h	18;"	d
__board_nand_init	nand/denali.c	/^static int __board_nand_init(void)$/;"	f	file:
__flash_cmd_reset	cfi_flash.c	/^static void __flash_cmd_reset(flash_info_t *info)$/;"	f	file:
__flash_detect_cfi	cfi_flash.c	/^static int __flash_detect_cfi (flash_info_t * info, struct cfi_qry *qry)$/;"	f	file:
__get_mtd_device	mtdcore.c	/^EXPORT_SYMBOL_GPL(__get_mtd_device);$/;"	v
__get_mtd_device	mtdcore.c	/^int __get_mtd_device(struct mtd_info *mtd)$/;"	f
__maybe_weak	cfi_flash.c	73;"	d	file:
__maybe_weak	cfi_flash.c	75;"	d	file:
__mpc5121_nfc_select_chip	nand/mpc5121_nfc.c	/^void __mpc5121_nfc_select_chip(struct mtd_info *mtd, int chip)$/;"	f
__mtd_next_device	mtdcore.c	/^EXPORT_SYMBOL_GPL(__mtd_next_device);$/;"	v
__mtd_next_device	mtdcore.c	/^struct mtd_info *__mtd_next_device(int i)$/;"	f
__packed	ubi/ubi-media.h	/^} __packed;$/;"	v	typeref:struct:ubi_ec_hdr
__packed	ubi/ubi-media.h	/^} __packed;$/;"	v	typeref:struct:ubi_fm_eba
__packed	ubi/ubi-media.h	/^} __packed;$/;"	v	typeref:struct:ubi_fm_ec
__packed	ubi/ubi-media.h	/^} __packed;$/;"	v	typeref:struct:ubi_fm_hdr
__packed	ubi/ubi-media.h	/^} __packed;$/;"	v	typeref:struct:ubi_fm_sb
__packed	ubi/ubi-media.h	/^} __packed;$/;"	v	typeref:struct:ubi_fm_scan_pool
__packed	ubi/ubi-media.h	/^} __packed;$/;"	v	typeref:struct:ubi_fm_volhdr
__packed	ubi/ubi-media.h	/^} __packed;$/;"	v	typeref:struct:ubi_vid_hdr
__packed	ubi/ubi-media.h	/^} __packed;$/;"	v	typeref:struct:ubi_vtbl_record
__put_mtd_device	mtdcore.c	/^EXPORT_SYMBOL_GPL(__put_mtd_device);$/;"	v
__put_mtd_device	mtdcore.c	/^void __put_mtd_device(struct mtd_info *mtd)$/;"	f
__read_prefetch_aligned	nand/omap_gpmc.c	/^static int __read_prefetch_aligned(struct nand_chip *chip, uint32_t *buf, int len)$/;"	f	file:
__schedule_ubi_work	ubi/wl.c	/^static void __schedule_ubi_work(struct ubi_device *ubi, struct ubi_work *wrk)$/;"	f	file:
_mxc_nand_enable_hwecc	nand/mxc_nand.c	/^static void _mxc_nand_enable_hwecc(struct mtd_info *mtd, int on)$/;"	f	file:
_sunxi_nand_lookup_timing	nand/sunxi_nand.c	/^static int _sunxi_nand_lookup_timing(const s32 *lut, int lut_size, u32 duration,$/;"	f	file:
acr	stm32_flash.h	/^	u32 acr;$/;"	m	struct:stm32_flash_regs
add_aeb	ubi/fastmap.c	/^static int add_aeb(struct ubi_attach_info *ai, struct list_head *list,$/;"	f	file:
add_corrupted	ubi/attach.c	/^static int add_corrupted(struct ubi_attach_info *ai, int pnum, int ec)$/;"	f	file:
add_dataflash	spi/sf_dataflash.c	/^static int add_dataflash(struct udevice *dev, char *name, int nr_pages,$/;"	f	file:
add_marker_len	nand/nand_bbt.c	/^static u32 add_marker_len(struct nand_bbt_descr *td)$/;"	f	file:
add_mtd_device	mtdcore.c	/^int add_mtd_device(struct mtd_info *mtd)$/;"	f
add_mtd_partitions	mtdpart.c	/^int add_mtd_partitions(struct mtd_info *master,$/;"	f
add_to_list	ubi/attach.c	/^static int add_to_list(struct ubi_attach_info *ai, int pnum, int vol_id,$/;"	f	file:
add_vol	ubi/fastmap.c	/^static struct ubi_ainf_volume *add_vol(struct ubi_attach_info *ai, int vol_id,$/;"	f	file:
add_volume	ubi/attach.c	/^static struct ubi_ainf_volume *add_volume(struct ubi_attach_info *ai,$/;"	f	file:
addr	nand/fsl_elbc_nand.c	/^	u8 __iomem *addr;        \/* Address of assigned FCM buffer        *\/$/;"	m	struct:fsl_elbc_ctrl	file:
addr	nand/fsl_ifc_nand.c	/^	void __iomem *addr;      \/* Address of assigned IFC buffer        *\/$/;"	m	struct:fsl_ifc_ctrl	file:
addr	nand/lpc32xx_nand_mlc.c	/^	u32 addr;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
addr	nand/lpc32xx_nand_slc.c	/^	u32 addr;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
addr	nand/sunxi_nand.c	/^	u32 addr[2];$/;"	m	struct:sunxi_nand_chip	file:
addr	pic32_flash.c	/^	struct pic32_reg_atomic addr;$/;"	m	struct:pic32_reg_nvm	typeref:struct:pic32_reg_nvm::pic32_reg_atomic	file:
addr1	jedec_flash.c	/^	u32 addr1;$/;"	m	struct:unlock_addr	file:
addr2	jedec_flash.c	/^	u32 addr2;$/;"	m	struct:unlock_addr	file:
addr_bytes	spi/sandbox.c	/^	uint addr_bytes, pad_addr_bytes;$/;"	m	struct:sandbox_spi_flash	file:
addr_cycles	nand/arasan_nfc.c	/^	u8 addr_cycles;$/;"	m	struct:arasan_nand_command_format	file:
addr_cycles	nand/arasan_nfc.c	/^enum addr_cycles {$/;"	g	file:
addr_cycles	nand/sunxi_nand.c	/^	int addr_cycles;$/;"	m	struct:sunxi_nand_chip	file:
addr_cycles	nand/sunxi_nand_spl.c	/^	int addr_cycles;$/;"	m	struct:nfc_config	file:
addr_cycles	nand/zynq_nand.c	/^	u8 addr_cycles;$/;"	m	struct:zynq_nand_command_format	file:
addr_dataflash	dataflash.c	/^int addr_dataflash (unsigned long addr)$/;"	f
addr_reg1	nand/tegra_nand.h	/^	u32	addr_reg1;	\/* offset 28h *\/$/;"	m	struct:nand_ctlr
addr_reg2	nand/tegra_nand.h	/^	u32	addr_reg2;	\/* offset 2Ch *\/$/;"	m	struct:nand_ctlr
addrlen	mw_eeprom.c	/^static int addrlen;$/;"	v	file:
aeb_slab_cache	ubi/ubi.h	/^	struct kmem_cache *aeb_slab_cache;$/;"	m	struct:ubi_attach_info	typeref:struct:ubi_attach_info::kmem_cache
ahb_addr	onenand/samsung.c	/^	void __iomem	*ahb_addr;$/;"	m	struct:s3c_onenand	file:
ahb_clk	nand/sunxi_nand.c	/^	struct clk *ahb_clk;$/;"	m	struct:sunxi_nfc	typeref:struct:sunxi_nfc::clk	file:
alc_mutex	ubi/ubi.h	/^	struct mutex alc_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
alien	ubi/ubi.h	/^	struct list_head alien;$/;"	m	struct:ubi_attach_info	typeref:struct:ubi_attach_info::list_head
alien_peb_count	ubi/ubi.h	/^	int alien_peb_count;$/;"	m	struct:ubi_attach_info
alignment	ubi/ubi-media.h	/^	__be32  alignment;$/;"	m	struct:ubi_vtbl_record
alignment	ubi/ubi.h	/^	int alignment;$/;"	m	struct:ubi_volume
alloc_ai	ubi/attach.c	/^static struct ubi_attach_info *alloc_ai(void)$/;"	f	file:
alloc_nand_resource	nand/pxa3xx_nand.c	/^static int alloc_nand_resource(struct pxa3xx_nand_info *info)$/;"	f	file:
allocate_partition	mtdpart.c	/^static struct mtd_part *allocate_partition(struct mtd_info *master,$/;"	f	file:
alt_buf	nand/vf610_nfc.c	/^	enum vf610_nfc_alt_buf alt_buf;$/;"	m	struct:vf610_nfc	typeref:enum:vf610_nfc::vf610_nfc_alt_buf	file:
altera_qspi	altera_qspi.c	/^U_BOOT_DRIVER(altera_qspi) = {$/;"	v
altera_qspi_erase	altera_qspi.c	/^static int altera_qspi_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
altera_qspi_get_locked_range	altera_qspi.c	/^static void altera_qspi_get_locked_range(struct mtd_info *mtd, loff_t *ofs,$/;"	f	file:
altera_qspi_ids	altera_qspi.c	/^static const struct udevice_id altera_qspi_ids[] = {$/;"	v	typeref:struct:udevice_id	file:
altera_qspi_lock	altera_qspi.c	/^static int altera_qspi_lock(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f	file:
altera_qspi_ofdata_to_platdata	altera_qspi.c	/^static int altera_qspi_ofdata_to_platdata(struct udevice *dev)$/;"	f	file:
altera_qspi_platdata	altera_qspi.c	/^struct altera_qspi_platdata {$/;"	s	file:
altera_qspi_probe	altera_qspi.c	/^static int altera_qspi_probe(struct udevice *dev)$/;"	f	file:
altera_qspi_read	altera_qspi.c	/^static int altera_qspi_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
altera_qspi_regs	altera_qspi.c	/^struct altera_qspi_regs {$/;"	s	file:
altera_qspi_sync	altera_qspi.c	/^static void altera_qspi_sync(struct mtd_info *mtd)$/;"	f	file:
altera_qspi_unlock	altera_qspi.c	/^static int altera_qspi_unlock(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f	file:
altera_qspi_write	altera_qspi.c	/^static int altera_qspi_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
amd_flash_info	jedec_flash.c	/^struct amd_flash_info {$/;"	s	file:
anchor	ubi/ubi.h	/^	int anchor;$/;"	m	struct:ubi_work
anchor_pebs_avalible	ubi/fastmap-wl.c	/^static int anchor_pebs_avalible(struct rb_root *root)$/;"	f	file:
arasan_ecc_matrix	nand/arasan_nfc.c	/^struct arasan_ecc_matrix {$/;"	s	file:
arasan_nand_base	nand/arasan_nfc.c	57;"	d	file:
arasan_nand_cmd_function	nand/arasan_nfc.c	/^static void arasan_nand_cmd_function(struct mtd_info *mtd, unsigned int command,$/;"	f	file:
arasan_nand_command_format	nand/arasan_nfc.c	/^struct arasan_nand_command_format {$/;"	s	file:
arasan_nand_commands	nand/arasan_nfc.c	/^static struct arasan_nand_command_format arasan_nand_commands[] = {$/;"	v	typeref:struct:arasan_nand_command_format	file:
arasan_nand_ecc_init	nand/arasan_nfc.c	/^static int arasan_nand_ecc_init(struct mtd_info *mtd)$/;"	f	file:
arasan_nand_enable_ecc	nand/arasan_nfc.c	/^static void arasan_nand_enable_ecc(void)$/;"	f	file:
arasan_nand_erase	nand/arasan_nfc.c	/^static int arasan_nand_erase(struct arasan_nand_command_format *curr_cmd,$/;"	f	file:
arasan_nand_fill_tx	nand/arasan_nfc.c	/^static void arasan_nand_fill_tx(const u8 *buf, int len)$/;"	f	file:
arasan_nand_get_addrcycle	nand/arasan_nfc.c	/^static u8 arasan_nand_get_addrcycle(struct mtd_info *mtd)$/;"	f	file:
arasan_nand_info	nand/arasan_nfc.c	/^struct arasan_nand_info {$/;"	s	file:
arasan_nand_init	nand/arasan_nfc.c	/^static int arasan_nand_init(struct nand_chip *nand_chip, int devnum)$/;"	f	file:
arasan_nand_page	nand/arasan_nfc.c	/^static u8 arasan_nand_page(struct mtd_info *mtd)$/;"	f	file:
arasan_nand_read_buf	nand/arasan_nfc.c	/^static void arasan_nand_read_buf(struct mtd_info *mtd, u8 *buf, int size)$/;"	f	file:
arasan_nand_read_byte	nand/arasan_nfc.c	/^static u8 arasan_nand_read_byte(struct mtd_info *mtd)$/;"	f	file:
arasan_nand_read_oob	nand/arasan_nfc.c	/^static int arasan_nand_read_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
arasan_nand_read_page	nand/arasan_nfc.c	/^static int arasan_nand_read_page(struct mtd_info *mtd, u8 *buf, u32 size)$/;"	f	file:
arasan_nand_read_page_hwecc	nand/arasan_nfc.c	/^static int arasan_nand_read_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
arasan_nand_read_status	nand/arasan_nfc.c	/^static int arasan_nand_read_status(struct arasan_nand_command_format *curr_cmd,$/;"	f	file:
arasan_nand_reset	nand/arasan_nfc.c	/^static int arasan_nand_reset(struct arasan_nand_command_format *curr_cmd)$/;"	f	file:
arasan_nand_select_chip	nand/arasan_nfc.c	/^static void arasan_nand_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
arasan_nand_send_rdcmd	nand/arasan_nfc.c	/^static int arasan_nand_send_rdcmd(struct arasan_nand_command_format *curr_cmd,$/;"	f	file:
arasan_nand_send_wrcmd	nand/arasan_nfc.c	/^static int arasan_nand_send_wrcmd(struct arasan_nand_command_format *curr_cmd,$/;"	f	file:
arasan_nand_write_buf	nand/arasan_nfc.c	/^static void arasan_nand_write_buf(struct mtd_info *mtd, const u8 *buf, int len)$/;"	f	file:
arasan_nand_write_oob	nand/arasan_nfc.c	/^static int arasan_nand_write_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
arasan_nand_write_page_hwecc	nand/arasan_nfc.c	/^static int arasan_nand_write_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
assign_aeb_to_av	ubi/fastmap.c	/^static void assign_aeb_to_av(struct ubi_attach_info *ai,$/;"	f	file:
assign_aeb_to_av	ubispl/ubispl.c	/^static int assign_aeb_to_av(struct ubi_scan_info *ubi, u32 pnum, u32 lnum,$/;"	f	file:
assigned_cs	nand/sunxi_nand.c	/^	unsigned long assigned_cs;$/;"	m	struct:sunxi_nfc	file:
at91_nand_hwcontrol	nand/atmel_nand.c	/^static void at91_nand_hwcontrol(struct mtd_info *mtd,$/;"	f	file:
at91_nand_ready	nand/atmel_nand.c	/^static int at91_nand_ready(struct mtd_info *mtd)$/;"	f	file:
at91_nand_wait_ready	nand/atmel_nand.c	/^int at91_nand_wait_ready(struct mtd_info *mtd)$/;"	f
atmel_hwecc_nand_init_param	nand/atmel_nand.c	/^int atmel_hwecc_nand_init_param(struct nand_chip *nand, struct mtd_info *mtd)$/;"	f
atmel_nand_calculate	nand/atmel_nand.c	/^static int atmel_nand_calculate(struct mtd_info *mtd,$/;"	f	file:
atmel_nand_chip_init	nand/atmel_nand.c	/^int atmel_nand_chip_init(int devnum, ulong base_addr)$/;"	f
atmel_nand_correct	nand/atmel_nand.c	/^static int atmel_nand_correct(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
atmel_nand_host	nand/atmel_nand.c	/^struct atmel_nand_host {$/;"	s	file:
atmel_nand_hwctl	nand/atmel_nand.c	/^static void atmel_nand_hwctl(struct mtd_info *mtd, int mode)$/;"	f	file:
atmel_nand_pmecc_read_page	nand/atmel_nand.c	/^static int atmel_nand_pmecc_read_page(struct mtd_info *mtd,$/;"	f	file:
atmel_nand_pmecc_write_page	nand/atmel_nand.c	/^static int atmel_nand_pmecc_write_page(struct mtd_info *mtd,$/;"	f	file:
atmel_nand_read_page	nand/atmel_nand.c	/^static int atmel_nand_read_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
atmel_oobinfo_large	nand/atmel_nand.c	/^static struct nand_ecclayout atmel_oobinfo_large = {$/;"	v	typeref:struct:nand_ecclayout	file:
atmel_oobinfo_small	nand/atmel_nand.c	/^static struct nand_ecclayout atmel_oobinfo_small = {$/;"	v	typeref:struct:nand_ecclayout	file:
atmel_pmecc_core_init	nand/atmel_nand.c	/^static void atmel_pmecc_core_init(struct mtd_info *mtd)$/;"	f	file:
atmel_pmecc_nand_init_params	nand/atmel_nand.c	/^static int atmel_pmecc_nand_init_params(struct nand_chip *nand,$/;"	f	file:
atmel_pmecc_oobinfo	nand/atmel_nand.c	/^static struct nand_ecclayout atmel_pmecc_oobinfo;$/;"	v	typeref:struct:nand_ecclayout	file:
attr_vol_alignment	ubi/vmt.c	/^static struct device_attribute attr_vol_alignment =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_corrupted	ubi/vmt.c	/^static struct device_attribute attr_vol_corrupted =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_data_bytes	ubi/vmt.c	/^static struct device_attribute attr_vol_data_bytes =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_name	ubi/vmt.c	/^static struct device_attribute attr_vol_name =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_reserved_ebs	ubi/vmt.c	/^static struct device_attribute attr_vol_reserved_ebs =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_type	ubi/vmt.c	/^static struct device_attribute attr_vol_type =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_upd_marker	ubi/vmt.c	/^static struct device_attribute attr_vol_upd_marker =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_usable_eb_size	ubi/vmt.c	/^static struct device_attribute attr_vol_usable_eb_size =$/;"	v	typeref:struct:device_attribute	file:
autoresize	ubi/build.c	/^static int autoresize(struct ubi_device *ubi, int vol_id)$/;"	f	file:
autoresize_vol_id	ubi/ubi.h	/^	int autoresize_vol_id;$/;"	m	struct:ubi_device
avail_pebs	ubi/ubi.h	/^	int avail_pebs;$/;"	m	struct:ubi_device
bad_allowed	ubi/ubi.h	/^	unsigned int bad_allowed:1;$/;"	m	struct:ubi_device
bad_block	nand/fsl_ifc_spl.c	/^static inline int bad_block(uchar *marker, int port_size)$/;"	f	file:
bad_peb_count	ubi/ubi-media.h	/^	__be32 bad_peb_count;$/;"	m	struct:ubi_fm_hdr
bad_peb_count	ubi/ubi.h	/^	int bad_peb_count;$/;"	m	struct:ubi_attach_info
bad_peb_count	ubi/ubi.h	/^	int bad_peb_count;$/;"	m	struct:ubi_device
bad_peb_limit	ubi/ubi.h	/^	int bad_peb_limit;$/;"	m	struct:ubi_device
bank	nand/fsl_elbc_nand.c	/^	int bank;               \/* Chip select bank number           *\/$/;"	m	struct:fsl_elbc_mtd	file:
bank	nand/fsl_ifc_nand.c	/^	int bank;               \/* Chip select bank number                *\/$/;"	m	struct:fsl_ifc_mtd	file:
bank_base	st_smi.c	/^static ulong bank_base[CONFIG_SYS_MAX_FLASH_BANKS] =$/;"	v	file:
base	altera_qspi.c	/^	void *base;$/;"	m	struct:altera_qspi_platdata	file:
base	onenand/samsung.c	/^	void __iomem	*base;$/;"	m	struct:s3c_onenand	file:
base_addr	nand/atmel_nand.c	/^static ulong base_addr[CONFIG_SYS_MAX_NAND_DEVICE] = CONFIG_SYS_NAND_BASE_LIST;$/;"	v	file:
base_address	nand/fsl_elbc_nand.c	/^static unsigned long base_address[CONFIG_SYS_MAX_NAND_DEVICE] =$/;"	v	file:
base_address	nand/fsl_ifc_nand.c	/^static unsigned long base_address[CONFIG_SYS_MAX_NAND_DEVICE] =$/;"	v	file:
base_address	nand/nand.c	/^static ulong base_address[CONFIG_SYS_MAX_NAND_DEVICE] = CONFIG_SYS_NAND_BASE_LIST;$/;"	v	file:
bbt_get_entry	nand/nand_bbt.c	/^static inline uint8_t bbt_get_entry(struct nand_chip *chip, int block)$/;"	f	file:
bbt_get_ver_offs	nand/nand_bbt.c	/^static u32 bbt_get_ver_offs(struct mtd_info *mtd, struct nand_bbt_descr *td)$/;"	f	file:
bbt_main_descr	nand/fsl_elbc_nand.c	/^static struct nand_bbt_descr bbt_main_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_main_descr	nand/fsl_ifc_nand.c	/^static struct nand_bbt_descr bbt_main_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_main_descr	nand/mxc_nand.c	/^static struct nand_bbt_descr bbt_main_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_main_descr	nand/nand_bbt.c	/^static struct nand_bbt_descr bbt_main_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_main_descr	nand/pxa3xx_nand.c	/^static struct nand_bbt_descr bbt_main_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_main_descr	nand/zynq_nand.c	/^static struct nand_bbt_descr bbt_main_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_main_no_oob_descr	nand/nand_bbt.c	/^static struct nand_bbt_descr bbt_main_no_oob_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_mark_entry	nand/nand_bbt.c	/^static inline void bbt_mark_entry(struct nand_chip *chip, int block,$/;"	f	file:
bbt_mirror_descr	nand/fsl_elbc_nand.c	/^static struct nand_bbt_descr bbt_mirror_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_mirror_descr	nand/fsl_ifc_nand.c	/^static struct nand_bbt_descr bbt_mirror_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_mirror_descr	nand/mxc_nand.c	/^static struct nand_bbt_descr bbt_mirror_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_mirror_descr	nand/nand_bbt.c	/^static struct nand_bbt_descr bbt_mirror_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_mirror_descr	nand/pxa3xx_nand.c	/^static struct nand_bbt_descr bbt_mirror_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_mirror_descr	nand/zynq_nand.c	/^static struct nand_bbt_descr bbt_mirror_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_mirror_no_oob_descr	nand/nand_bbt.c	/^static struct nand_bbt_descr bbt_mirror_no_oob_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_mirror_pattern	nand/pxa3xx_nand.c	/^static u8 bbt_mirror_pattern[] = {'1', 't', 'b', 'B', 'V', 'M' };$/;"	v	file:
bbt_pattern	nand/bfin_nand.c	/^static uint8_t bbt_pattern[] = { 0xff };$/;"	v	file:
bbt_pattern	nand/fsl_elbc_nand.c	/^static u8 bbt_pattern[] = {'B', 'b', 't', '0' };$/;"	v	file:
bbt_pattern	nand/fsl_ifc_nand.c	/^static u8 bbt_pattern[] = {'B', 'b', 't', '0' };$/;"	v	file:
bbt_pattern	nand/mxc_nand.c	/^static u8 bbt_pattern[] = {'B', 'b', 't', '0' };$/;"	v	file:
bbt_pattern	nand/nand_bbt.c	/^static uint8_t bbt_pattern[] = {'B', 'b', 't', '0' };$/;"	v	file:
bbt_pattern	nand/pxa3xx_nand.c	/^static u8 bbt_pattern[] = {'M', 'V', 'B', 'b', 't', '0' };$/;"	v	file:
bbt_pattern	nand/zynq_nand.c	/^static u8 bbt_pattern[] = {'B', 'b', 't', '0' };$/;"	v	file:
bbtskipbytes	nand/denali.h	/^	uint32_t bbtskipbytes;$/;"	m	struct:denali_nand_info
bch	nand/arasan_nfc.c	/^	u8 bch;$/;"	m	struct:arasan_ecc_matrix	file:
bch	nand/nand_bch.c	/^	struct bch_control   *bch;$/;"	m	struct:nand_bch_control	typeref:struct:nand_bch_control::bch_control	file:
bch8_polynomial	nand/omap_gpmc.c	/^static u8  bch8_polynomial[] = {0xef, 0x51, 0x2e, 0x09, 0xed, 0x93, 0x9a, 0xc2,$/;"	v	file:
bch_config	nand/tegra_nand.h	/^	u32	bch_config;	\/* offset CCh *\/$/;"	m	struct:nand_ctlr
bch_dec_result	nand/tegra_nand.h	/^	u32	bch_dec_result;	\/* offset D0h *\/$/;"	m	struct:nand_ctlr
bch_dec_status_buf	nand/tegra_nand.h	/^	u32	bch_dec_status_buf;$/;"	m	struct:nand_ctlr
bchval	nand/arasan_nfc.c	/^	u8 bchval;$/;"	m	struct:arasan_ecc_matrix	file:
beb_rsvd_level	ubi/ubi.h	/^	int beb_rsvd_level;$/;"	m	struct:ubi_device
beb_rsvd_pebs	ubi/ubi.h	/^	int beb_rsvd_pebs;$/;"	m	struct:ubi_device
bfin_nfc_calculate_ecc	nand/bfin_nand.c	/^static int bfin_nfc_calculate_ecc(struct mtd_info *mtd,$/;"	f	file:
bfin_nfc_cmd_ctrl	nand/bfin_nand.c	/^static void bfin_nfc_cmd_ctrl(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
bfin_nfc_correct_data	nand/bfin_nand.c	/^static int bfin_nfc_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
bfin_nfc_correct_data_256	nand/bfin_nand.c	/^static int bfin_nfc_correct_data_256(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
bfin_nfc_devready	nand/bfin_nand.c	/^static int bfin_nfc_devready(struct mtd_info *mtd)$/;"	f	file:
bfin_nfc_enable_hwecc	nand/bfin_nand.c	/^static void bfin_nfc_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
bfin_nfc_read_buf	nand/bfin_nand.c	/^static void bfin_nfc_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
bfin_nfc_read_byte	nand/bfin_nand.c	/^static uint8_t bfin_nfc_read_byte(struct mtd_info *mtd)$/;"	f	file:
bfin_nfc_write_buf	nand/bfin_nand.c	/^static void bfin_nfc_write_buf(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f	file:
bgt_name	ubi/ubi.h	/^	char bgt_name[sizeof(UBI_BGT_NAME_PATTERN)+2];$/;"	m	struct:ubi_device
bgt_thread	ubi/ubi.h	/^	struct task_struct *bgt_thread;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::task_struct
blank_check	nand/tegra_nand.c	/^static int blank_check(u8 *buf, int len)$/;"	f	file:
blksperchip	nand/denali.h	/^	uint32_t blksperchip;$/;"	m	struct:denali_nand_info
block	nand/denali.h	/^	uint32_t block;  \/* stored for future use *\/$/;"	m	struct:denali_nand_info
block_ec	ubi/ubi-media.h	/^	__be32 block_ec[UBI_FM_MAX_BLOCKS];$/;"	m	struct:ubi_fm_sb
block_loc	ubi/ubi-media.h	/^	__be32 block_loc[UBI_FM_MAX_BLOCKS];$/;"	m	struct:ubi_fm_sb
blockinfo	ubispl/ubispl.h	/^	struct ubi_vid_hdr		blockinfo[CONFIG_SPL_UBI_MAX_PEBS];$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::ubi_vid_hdr
board_nand_init	nand/arasan_nfc.c	/^void board_nand_init(void)$/;"	f
board_nand_init	nand/atmel_nand.c	/^int board_nand_init(struct nand_chip *nand)$/;"	f
board_nand_init	nand/atmel_nand.c	/^void board_nand_init(void)$/;"	f
board_nand_init	nand/bfin_nand.c	/^int board_nand_init(struct nand_chip *chip)$/;"	f
board_nand_init	nand/davinci_nand.c	/^int board_nand_init(struct nand_chip *chip)$/;"	f
board_nand_init	nand/denali.c	/^void board_nand_init(void)$/;"	f
board_nand_init	nand/fsl_elbc_nand.c	/^void board_nand_init(void)$/;"	f
board_nand_init	nand/fsl_ifc_nand.c	/^void board_nand_init(void)$/;"	f
board_nand_init	nand/kb9202_nand.c	/^int board_nand_init(struct nand_chip *nand)$/;"	f
board_nand_init	nand/kirkwood_nand.c	/^int board_nand_init(struct nand_chip *nand)$/;"	f
board_nand_init	nand/kmeter1_nand.c	/^int board_nand_init(struct nand_chip *nand)$/;"	f
board_nand_init	nand/lpc32xx_nand_mlc.c	/^void board_nand_init(void)$/;"	f
board_nand_init	nand/lpc32xx_nand_slc.c	/^int board_nand_init(struct nand_chip *lpc32xx_chip)$/;"	f
board_nand_init	nand/mpc5121_nfc.c	/^int board_nand_init(struct nand_chip *chip)$/;"	f
board_nand_init	nand/mxc_nand.c	/^int board_nand_init(struct nand_chip *this)$/;"	f
board_nand_init	nand/mxs_nand.c	/^int board_nand_init(struct nand_chip *nand)$/;"	f
board_nand_init	nand/nand_plat.c	/^int board_nand_init(struct nand_chip *nand)$/;"	f
board_nand_init	nand/ndfc.c	/^int board_nand_init(struct nand_chip *nand)$/;"	f
board_nand_init	nand/omap_gpmc.c	/^int board_nand_init(struct nand_chip *nand)$/;"	f
board_nand_init	nand/pxa3xx_nand.c	/^void board_nand_init(void)$/;"	f
board_nand_init	nand/s3c2410_nand.c	/^int board_nand_init(struct nand_chip *nand)$/;"	f
board_nand_init	nand/tegra_nand.c	/^void board_nand_init(void)$/;"	f
board_nand_init	nand/vf610_nfc.c	/^void board_nand_init(void)$/;"	f
board_nand_init	nand/zynq_nand.c	/^void board_nand_init(void)$/;"	f
board_nand_select_device	nand/mpc5121_nfc.c	/^void board_nand_select_device(struct nand_chip *nand, int chip)$/;"	f
board_nand_select_device	nand/ndfc.c	/^void board_nand_select_device(struct nand_chip *nand, int chip)$/;"	f
bootram_command	onenand/samsung.c	/^	int		bootram_command;$/;"	m	struct:s3c_onenand	file:
bootrom_bbt	nand/bfin_nand.c	/^static struct nand_bbt_descr bootrom_bbt = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bootrom_ecclayout	nand/bfin_nand.c	/^static struct nand_ecclayout bootrom_ecclayout = {$/;"	v	typeref:struct:nand_ecclayout	file:
buf	nand/denali.h	/^	struct nand_buf buf;$/;"	m	struct:denali_nand_info	typeref:struct:denali_nand_info::nand_buf
buf	nand/denali.h	/^	uint8_t buf[DENALI_BUF_SIZE];$/;"	m	struct:nand_buf
buf_addr	nand/mxc_nand.h	/^	u16 buf_addr;$/;"	m	struct:mxc_nand_regs
buf_count	nand/pxa3xx_nand.c	/^	unsigned int		buf_count;$/;"	m	struct:pxa3xx_nand_info	file:
buf_data	nand/arasan_nfc.c	/^static u8 buf_data[READ_BUFF_SIZE];$/;"	v	file:
buf_dataport	nand/arasan_nfc.c	/^	u32 buf_dataport;$/;"	m	struct:nand_regs	file:
buf_dump	ubi/crc32.c	/^buf_dump(char const *prefix, unsigned char const *buf, size_t len)$/;"	f	file:
buf_index	nand/arasan_nfc.c	/^static u32 buf_index;$/;"	v	file:
buf_mutex	ubi/ubi.h	/^	struct mutex buf_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
buf_offset	nand/vf610_nfc.c	/^	uint buf_offset;$/;"	m	struct:vf610_nfc	file:
buf_size	nand/mxc_nand.h	/^	u16 buf_size;$/;"	m	struct:mxc_nand_regs
buf_size	nand/pxa3xx_nand.c	/^	unsigned int		buf_size;$/;"	m	struct:pxa3xx_nand_info	file:
buf_start	nand/pxa3xx_nand.c	/^	unsigned int		buf_start;$/;"	m	struct:pxa3xx_nand_info	file:
buff	nand/lpc32xx_nand_mlc.c	/^	u8 buff[32768]; \/* controller's serial data buffer *\/$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
bufnum_mask	nand/fsl_ifc_nand.c	/^	unsigned int bufnum_mask; \/* bufnum = page & bufnum_mask *\/$/;"	m	struct:fsl_ifc_mtd	file:
build_gf_tables	nand/atmel_nand.c	/^static int build_gf_tables(int mm, unsigned int poly,$/;"	f	file:
builtin_flash_types	nand/pxa3xx_nand.c	/^static struct pxa3xx_nand_flash builtin_flash_types[] = {$/;"	v	typeref:struct:pxa3xx_nand_flash	file:
bus	spi/sandbox.c	/^	int bus;$/;"	m	struct:sandbox_spi_flash_plat_data	file:
bytereverse	ubi/crc32.c	/^static void bytereverse(unsigned char *buf, size_t len)$/;"	f	file:
bytes_str_to_int	ubi/build.c	/^static int __init bytes_str_to_int(const char *str)$/;"	f	file:
c_mtd_name	cfi_mtd.c	/^static char c_mtd_name[16];$/;"	v	file:
cdev	ubi/ubi.h	/^	struct cdev cdev;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::cdev
cdev	ubi/ubi.h	/^	struct cdev cdev;$/;"	m	struct:ubi_volume	typeref:struct:ubi_volume::cdev
ceh	nand/lpc32xx_nand_mlc.c	/^	u32 ceh;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
cfg	nand/atmel_nand_ecc.h	/^	u32 cfg;		\/* 0x00 PMECC Configuration Register *\/$/;"	m	struct:pmecc_regs
cfg	nand/lpc32xx_nand_slc.c	/^	u32 cfg;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
cfi_flash	cfi_flash.c	/^U_BOOT_DRIVER(cfi_flash) = {$/;"	v
cfi_flash_bank_addr	cfi_flash.c	/^__weak phys_addr_t cfi_flash_bank_addr(int i)$/;"	f
cfi_flash_bank_addr	cfi_flash.c	/^phys_addr_t cfi_flash_bank_addr(int i)$/;"	f
cfi_flash_bank_size	cfi_flash.c	/^__weak unsigned long cfi_flash_bank_size(int i)$/;"	f
cfi_flash_base	cfi_flash.c	/^static phys_addr_t cfi_flash_base[CFI_MAX_FLASH_BANKS];$/;"	v	file:
cfi_flash_config_reg	cfi_flash.c	/^static u16 cfi_flash_config_reg(int i)$/;"	f	file:
cfi_flash_ids	cfi_flash.c	/^static const struct udevice_id cfi_flash_ids[] = {$/;"	v	typeref:struct:udevice_id	file:
cfi_flash_init_dm	cfi_flash.c	/^static void cfi_flash_init_dm(void)$/;"	f	file:
cfi_flash_num_flash_banks	cfi_flash.c	/^int cfi_flash_num_flash_banks = CONFIG_SYS_MAX_FLASH_BANKS_DETECT;$/;"	v
cfi_flash_probe	cfi_flash.c	/^static int cfi_flash_probe(struct udevice *dev)$/;"	f	file:
cfi_flash_set_config_reg	cfi_flash.c	/^static void cfi_flash_set_config_reg(u32 base, u16 val)$/;"	f	file:
cfi_mtd_erase	cfi_mtd.c	/^static int cfi_mtd_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
cfi_mtd_info	cfi_mtd.c	/^static struct mtd_info cfi_mtd_info[CFI_MAX_FLASH_BANKS];$/;"	v	typeref:struct:mtd_info	file:
cfi_mtd_init	cfi_mtd.c	/^int cfi_mtd_init(void)$/;"	f
cfi_mtd_lock	cfi_mtd.c	/^static int cfi_mtd_lock(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f	file:
cfi_mtd_names	cfi_mtd.c	/^static char cfi_mtd_names[CFI_MAX_FLASH_BANKS][16];$/;"	v	file:
cfi_mtd_read	cfi_mtd.c	/^static int cfi_mtd_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
cfi_mtd_set_erasesize	cfi_mtd.c	/^static int cfi_mtd_set_erasesize(struct mtd_info *mtd, flash_info_t *fi)$/;"	f	file:
cfi_mtd_sync	cfi_mtd.c	/^static void cfi_mtd_sync(struct mtd_info *mtd)$/;"	f	file:
cfi_mtd_unlock	cfi_mtd.c	/^static int cfi_mtd_unlock(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f	file:
cfi_mtd_write	cfi_mtd.c	/^static int cfi_mtd_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
cfi_protect_bugfix	cfi_flash.c	/^static int cfi_protect_bugfix(flash_info_t *info, long sector, int prot)$/;"	f	file:
cfi_reverse_geometry	cfi_flash.c	/^static void cfi_reverse_geometry(struct cfi_qry *qry)$/;"	f	file:
cfr	nand/zynq_nand.c	/^	u32 cfr;		\/* 0x0C *\/$/;"	m	struct:zynq_nand_smc_regs	file:
ch_lnum	ubi/ubi.h	/^	int ch_lnum;$/;"	m	struct:ubi_volume
changing_leb	ubi/ubi.h	/^	unsigned int changing_leb:1;$/;"	m	struct:ubi_volume
check_attaching_info	ubi/vtbl.c	/^static int check_attaching_info(const struct ubi_device *ubi,$/;"	f	file:
check_av	ubi/vtbl.c	/^static int check_av(const struct ubi_volume *vol,$/;"	f	file:
check_corruption	ubi/attach.c	/^static int check_corruption(struct ubi_device *ubi, struct ubi_vid_hdr *vid_hdr,$/;"	f	file:
check_create	nand/nand_bbt.c	/^static int check_create(struct mtd_info *mtd, uint8_t *buf, struct nand_bbt_descr *bd)$/;"	f	file:
check_ecc_error	nand/tegra_nand.c	/^static int check_ecc_error(struct nand_ctlr *reg, u8 *databuf,$/;"	f	file:
check_offs_len	nand/nand_base.c	/^static int check_offs_len(struct mtd_info *mtd,$/;"	f	file:
check_pattern	nand/nand_bbt.c	/^static int check_pattern(uint8_t *buf, int len, int paglen, struct nand_bbt_descr *td)$/;"	f	file:
check_pattern	nand/nand_util.c	/^static int check_pattern(const u_char *buf, u_char patt, int size)$/;"	f	file:
check_pattern_no_oob	nand/nand_bbt.c	/^static int check_pattern_no_oob(uint8_t *buf, struct nand_bbt_descr *td)$/;"	f	file:
check_read_ecc	nand/fsl_ifc_nand.c	/^static int check_read_ecc(struct mtd_info *mtd, struct fsl_ifc_ctrl *ctrl,$/;"	f	file:
check_read_ecc	nand/fsl_ifc_spl.c	/^static inline int check_read_ecc(uchar *buf, u32 *eccstat,$/;"	f	file:
check_short_pattern	nand/nand_bbt.c	/^static int check_short_pattern(uint8_t *buf, struct nand_bbt_descr *td)$/;"	f	file:
check_short_pattern	onenand/onenand_bbt.c	/^static int check_short_pattern(uint8_t * buf, int len, int paglen,$/;"	f	file:
check_skip_len	nand/nand_util.c	/^static int check_skip_len(struct mtd_info *mtd, loff_t offset, size_t length,$/;"	f	file:
check_value	nand/sunxi_nand_spl.c	/^static inline int check_value(int offset, int expected_bits,$/;"	f	file:
check_value_inner	nand/sunxi_nand_spl.c	/^static int check_value_inner(int offset, int expected_bits,$/;"	f	file:
check_value_negated	nand/sunxi_nand_spl.c	/^static inline int check_value_negated(int offset, int unexpected_bits,$/;"	f	file:
checked	ubi/ubi.h	/^	unsigned int checked:1;$/;"	m	struct:ubi_volume
chip	nand/fsl_elbc_nand.c	/^	struct nand_chip chip;$/;"	m	struct:fsl_elbc_mtd	typeref:struct:fsl_elbc_mtd::nand_chip	file:
chip	nand/fsl_ifc_nand.c	/^	struct nand_chip chip;$/;"	m	struct:fsl_ifc_mtd	typeref:struct:fsl_ifc_mtd::nand_chip	file:
chip	nand/mpc5121_nfc.c	/^	struct nand_chip chip;$/;"	m	struct:mpc5121_nfc_prv	typeref:struct:mpc5121_nfc_prv::nand_chip	file:
chip	nand/pxa3xx_nand.c	/^	struct nand_chip	chip;$/;"	m	struct:pxa3xx_nand_host	typeref:struct:pxa3xx_nand_host::nand_chip	file:
chip	nand/vf610_nfc.c	/^	struct nand_chip chip;$/;"	m	struct:vf610_nfc	typeref:struct:vf610_nfc::nand_chip	file:
chip_id	nand/pxa3xx_nand.h	/^	uint32_t	chip_id;$/;"	m	struct:pxa3xx_nand_flash
chip_select	altera_qspi.c	/^	u32	chip_select;$/;"	m	struct:altera_qspi_regs	file:
chips	nand/fsl_elbc_nand.c	/^	struct fsl_elbc_mtd *chips[MAX_BANKS];$/;"	m	struct:fsl_elbc_ctrl	typeref:struct:fsl_elbc_ctrl::fsl_elbc_mtd	file:
chips	nand/fsl_ifc_nand.c	/^	struct fsl_ifc_mtd *chips[MAX_BANKS];$/;"	m	struct:fsl_ifc_ctrl	typeref:struct:fsl_ifc_ctrl::fsl_ifc_mtd	file:
chips	nand/sunxi_nand.c	/^	struct list_head chips;$/;"	m	struct:sunxi_nfc	typeref:struct:sunxi_nfc::list_head	file:
chipsel	nand/mpc5121_nfc.c	/^	int chipsel;$/;"	m	struct:mpc5121_nfc_prv	file:
chk_fastmap	ubi/ubi.h	/^	unsigned int chk_fastmap:1;$/;"	m	struct:ubi_debug_info
chk_gen	ubi/ubi.h	/^	unsigned int chk_gen:1;$/;"	m	struct:ubi_debug_info
chk_io	ubi/ubi.h	/^	unsigned int chk_io:1;$/;"	m	struct:ubi_debug_info
chunk_data_size	nand/mxs_nand.c	/^static int chunk_data_size = MXS_NAND_CHUNK_DATA_CHUNK_SIZE;$/;"	v	file:
chunk_size	nand/pxa3xx_nand.c	/^	unsigned int		chunk_size;	\/* split commands chunk size *\/$/;"	m	struct:pxa3xx_nand_info	file:
ckvol_mutex	ubi/ubi.h	/^	struct mutex ckvol_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
cleanup_mtd	mtdcore.c	/^module_exit(cleanup_mtd);$/;"	v
cleanup_mtd	mtdcore.c	/^static void __exit cleanup_mtd(void)$/;"	f	file:
clear_interrupt	nand/denali.c	/^static inline void clear_interrupt(struct denali_nand_info *denali,$/;"	f	file:
clear_interrupts	nand/denali.c	/^static void clear_interrupts(struct denali_nand_info *denali)$/;"	f	file:
clear_update_marker	ubi/upd.c	/^static int clear_update_marker(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f	file:
clk	nand/atmel_nand_ecc.h	/^	u32 clk;		\/* 0x10 PMECC Clock Control Register *\/$/;"	m	struct:pmecc_regs
clk	nand/mpc5121_nfc.c	/^	struct clk *clk;$/;"	m	struct:mpc5121_nfc_prv	typeref:struct:mpc5121_nfc_prv::clk	file:
clk	nand/pxa3xx_nand.c	/^	struct clk		*clk;$/;"	m	struct:pxa3xx_nand_info	typeref:struct:pxa3xx_nand_info::clk	file:
clk_act	nand/mxc_nand.c	/^	int				clk_act;$/;"	m	struct:mxc_nand_host	file:
clk_rate	nand/sunxi_nand.c	/^	unsigned long clk_rate;$/;"	m	struct:sunxi_nand_chip	file:
clk_rate	nand/sunxi_nand.c	/^	unsigned long clk_rate;$/;"	m	struct:sunxi_nfc	file:
clkdiv	nand/lpc32xx_nand_mlc.c	86;"	d	file:
cmd	nand/lpc32xx_nand_mlc.c	/^	u32 cmd;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
cmd	nand/lpc32xx_nand_slc.c	/^	u32 cmd;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
cmd	nand/sunxi_nand.c	/^	u8 cmd[2];$/;"	m	struct:sunxi_nand_chip	file:
cmd	spi/sandbox.c	/^	uint cmd;$/;"	m	struct:sandbox_spi_flash	file:
cmd1	nand/arasan_nfc.c	/^	u8 cmd1;$/;"	m	struct:arasan_nand_command_format	file:
cmd2	nand/arasan_nfc.c	/^	u8 cmd2;$/;"	m	struct:arasan_nand_command_format	file:
cmd_buf	nand/mxs_nand.c	/^	uint8_t		*cmd_buf;$/;"	m	struct:mxs_nand_info	file:
cmd_complete	nand/pxa3xx_nand.c	/^	int			cmd_complete, dev_ready;$/;"	m	struct:pxa3xx_nand_info	file:
cmd_cycles	nand/sunxi_nand.c	/^	int cmd_cycles;$/;"	m	struct:sunxi_nand_chip	file:
cmd_queue_len	nand/mxs_nand.c	/^	uint32_t	cmd_queue_len;$/;"	m	struct:mxs_nand_info	file:
cmd_reg	nand/arasan_nfc.c	/^	u32 cmd_reg;$/;"	m	struct:nand_regs	file:
cmd_reg1	nand/tegra_nand.h	/^	u32	cmd_reg1;	\/* offset 20h *\/$/;"	m	struct:nand_ctlr
cmd_reg2	nand/tegra_nand.h	/^	u32	cmd_reg2;	\/* offset 24h *\/$/;"	m	struct:nand_ctlr
cmdset_amd_init	cfi_flash.c	/^static int cmdset_amd_init(flash_info_t *info, struct cfi_qry *qry)$/;"	f	file:
cmdset_amd_read_jedec_ids	cfi_flash.c	/^static void cmdset_amd_read_jedec_ids(flash_info_t *info)$/;"	f	file:
cmdset_intel_init	cfi_flash.c	/^static int cmdset_intel_init(flash_info_t *info, struct cfi_qry *qry)$/;"	f	file:
cmdset_intel_read_jedec_ids	cfi_flash.c	/^static void cmdset_intel_read_jedec_ids(flash_info_t *info)$/;"	f	file:
cms_sysadr_reg	nand/arasan_nfc.c	/^	u32 cms_sysadr_reg;$/;"	m	struct:nand_regs	file:
col_addr	nand/mxc_nand.c	/^	uint16_t			col_addr;$/;"	m	struct:mxc_nand_host	file:
col_addr_cycles	nand/pxa3xx_nand.c	/^	unsigned int		col_addr_cycles;$/;"	m	struct:pxa3xx_nand_host	file:
column	nand/fsl_elbc_nand.c	/^	unsigned int column;     \/* Saved column from SEQIN               *\/$/;"	m	struct:fsl_elbc_ctrl	file:
column	nand/fsl_ifc_nand.c	/^	unsigned int column;     \/* Saved column from SEQIN               *\/$/;"	m	struct:fsl_ifc_ctrl	file:
column	nand/mpc5121_nfc.c	/^	uint column;$/;"	m	struct:mpc5121_nfc_prv	file:
command	nand/tegra_nand.h	/^	u32	command;	\/* offset 00h *\/$/;"	m	struct:nand_ctlr
command	spi/sf_dataflash.c	/^	uint8_t			command[16];$/;"	m	struct:dataflash	file:
compat	ubi/ubi-media.h	/^	__u8    compat;$/;"	m	struct:ubi_vid_hdr
compat	ubi/ubi.h	/^	int compat;$/;"	m	struct:ubi_ainf_volume
concat_block_isbad	mtdconcat.c	/^static int concat_block_isbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
concat_block_markbad	mtdconcat.c	/^static int concat_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
concat_dev_erase	mtdconcat.c	/^static int concat_dev_erase(struct mtd_info *mtd, struct erase_info *erase)$/;"	f	file:
concat_erase	mtdconcat.c	/^static int concat_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
concat_erase_callback	mtdconcat.c	/^static void concat_erase_callback(struct erase_info *instr)$/;"	f	file:
concat_get_unmapped_area	mtdconcat.c	/^static unsigned long concat_get_unmapped_area(struct mtd_info *mtd,$/;"	f	file:
concat_lock	mtdconcat.c	/^static int concat_lock(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f	file:
concat_read	mtdconcat.c	/^concat_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
concat_read_oob	mtdconcat.c	/^concat_read_oob(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops)$/;"	f	file:
concat_resume	mtdconcat.c	/^static void concat_resume(struct mtd_info *mtd)$/;"	f	file:
concat_suspend	mtdconcat.c	/^static int concat_suspend(struct mtd_info *mtd)$/;"	f	file:
concat_sync	mtdconcat.c	/^static void concat_sync(struct mtd_info *mtd)$/;"	f	file:
concat_unlock	mtdconcat.c	/^static int concat_unlock(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f	file:
concat_write	mtdconcat.c	/^concat_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
concat_write_oob	mtdconcat.c	/^concat_write_oob(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops)$/;"	f	file:
concat_writev	mtdconcat.c	/^concat_writev(struct mtd_info *mtd, const struct kvec *vecs,$/;"	f	file:
config	ftsmc020.c	/^	unsigned int	config;$/;"	m	struct:ftsmc020_config	file:
config	nand/mxc_nand.h	/^	u16 config;$/;"	m	struct:mxc_nand_regs
config	nand/tegra_nand.c	/^	struct fdt_nand config;$/;"	m	struct:nand_drv	typeref:struct:nand_drv::fdt_nand	file:
config	nand/tegra_nand.h	/^	u32	config;		\/* offset 10h *\/$/;"	m	struct:nand_ctlr
config1	nand/mxc_nand.h	/^	u16 config1;$/;"	m	struct:mxc_nand_regs
config1	nand/mxc_nand.h	/^	u32 config1;$/;"	m	struct:mxc_nand_regs
config2	nand/mxc_nand.h	/^	u16 config2;$/;"	m	struct:mxc_nand_regs
config2	nand/mxc_nand.h	/^	u32 config2;$/;"	m	struct:mxc_nand_ip_regs
config3	nand/mxc_nand.h	/^	u32 config3;$/;"	m	struct:mxc_nand_ip_regs
control	nand/omap_gpmc.c	/^	struct bch_control *control;$/;"	m	struct:omap_nand_info	typeref:struct:omap_nand_info::bch_control	file:
controller	nand/fsl_elbc_nand.c	/^	struct nand_hw_control controller;$/;"	m	struct:fsl_elbc_ctrl	typeref:struct:fsl_elbc_ctrl::nand_hw_control	file:
controller	nand/fsl_ifc_nand.c	/^	struct nand_hw_control controller;$/;"	m	struct:fsl_ifc_ctrl	typeref:struct:fsl_ifc_ctrl::nand_hw_control	file:
controller	nand/pxa3xx_nand.c	/^	struct nand_hw_control	controller;$/;"	m	struct:pxa3xx_nand_info	typeref:struct:pxa3xx_nand_info::nand_hw_control	file:
controller	nand/sunxi_nand.c	/^	struct nand_hw_control controller;$/;"	m	struct:sunxi_nfc	typeref:struct:sunxi_nfc::nand_hw_control	file:
copy_flag	ubi/ubi-media.h	/^	__u8    copy_flag;$/;"	m	struct:ubi_vid_hdr
copy_flag	ubi/ubi.h	/^	unsigned int copy_flag:1;$/;"	m	struct:ubi_ainf_peb
corr	ubi/ubi.h	/^	struct list_head corr;$/;"	m	struct:ubi_attach_info	typeref:struct:ubi_attach_info::list_head
corr_peb_count	ubi/ubi.h	/^	int corr_peb_count;$/;"	m	struct:ubi_attach_info
corr_peb_count	ubi/ubi.h	/^	int corr_peb_count;$/;"	m	struct:ubi_device
corrupt	ubispl/ubispl.h	/^	unsigned long			corrupt[UBI_FM_BM_SIZE];$/;"	m	struct:ubi_scan_info
corrupted	ubi/ubi.h	/^	unsigned int corrupted:1;$/;"	m	struct:ubi_volume
count_fastmap_pebs	ubi/fastmap.c	/^static int count_fastmap_pebs(struct ubi_attach_info *ai)$/;"	f	file:
count_written_bits	nand/fsmc_nand.c	/^static int count_written_bits(uint8_t *buff, int size, int max_bits)$/;"	f	file:
count_written_bits	nand/vf610_nfc.c	/^static inline int count_written_bits(uint8_t *buff, int size, int max_bits)$/;"	f	file:
countbits	nand/nand_ecc.c	/^static inline int countbits(uint32_t byte)$/;"	f	file:
cpu_rls_reg	nand/arasan_nfc.c	/^	u32 cpu_rls_reg;$/;"	m	struct:nand_regs	file:
cpu_to_je16	nand/nand_util.c	38;"	d	file:
cpu_to_je32	nand/nand_util.c	39;"	d	file:
cr	stm32_flash.h	/^	u32 cr;$/;"	m	struct:stm32_flash_regs
crc	ubi/ubi-media.h	/^	__be32  crc;$/;"	m	struct:ubi_vtbl_record
crc32_be	ubi/crc32.c	/^EXPORT_SYMBOL(crc32_be);$/;"	v
crc32_be	ubi/crc32.c	/^u32 __attribute_pure__ crc32_be(u32 crc, unsigned char const *p, size_t len)$/;"	f
crc32_le	ubi/crc32.c	/^EXPORT_SYMBOL(crc32_le);$/;"	v
crc32_le	ubi/crc32.c	/^u32 crc32_le(u32 crc, unsigned char const *p, size_t len)$/;"	f
crc32table_be	ubi/crc32table.h	/^static const u32 crc32table_be[] = {$/;"	v
crc32table_le	ubi/crc32table.h	/^static const u32 crc32table_le[] = {$/;"	v
create_bbt	nand/nand_bbt.c	/^static int create_bbt(struct mtd_info *mtd, uint8_t *buf,$/;"	f	file:
create_bbt	onenand/onenand_bbt.c	/^static int create_bbt(struct mtd_info *mtd, uint8_t * buf,$/;"	f	file:
create_empty_lvol	ubi/vtbl.c	/^static struct ubi_vtbl_record *create_empty_lvol(struct ubi_device *ubi,$/;"	f	file:
create_lookup_table	nand/atmel_nand.c	/^static uint16_t *create_lookup_table(int sector_size)$/;"	f	file:
create_mtd_concat	nand/nand.c	/^static void create_mtd_concat(void)$/;"	f	file:
create_vtbl	ubi/vtbl.c	/^static int create_vtbl(struct ubi_device *ubi, struct ubi_attach_info *ai,$/;"	f	file:
cs	nand/omap_gpmc.c	/^	uint8_t cs;$/;"	m	struct:omap_nand_info	file:
cs	nand/pxa3xx_nand.c	/^	int			cs;$/;"	m	struct:pxa3xx_nand_host	file:
cs	nand/pxa3xx_nand.c	/^	int			cs;$/;"	m	struct:pxa3xx_nand_info	file:
cs	nand/sunxi_nand.c	/^	u8 cs;$/;"	m	struct:sunxi_nand_chip_sel	file:
cs	spi/sandbox.c	/^	int cs;$/;"	m	struct:sandbox_spi_flash_plat_data	file:
cs	spi/sandbox.c	/^	unsigned int cs;	\/* Chip select we are attached to *\/$/;"	m	struct:sandbox_spi_flash	file:
cs_nand	nand/fsl_ifc_nand.c	/^	unsigned int cs_nand;    \/* On which chipsel NAND is connected	  *\/$/;"	m	struct:fsl_ifc_ctrl	file:
cs_next	nand/omap_gpmc.c	/^static uint8_t cs_next;$/;"	v	file:
csr	nand/zynq_nand.c	/^	u32 csr;		\/* 0x00 *\/$/;"	m	struct:zynq_nand_smc_regs	file:
ctrl	nand/atmel_nand_ecc.h	/^	u32 ctrl;		\/* 0x14 PMECC Control Register *\/$/;"	m	struct:pmecc_regs
ctrl	nand/fsl_elbc_nand.c	/^	struct fsl_elbc_ctrl *ctrl;$/;"	m	struct:fsl_elbc_mtd	typeref:struct:fsl_elbc_mtd::fsl_elbc_ctrl	file:
ctrl	nand/fsl_ifc_nand.c	/^	struct fsl_ifc_ctrl *ctrl;$/;"	m	struct:fsl_ifc_mtd	typeref:struct:fsl_ifc_mtd::fsl_ifc_ctrl	file:
ctrl	nand/kirkwood_nand.c	/^	u32 ctrl;	\/* 0x10470 *\/$/;"	m	struct:kwnandf_registers	file:
ctrl	nand/lpc32xx_nand_slc.c	/^	u32 ctrl;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
ctrl	pic32_flash.c	/^	struct pic32_reg_atomic ctrl;$/;"	m	struct:pic32_reg_nvm	typeref:struct:pic32_reg_nvm::pic32_reg_atomic	file:
cur_chip	nand/mxs_nand.c	/^	int		cur_chip;$/;"	m	struct:mxs_nand_info	file:
curr_cmd	nand/arasan_nfc.c	/^static struct arasan_nand_command_format *curr_cmd;$/;"	v	typeref:struct:arasan_nand_command_format	file:
data	nand/lpc32xx_nand_mlc.c	/^	u8 data[32768]; \/* NAND's raw data buffer *\/$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
data	nand/lpc32xx_nand_slc.c	/^	u32 data;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
data	pic32_flash.c	/^	struct pic32_reg_atomic data;$/;"	m	struct:pic32_reg_nvm	typeref:struct:pic32_reg_nvm::pic32_reg_atomic	file:
data	spi/sandbox.c	/^	const struct spi_flash_info *data;$/;"	m	struct:sandbox_spi_flash	typeref:struct:sandbox_spi_flash::spi_flash_info	file:
data_block_ptr	nand/tegra_nand.h	/^	u32	data_block_ptr;	\/* offset 40h *\/$/;"	m	struct:nand_ctlr
data_buf	nand/mxs_nand.c	/^	uint8_t		*data_buf;$/;"	m	struct:mxs_nand_info	file:
data_buf_size	nand/mxs_nand.c	/^	uint32_t	data_buf_size;$/;"	m	struct:mxs_nand_info	file:
data_buff	nand/pxa3xx_nand.c	/^	unsigned char		*data_buff;$/;"	m	struct:pxa3xx_nand_info	file:
data_buff_pos	nand/pxa3xx_nand.c	/^	unsigned int		data_buff_pos;$/;"	m	struct:pxa3xx_nand_info	file:
data_crc	ubi/ubi-media.h	/^	__be32  data_crc;$/;"	m	struct:ubi_vid_hdr
data_crc	ubi/ubi-media.h	/^	__be32 data_crc;$/;"	m	struct:ubi_fm_sb
data_if_reg	nand/arasan_nfc.c	/^	u32 data_if_reg;$/;"	m	struct:nand_regs	file:
data_offset	ubi/ubi-media.h	/^	__be32  data_offset;$/;"	m	struct:ubi_ec_hdr
data_pad	ubi/ubi-media.h	/^	__be32  data_pad;$/;"	m	struct:ubi_vid_hdr
data_pad	ubi/ubi-media.h	/^	__be32  data_pad;$/;"	m	struct:ubi_vtbl_record
data_pad	ubi/ubi-media.h	/^	__be32 data_pad;$/;"	m	struct:ubi_fm_volhdr
data_pad	ubi/ubi.h	/^	int data_pad;$/;"	m	struct:ubi_ainf_volume
data_pad	ubi/ubi.h	/^	int data_pad;$/;"	m	struct:ubi_volume
data_size	nand/pxa3xx_nand.c	/^	unsigned int		data_size;	\/* data to be read from FIFO *\/$/;"	m	struct:pxa3xx_nand_info	file:
data_size	ubi/ubi-media.h	/^	__be32  data_size;$/;"	m	struct:ubi_vid_hdr
dataflash	spi/sf_dataflash.c	/^struct dataflash {$/;"	s	file:
dataflash_data	spi/sf_dataflash.c	/^static struct flash_info dataflash_data[] = {$/;"	v	typeref:struct:flash_info	file:
dataflash_perror	dataflash.c	/^void dataflash_perror (int err)$/;"	f
dataflash_print_info	dataflash.c	/^void dataflash_print_info (void)$/;"	f
dataflash_real_protect	dataflash.c	/^int dataflash_real_protect (int flag, unsigned long start_addr,$/;"	f
dataflash_status	spi/sf_dataflash.c	/^static inline int dataflash_status(struct spi_slave *spi)$/;"	f	file:
dataflash_waitready	spi/sf_dataflash.c	/^static int dataflash_waitready(struct spi_slave *spi)$/;"	f	file:
davinci_nand_init	nand/davinci_nand.c	/^void davinci_nand_init(struct nand_chip *nand)$/;"	f
dbg	nand/fsl_elbc_nand.c	33;"	d	file:
dbg	nand/fsl_elbc_nand.c	35;"	d	file:
dbg	ubi/ubi.h	/^	struct ubi_debug_info dbg;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_debug_info
dbg_bld	ubi/debug.h	44;"	d
dbg_eba	ubi/debug.h	38;"	d
dbg_gen	ubi/debug.h	36;"	d
dbg_io	ubi/debug.h	42;"	d
dbg_wl	ubi/debug.h	40;"	d
dcr	nand/zynq_nand.c	/^	u32 dcr;		\/* 0x10 *\/$/;"	m	struct:zynq_nand_smc_regs	file:
dec_status	nand/tegra_nand.h	/^	u32	dec_status;	\/* offset 4Ch *\/$/;"	m	struct:nand_ctlr
default_mtd_part_types	mtdpart.c	/^static const char * const default_mtd_part_types[] = {$/;"	v	file:
default_mtd_writev	mtdcore.c	/^static int default_mtd_writev(struct mtd_info *mtd, const struct kvec *vecs,$/;"	f	file:
deg	nand/atmel_nand.c	/^static inline int deg(unsigned int poly)$/;"	f	file:
del_mtd_device	mtdcore.c	/^int del_mtd_device(struct mtd_info *mtd)$/;"	f
del_mtd_partitions	mtdpart.c	/^int del_mtd_partitions(struct mtd_info *master)$/;"	f
delay_line	nand/mxc_nand.h	/^	u32 delay_line;$/;"	m	struct:mxc_nand_ip_regs
denali_cmdfunc	nand/denali.c	/^static void denali_cmdfunc(struct mtd_info *mtd, unsigned int cmd, int col,$/;"	f	file:
denali_dma_configuration	nand/denali.c	/^static uint32_t denali_dma_configuration(struct denali_nand_info *denali,$/;"	f	file:
denali_enable_dma	nand/denali.c	/^static void denali_enable_dma(struct denali_nand_info *denali, bool en)$/;"	f	file:
denali_erase	nand/denali.c	/^static int denali_erase(struct mtd_info *mtd, int page)$/;"	f	file:
denali_flash_mem	nand/denali_spl.c	/^static void __iomem *denali_flash_mem =$/;"	v	file:
denali_flash_reg	nand/denali_spl.c	/^static void __iomem *denali_flash_reg =$/;"	v	file:
denali_hw_init	nand/denali.c	/^static void denali_hw_init(struct denali_nand_info *denali)$/;"	f	file:
denali_init	nand/denali.c	/^static int denali_init(struct denali_nand_info *denali)$/;"	f	file:
denali_irq_enable	nand/denali.c	/^static void denali_irq_enable(struct denali_nand_info *denali,$/;"	f	file:
denali_irq_init	nand/denali.c	/^static void denali_irq_init(struct denali_nand_info *denali)$/;"	f	file:
denali_mode_main_access	nand/denali.c	/^static void denali_mode_main_access(struct denali_nand_info *denali)$/;"	f	file:
denali_mode_main_spare_access	nand/denali.c	/^static void denali_mode_main_spare_access(struct denali_nand_info *denali)$/;"	f	file:
denali_nand_info	nand/denali.h	/^struct denali_nand_info {$/;"	s
denali_nand_reset	nand/denali.c	/^static uint32_t denali_nand_reset(struct denali_nand_info *denali)$/;"	f	file:
denali_nand_timing_set	nand/denali.c	/^static uint32_t denali_nand_timing_set(struct denali_nand_info *denali)$/;"	f	file:
denali_read_buf	nand/denali.c	/^static void denali_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
denali_read_byte	nand/denali.c	/^static uint8_t denali_read_byte(struct mtd_info *mtd)$/;"	f	file:
denali_read_oob	nand/denali.c	/^static int denali_read_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
denali_read_page	nand/denali.c	/^static int denali_read_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
denali_read_page_raw	nand/denali.c	/^static int denali_read_page_raw(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
denali_select_chip	nand/denali.c	/^static void denali_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
denali_send_pipeline_cmd	nand/denali.c	/^static int denali_send_pipeline_cmd(struct denali_nand_info *denali,$/;"	f	file:
denali_send_pipeline_cmd	nand/denali_spl.c	/^int denali_send_pipeline_cmd(int page, int ecc_en, int access_type)$/;"	f
denali_setup_dma	nand/denali.c	/^static void denali_setup_dma(struct denali_nand_info *denali, int op)$/;"	f	file:
denali_waitfunc	nand/denali.c	/^static int denali_waitfunc(struct mtd_info *mtd, struct nand_chip *chip)$/;"	f	file:
denali_write_oob	nand/denali.c	/^static int denali_write_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
denali_write_page	nand/denali.c	/^static int denali_write_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
denali_write_page_raw	nand/denali.c	/^static int denali_write_page_raw(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
deregister_mtd_parser	mtdpart.c	/^EXPORT_SYMBOL_GPL(deregister_mtd_parser);$/;"	v
deregister_mtd_parser	mtdpart.c	/^void deregister_mtd_parser(struct mtd_part_parser *p)$/;"	f
desc	nand/mxs_nand.c	/^	struct mxs_dma_desc	**desc;$/;"	m	struct:mxs_nand_info	typeref:struct:mxs_nand_info::mxs_dma_desc	file:
desc	ubi/ubi.h	/^	struct ubi_volume_desc *desc;$/;"	m	struct:ubi_rename_entry	typeref:struct:ubi_rename_entry::ubi_volume_desc
desc_index	nand/mxs_nand.c	/^	uint32_t		desc_index;$/;"	m	struct:mxs_nand_info	file:
destroy_ai	ubi/attach.c	/^static void destroy_ai(struct ubi_attach_info *ai)$/;"	f	file:
destroy_av	ubi/attach.c	/^static void destroy_av(struct ubi_attach_info *ai, struct ubi_ainf_volume *av)$/;"	f	file:
detect_max_banks	nand/denali.c	/^static void detect_max_banks(struct denali_nand_info *denali)$/;"	f	file:
detect_partition_feature	nand/denali.c	/^static void detect_partition_feature(struct denali_nand_info *denali)$/;"	f	file:
dev	nand/denali.h	/^	struct device *dev;$/;"	m	struct:denali_nand_info	typeref:struct:denali_nand_info::device
dev	nand/fsl_elbc_nand.c	/^	struct device *dev;$/;"	m	struct:fsl_elbc_mtd	typeref:struct:fsl_elbc_mtd::device	file:
dev	nand/fsl_ifc_nand.c	/^	struct device *dev;$/;"	m	struct:fsl_ifc_mtd	typeref:struct:fsl_ifc_mtd::device	file:
dev	nand/sunxi_nand.c	/^	struct device *dev;$/;"	m	struct:sunxi_nfc	typeref:struct:sunxi_nfc::device	file:
dev	ubi/ubi.h	/^	struct device dev;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::device
dev	ubi/ubi.h	/^	struct device dev;$/;"	m	struct:ubi_volume	typeref:struct:ubi_volume::device
dev_attribute_show	ubi/build.c	/^static ssize_t dev_attribute_show(struct device *dev,$/;"	f	file:
dev_avail_eraseblocks	ubi/build.c	/^static struct device_attribute dev_avail_eraseblocks =$/;"	v	typeref:struct:device_attribute	file:
dev_bad_peb_count	ubi/build.c	/^static struct device_attribute dev_bad_peb_count =$/;"	v	typeref:struct:device_attribute	file:
dev_bgt_enabled	ubi/build.c	/^static struct device_attribute dev_bgt_enabled =$/;"	v	typeref:struct:device_attribute	file:
dev_eraseblock_size	ubi/build.c	/^static struct device_attribute dev_eraseblock_size =$/;"	v	typeref:struct:device_attribute	file:
dev_id	jedec_flash.c	/^	const __u16 dev_id;$/;"	m	struct:amd_flash_info	file:
dev_max_ec	ubi/build.c	/^static struct device_attribute dev_max_ec =$/;"	v	typeref:struct:device_attribute	file:
dev_max_vol_count	ubi/build.c	/^static struct device_attribute dev_max_vol_count =$/;"	v	typeref:struct:device_attribute	file:
dev_min_io_size	ubi/build.c	/^static struct device_attribute dev_min_io_size =$/;"	v	typeref:struct:device_attribute	file:
dev_mtd_num	ubi/build.c	/^static struct device_attribute dev_mtd_num =$/;"	v	typeref:struct:device_attribute	file:
dev_name	nand/nand.c	/^static char dev_name[CONFIG_SYS_MAX_NAND_DEVICE][8];$/;"	v	file:
dev_name	onenand/onenand_uboot.c	/^static __attribute__((unused)) char dev_name[] = "onenand0";$/;"	v	file:
dev_ready	nand/pxa3xx_nand.c	/^	int			cmd_complete, dev_ready;$/;"	m	struct:pxa3xx_nand_info	file:
dev_release	ubi/build.c	/^static void dev_release(struct device *dev)$/;"	f	file:
dev_reserved_for_bad	ubi/build.c	/^static struct device_attribute dev_reserved_for_bad =$/;"	v	typeref:struct:device_attribute	file:
dev_total_eraseblocks	ubi/build.c	/^static struct device_attribute dev_total_eraseblocks =$/;"	v	typeref:struct:device_attribute	file:
dev_volumes_count	ubi/build.c	/^static struct device_attribute dev_volumes_count =$/;"	v	typeref:struct:device_attribute	file:
device_id	st_smi.c	/^	u32 device_id;$/;"	m	struct:flash_device	file:
device_mutex	ubi/ubi.h	/^	struct mutex device_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
device_name	spi/sandbox.c	/^	const char *device_name;$/;"	m	struct:sandbox_spi_flash_plat_data	file:
devnum	nand/denali.h	/^	uint32_t devnum;	\/* represent how many nands connected *\/$/;"	m	struct:denali_nand_info
dfc_width	nand/pxa3xx_nand.h	/^	unsigned int	dfc_width;      \/* Width of flash controller(DWIDTH_C) *\/$/;"	m	struct:pxa3xx_nand_flash
dfs_chk_fastmap	ubi/ubi.h	/^	struct dentry *dfs_chk_fastmap;$/;"	m	struct:ubi_debug_info	typeref:struct:ubi_debug_info::dentry
dfs_chk_gen	ubi/ubi.h	/^	struct dentry *dfs_chk_gen;$/;"	m	struct:ubi_debug_info	typeref:struct:ubi_debug_info::dentry
dfs_chk_io	ubi/ubi.h	/^	struct dentry *dfs_chk_io;$/;"	m	struct:ubi_debug_info	typeref:struct:ubi_debug_info::dentry
dfs_dir	ubi/ubi.h	/^	struct dentry *dfs_dir;$/;"	m	struct:ubi_debug_info	typeref:struct:ubi_debug_info::dentry
dfs_dir_name	ubi/ubi.h	/^	char dfs_dir_name[UBI_DFS_DIR_LEN + 1];$/;"	m	struct:ubi_debug_info
dfs_disable_bgt	ubi/ubi.h	/^	struct dentry *dfs_disable_bgt;$/;"	m	struct:ubi_debug_info	typeref:struct:ubi_debug_info::dentry
dfs_emulate_bitflips	ubi/ubi.h	/^	struct dentry *dfs_emulate_bitflips;$/;"	m	struct:ubi_debug_info	typeref:struct:ubi_debug_info::dentry
dfs_emulate_io_failures	ubi/ubi.h	/^	struct dentry *dfs_emulate_io_failures;$/;"	m	struct:ubi_debug_info	typeref:struct:ubi_debug_info::dentry
dfs_emulate_power_cut	ubi/ubi.h	/^	struct dentry *dfs_emulate_power_cut;$/;"	m	struct:ubi_debug_info	typeref:struct:ubi_debug_info::dentry
dfs_file_read	ubi/debug.c	/^static ssize_t dfs_file_read(struct file *file, char __user *user_buf,$/;"	f	file:
dfs_file_write	ubi/debug.c	/^static ssize_t dfs_file_write(struct file *file, const char __user *user_buf,$/;"	f	file:
dfs_fops	ubi/debug.c	/^static const struct file_operations dfs_fops = {$/;"	v	typeref:struct:file_operations	file:
dfs_power_cut_max	ubi/ubi.h	/^	struct dentry *dfs_power_cut_max;$/;"	m	struct:ubi_debug_info	typeref:struct:ubi_debug_info::dentry
dfs_power_cut_min	ubi/ubi.h	/^	struct dentry *dfs_power_cut_min;$/;"	m	struct:ubi_debug_info	typeref:struct:ubi_debug_info::dentry
dfs_rootdir	ubi/debug.c	/^static struct dentry *dfs_rootdir;$/;"	v	typeref:struct:dentry	file:
direct_writes	ubi/ubi.h	/^	unsigned int direct_writes:1;$/;"	m	struct:ubi_volume
disable_bgt	ubi/ubi.h	/^	unsigned int disable_bgt:1;$/;"	m	struct:ubi_debug_info
disable_int	nand/pxa3xx_nand.c	/^static void disable_int(struct pxa3xx_nand_info *info, uint32_t int_mask)$/;"	f	file:
dm_scan_other	spi/sandbox.c	/^int dm_scan_other(bool pre_reloc_only)$/;"	f
dma_bufbdry_reg	nand/arasan_nfc.c	/^	u32 dma_bufbdry_reg;$/;"	m	struct:nand_regs	file:
dma_cfg_a	nand/tegra_nand.h	/^	u32	dma_cfg_a;	\/* offset 34h *\/$/;"	m	struct:nand_ctlr
dma_cfg_b	nand/tegra_nand.h	/^	u32	dma_cfg_b;	\/* offset 38h *\/$/;"	m	struct:nand_ctlr
dma_data	nand/lpc32xx_nand_slc.c	/^	u32 dma_data;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
dma_mst_ctrl	nand/tegra_nand.h	/^	u32	dma_mst_ctrl;	\/* offset 30h *\/$/;"	m	struct:nand_ctlr
dma_sysadr0_reg	nand/arasan_nfc.c	/^	u32 dma_sysadr0_reg;$/;"	m	struct:nand_regs	file:
dmachan	nand/lpc32xx_nand_slc.c	/^static unsigned int dmachan = (unsigned int)-1; \/* Invalid channel *\/$/;"	v	file:
dmalist	nand/lpc32xx_nand_slc.c	/^static struct lpc32xx_dmac_ll dmalist[ECCSTEPS * 2 + 1];$/;"	v	typeref:struct:lpc32xx_dmac_ll	file:
do_sync_erase	ubi/io.c	/^static int do_sync_erase(struct ubi_device *ubi, int pnum)$/;"	f	file:
do_sync_erase	ubi/wl.c	/^static int do_sync_erase(struct ubi_device *ubi, struct ubi_wl_entry *e,$/;"	f	file:
do_work	ubi/wl.c	/^static int do_work(struct ubi_device *ubi)$/;"	f	file:
drain_fifo	nand/pxa3xx_nand.c	/^static void drain_fifo(struct pxa3xx_nand_info *info, void *data, int len)$/;"	f	file:
drop_ffs	nand/nand_util.c	/^static size_t drop_ffs(const struct mtd_info *mtd, const u_char *buf,$/;"	f	file:
e	ubi/ubi.h	/^	struct ubi_wl_entry *e;$/;"	m	struct:ubi_work	typeref:struct:ubi_work::ubi_wl_entry
e	ubi/ubi.h	/^	struct ubi_wl_entry *e[UBI_FM_MAX_BLOCKS];$/;"	m	struct:ubi_fastmap_layout	typeref:struct:ubi_fastmap_layout::ubi_wl_entry
e	ubispl/ubi-wrapper.h	/^	struct ubi_wl_entry *e[UBI_FM_MAX_BLOCKS];$/;"	m	struct:ubi_fastmap_layout	typeref:struct:ubi_fastmap_layout::ubi_wl_entry
eaddr	nand/atmel_nand_ecc.h	/^	u32 eaddr;		\/* 0x0C PMECC End Address Register *\/$/;"	m	struct:pmecc_regs
early_erase_peb	ubi/attach.c	/^static int early_erase_peb(struct ubi_device *ubi,$/;"	f	file:
eba_tbl	ubi/ubi.h	/^	int *eba_tbl;$/;"	m	struct:ubi_volume
ec	ubi/ubi-media.h	/^	__be32 ec;$/;"	m	struct:ubi_fm_ec
ec	ubi/ubi-media.h	/^	__be64  ec; \/* Warning: the current limit is 31-bit anyway! *\/$/;"	m	struct:ubi_ec_hdr
ec	ubi/ubi.h	/^	int ec;$/;"	m	struct:ubi_ainf_peb
ec	ubi/ubi.h	/^	int ec;$/;"	m	struct:ubi_wl_entry
ec_count	ubi/ubi.h	/^	int ec_count;$/;"	m	struct:ubi_attach_info
ec_hdr_alsize	ubi/ubi.h	/^	int ec_hdr_alsize;$/;"	m	struct:ubi_device
ec_sum	ubi/ubi.h	/^	uint64_t ec_sum;$/;"	m	struct:ubi_attach_info
ecc	nand/atmel_nand_ecc.h	/^		u8 ecc[56];	\/* PMECC Generated Redundancy Byte Per Sector *\/$/;"	m	struct:pmecc_regs::__anon21
ecc	nand/lpc32xx_nand_mlc.c	/^	} ecc[4];$/;"	m	struct:lpc32xx_oob	typeref:struct:lpc32xx_oob::__anon24	file:
ecc	nand/lpc32xx_nand_slc.c	/^	u32 ecc;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
ecc_auto_dec_reg	nand/lpc32xx_nand_mlc.c	/^	u32 ecc_auto_dec_reg;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
ecc_auto_enc_reg	nand/lpc32xx_nand_mlc.c	/^	u32 ecc_auto_enc_reg;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
ecc_bch	nand/pxa3xx_nand.c	/^	int			ecc_bch;	\/* using BCH ECC? *\/$/;"	m	struct:pxa3xx_nand_info	file:
ecc_buffer	nand/lpc32xx_nand_slc.c	/^static u32 ecc_buffer[8]; \/* MAX ECC size *\/$/;"	v	file:
ecc_codeword_size	nand/arasan_nfc.c	/^	u32 ecc_codeword_size;$/;"	m	struct:arasan_ecc_matrix	file:
ecc_dec_reg	nand/lpc32xx_nand_mlc.c	/^	u32 ecc_dec_reg;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
ecc_enc_reg	nand/lpc32xx_nand_mlc.c	/^	u32 ecc_enc_reg;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
ecc_err_cnt	nand/pxa3xx_nand.c	/^	unsigned int		ecc_err_cnt;$/;"	m	struct:pxa3xx_nand_info	file:
ecc_errcnt_reg	nand/arasan_nfc.c	/^	u32 ecc_errcnt_reg;$/;"	m	struct:nand_regs	file:
ecc_layout_2KB_bch4bit	nand/pxa3xx_nand.c	/^static struct nand_ecclayout ecc_layout_2KB_bch4bit = {$/;"	v	typeref:struct:nand_ecclayout	file:
ecc_layout_4KB_bch4bit	nand/pxa3xx_nand.c	/^static struct nand_ecclayout ecc_layout_4KB_bch4bit = {$/;"	v	typeref:struct:nand_ecclayout	file:
ecc_layout_4KB_bch8bit	nand/pxa3xx_nand.c	/^static struct nand_ecclayout ecc_layout_4KB_bch8bit = {$/;"	v	typeref:struct:nand_ecclayout	file:
ecc_matrix	nand/arasan_nfc.c	/^static const struct arasan_ecc_matrix ecc_matrix[] = {$/;"	v	typeref:struct:arasan_ecc_matrix	file:
ecc_oob_bytes	nand/lpc32xx_nand_mlc.c	/^		uint8_t ecc_oob_bytes[10];$/;"	m	struct:lpc32xx_oob::__anon24	file:
ecc_port	nand/atmel_nand_ecc.h	/^	} ecc_port[PMECC_MAX_SECTOR_NUM];$/;"	m	struct:pmecc_regs	typeref:struct:pmecc_regs::__anon21
ecc_readl	nand/atmel_nand.c	26;"	d	file:
ecc_reg	nand/arasan_nfc.c	/^	u32 ecc_reg;$/;"	m	struct:nand_regs	file:
ecc_scheme	nand/omap_gpmc.c	/^	enum omap_ecc ecc_scheme;$/;"	m	struct:omap_nand_info	typeref:enum:omap_nand_info::omap_ecc	file:
ecc_size	nand/pxa3xx_nand.c	/^	unsigned int		ecc_size;$/;"	m	struct:pxa3xx_nand_info	file:
ecc_size	nand/sunxi_nand_spl.c	/^	int ecc_size;$/;"	m	struct:nfc_config	file:
ecc_sprcmd_reg	nand/arasan_nfc.c	/^	u32 ecc_sprcmd_reg;$/;"	m	struct:nand_regs	file:
ecc_status_result	nand/mxc_nand.h	/^	u16 ecc_status_result;$/;"	m	struct:mxc_nand_regs
ecc_status_result	nand/mxc_nand.h	/^	u32 ecc_status_result;$/;"	m	struct:mxc_nand_regs
ecc_step_size	nand/pxa3xx_nand.h	/^	int ecc_strength, ecc_step_size;$/;"	m	struct:pxa3xx_nand_platform_data
ecc_strength	nand/pxa3xx_nand.h	/^	int ecc_strength, ecc_step_size;$/;"	m	struct:pxa3xx_nand_platform_data
ecc_strength	nand/sunxi_nand_spl.c	/^	int ecc_strength;$/;"	m	struct:nfc_config	file:
ecc_writel	nand/atmel_nand.c	28;"	d	file:
eccaddr	nand/arasan_nfc.c	/^	u16 eccaddr;$/;"	m	struct:arasan_ecc_matrix	file:
eccbits	nand/arasan_nfc.c	/^	u8 eccbits;$/;"	m	struct:arasan_ecc_matrix	file:
ecclayout	nand/nand_bch.c	/^	struct nand_ecclayout ecclayout;$/;"	m	struct:nand_bch_control	typeref:struct:nand_bch_control::nand_ecclayout	file:
eccmask	nand/nand_bch.c	/^	unsigned char        *eccmask;$/;"	m	struct:nand_bch_control	file:
eccoob	nand/tegra_nand.c	/^static struct nand_ecclayout eccoob = {$/;"	v	typeref:struct:nand_ecclayout	file:
eccread	nand/fsl_ifc_nand.c	/^	unsigned int eccread;    \/* Non zero for a full-page ECC read     *\/$/;"	m	struct:fsl_ifc_ctrl	file:
eccsize	nand/arasan_nfc.c	/^	u16 eccsize;$/;"	m	struct:arasan_ecc_matrix	file:
ech	ubi/attach.c	/^static struct ubi_ec_hdr *ech;$/;"	v	typeref:struct:ubi_ec_hdr	file:
el	nand/atmel_nand_ecc.h	/^	u32 el[24];	\/* 0x8C-0xE8 Error Location Registers *\/$/;"	m	struct:pmecc_errloc_regs
el	nand/atmel_nand_ecc.h	/^	u32 el[32];	\/* 0xAC-0x128 Error Location Registers *\/$/;"	m	struct:pmecc_errloc_regs
elbc_ctrl	nand/fsl_elbc_nand.c	/^static struct fsl_elbc_ctrl *elbc_ctrl;$/;"	v	typeref:struct:fsl_elbc_ctrl	file:
elcfg	nand/atmel_nand_ecc.h	/^	u32 elcfg;	\/* 0x00 Error Location Configuration Register *\/$/;"	m	struct:pmecc_errloc_regs
eldis	nand/atmel_nand_ecc.h	/^	u32 eldis;	\/* 0x0C Error Location Disable Register *\/$/;"	m	struct:pmecc_errloc_regs
elen	nand/atmel_nand_ecc.h	/^	u32 elen;	\/* 0x08 Error Location Enable Register *\/$/;"	m	struct:pmecc_errloc_regs
elidr	nand/atmel_nand_ecc.h	/^	u32 elidr;	\/* 0x08 Error Location Interrupt Disable Register *\/$/;"	m	struct:pmecc_errloc_regs
elier	nand/atmel_nand_ecc.h	/^	u32 elier;	\/* 0x14 Error Location Interrupt Enable Register *\/$/;"	m	struct:pmecc_errloc_regs
elimr	nand/atmel_nand_ecc.h	/^	u32 elimr;	\/* 0x0C Error Location Interrupt Mask Register *\/$/;"	m	struct:pmecc_errloc_regs
elisr	nand/atmel_nand_ecc.h	/^	u32 elisr;	\/* 0x20 Error Location Interrupt Status Register *\/$/;"	m	struct:pmecc_errloc_regs
elm_cfg	nand/omap_elm.c	/^struct elm *elm_cfg;$/;"	v	typeref:struct:elm
elm_check_error	nand/omap_elm.c	/^int elm_check_error(u8 *syndrome, enum bch_level bch_type, u32 *error_count,$/;"	f
elm_config	nand/omap_elm.c	/^int elm_config(enum bch_level level)$/;"	f
elm_init	nand/omap_elm.c	/^void elm_init(void)$/;"	f
elm_load_syndromes	nand/omap_elm.c	/^static void elm_load_syndromes(u8 *syndrome, enum bch_level bch_type, u8 poly)$/;"	f	file:
elm_reset	nand/omap_elm.c	/^void elm_reset(void)$/;"	f
elprim	nand/atmel_nand_ecc.h	/^	u32 elprim;	\/* 0x04 Error Location Primitive Register *\/$/;"	m	struct:pmecc_errloc_regs
elsr	nand/atmel_nand_ecc.h	/^	u32 elsr;	\/* 0x10 Error Location Status Register *\/$/;"	m	struct:pmecc_errloc_regs
emcmd1r	nand/zynq_nand.c	/^	u32 emcmd1r;		\/* 0x408 *\/$/;"	m	struct:zynq_nand_smc_regs	file:
emcmd2r	nand/zynq_nand.c	/^	u32 emcmd2r;		\/* 0x40C *\/$/;"	m	struct:zynq_nand_smc_regs	file:
emcr	nand/zynq_nand.c	/^	u32 emcr;		\/* 0x404 *\/$/;"	m	struct:zynq_nand_smc_regs	file:
empty_peb_count	ubi/ubi.h	/^	int empty_peb_count;$/;"	m	struct:ubi_attach_info
empty_vtbl_record	ubi/vtbl.c	/^static struct ubi_vtbl_record empty_vtbl_record;$/;"	v	typeref:struct:ubi_vtbl_record	file:
emulate_bitflips	ubi/ubi.h	/^	unsigned int emulate_bitflips:1;$/;"	m	struct:ubi_debug_info
emulate_io_failures	ubi/ubi.h	/^	unsigned int emulate_io_failures:1;$/;"	m	struct:ubi_debug_info
emulate_power_cut	ubi/ubi.h	/^	unsigned int emulate_power_cut:2;$/;"	m	struct:ubi_debug_info
enable_arbiter	nand/pxa3xx_nand.h	/^	int	enable_arbiter;$/;"	m	struct:pxa3xx_nand_platform_data
enabled	nand/tegra_nand.c	/^	int enabled;		\/* 1 to enable, 0 to disable *\/$/;"	m	struct:fdt_nand	file:
end_cmd	nand/zynq_nand.c	/^	u8		end_cmd;$/;"	m	struct:zynq_nand_info	file:
end_cmd	nand/zynq_nand.c	/^	u8 end_cmd;$/;"	m	struct:zynq_nand_command_format	file:
end_cmd_pending	nand/zynq_nand.c	/^	u8		end_cmd_pending;$/;"	m	struct:zynq_nand_info	file:
end_cmd_valid	nand/zynq_nand.c	/^	u8 end_cmd_valid;$/;"	m	struct:zynq_nand_command_format	file:
ensure_wear_leveling	ubi/wl.c	/^static int ensure_wear_leveling(struct ubi_device *ubi, int nested)$/;"	f	file:
erase	ubi/ubi.h	/^	struct list_head erase;$/;"	m	struct:ubi_attach_info	typeref:struct:ubi_attach_info::list_head
erase_block	ubi/fastmap.c	/^static int erase_block(struct ubi_device *ubi, int pnum)$/;"	f	file:
erase_callback	ubi/io.c	/^static void erase_callback(struct erase_info *ei)$/;"	f	file:
erase_cmd	st_smi.c	/^	u8 erase_cmd;$/;"	m	struct:flash_device	file:
erase_info_t	nand/nand_util.c	/^typedef struct erase_info	erase_info_t;$/;"	t	typeref:struct:erase_info	file:
erase_peb_count	ubi/ubi-media.h	/^	__be32 erase_peb_count;$/;"	m	struct:ubi_fm_hdr
erase_size	spi/sandbox.c	/^	uint erase_size;$/;"	m	struct:sandbox_spi_flash	file:
erase_worker	ubi/wl.c	/^static int erase_worker(struct ubi_device *ubi, struct ubi_work *wl_wrk,$/;"	f	file:
err_addr	nand/mxc_nand.h	/^	u32 err_addr;$/;"	m	struct:mxc_nand_ip_regs
errcnt_1bitreg	nand/arasan_nfc.c	/^	u32 errcnt_1bitreg;$/;"	m	struct:nand_regs	file:
errcnt_2bitreg	nand/arasan_nfc.c	/^	u32 errcnt_2bitreg;$/;"	m	struct:nand_regs	file:
errcnt_3bitreg	nand/arasan_nfc.c	/^	u32 errcnt_3bitreg;$/;"	m	struct:nand_regs	file:
errcnt_4bitreg	nand/arasan_nfc.c	/^	u32 errcnt_4bitreg;$/;"	m	struct:nand_regs	file:
errcnt_5bitreg	nand/arasan_nfc.c	/^	u32 errcnt_5bitreg;$/;"	m	struct:nand_regs	file:
errcnt_6bitreg	nand/arasan_nfc.c	/^	u32 errcnt_6bitreg;$/;"	m	struct:nand_regs	file:
errcnt_7bitreg	nand/arasan_nfc.c	/^	u32 errcnt_7bitreg;$/;"	m	struct:nand_regs	file:
errcnt_8bitreg	nand/arasan_nfc.c	/^	u32 errcnt_8bitreg;$/;"	m	struct:nand_regs	file:
errloc	nand/nand_bch.c	/^	unsigned int         *errloc;$/;"	m	struct:nand_bch_control	file:
erroneous	ubi/ubi.h	/^	struct rb_root erroneous;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rb_root
erroneous_peb_count	ubi/ubi.h	/^	int erroneous_peb_count;$/;"	m	struct:ubi_device
esr	nand/zynq_nand.c	/^	u32 esr;		\/* 0x400 *\/$/;"	m	struct:zynq_nand_smc_regs	file:
eval0r	nand/zynq_nand.c	/^	u32 eval0r;		\/* 0x418 *\/$/;"	m	struct:zynq_nand_smc_regs	file:
exclusive	ubi/ubi.h	/^	int exclusive;$/;"	m	struct:ubi_volume
fake_ecc_layout	nand/mxs_nand.c	/^struct nand_ecclayout fake_ecc_layout;$/;"	v	typeref:struct:nand_ecclayout
fastmap_anchor	ubispl/ubispl.h	/^	int				fastmap_anchor;$/;"	m	struct:ubi_scan_info
fastmap_pebs	ubispl/ubispl.h	/^	int				fastmap_pebs;$/;"	m	struct:ubi_scan_info
fd	spi/sandbox.c	/^	int fd;$/;"	m	struct:sandbox_spi_flash	file:
fdt_decode_nand	nand/tegra_nand.c	/^static int fdt_decode_nand(const void *blob, int node, struct fdt_nand *config)$/;"	f	file:
fdt_nand	nand/tegra_nand.c	/^struct fdt_nand {$/;"	s	file:
fifo_ctrl	nand/tegra_nand.h	/^	u32	fifo_ctrl;	\/* offset 3Ch *\/$/;"	m	struct:nand_ctlr
filename	spi/sandbox.c	/^	const char *filename;$/;"	m	struct:sandbox_spi_flash_plat_data	file:
fill_info	jedec_flash.c	/^static inline void fill_info(flash_info_t *info, const struct amd_flash_info *jedec_entry, ulong base)$/;"	f	file:
find_anchor_wl_entry	ubi/fastmap-wl.c	/^static struct ubi_wl_entry *find_anchor_wl_entry(struct rb_root *root)$/;"	f	file:
find_full_id_nand	nand/nand_base.c	/^static bool find_full_id_nand(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
find_mean_wl_entry	ubi/wl.c	/^static struct ubi_wl_entry *find_mean_wl_entry(struct ubi_device *ubi,$/;"	f	file:
find_sector	cfi_flash.c	/^static flash_sect_t find_sector (flash_info_t * info, ulong addr)$/;"	f	file:
find_valid_banks	nand/denali.c	/^static void find_valid_banks(struct denali_nand_info *denali)$/;"	f	file:
find_wl_entry	ubi/wl.c	/^static struct ubi_wl_entry *find_wl_entry(struct ubi_device *ubi,$/;"	f	file:
flags	spi/sf_dataflash.c	/^	uint16_t	flags;$/;"	m	struct:flash_info	file:
flags	spi/sf_internal.h	/^	u16		flags;$/;"	m	struct:spi_flash_info
flags	ubi/ubi-media.h	/^	__u8    flags;$/;"	m	struct:ubi_vtbl_record
flash	nand/pxa3xx_nand.h	/^	const struct pxa3xx_nand_flash		*flash;$/;"	m	struct:pxa3xx_nand_platform_data	typeref:struct:pxa3xx_nand_platform_data::pxa3xx_nand_flash
flash_add_byte	cfi_flash.c	/^static void flash_add_byte (flash_info_t * info, cfiword_t * cword, uchar c)$/;"	f	file:
flash_addr	nand/mxc_nand.h	/^	u16 flash_addr;$/;"	m	struct:mxc_nand_regs
flash_addr	nand/mxc_nand.h	/^	u32 flash_addr[12];$/;"	m	struct:mxc_nand_regs
flash_bank	nand/denali.h	/^	int flash_bank; \/* currently selected chip *\/$/;"	m	struct:denali_nand_info
flash_bank	nand/denali_spl.c	/^static const int flash_bank;$/;"	v	file:
flash_bbt	nand/pxa3xx_nand.h	/^	bool	flash_bbt;$/;"	m	struct:pxa3xx_nand_platform_data
flash_bbt	nand/vf610_nfc.c	/^	int flash_bbt;$/;"	m	struct:vf610_nfc_config	file:
flash_cmd	nand/mxc_nand.h	/^	u16 flash_cmd;$/;"	m	struct:mxc_nand_regs
flash_cmd	nand/mxc_nand.h	/^	u32 flash_cmd;$/;"	m	struct:mxc_nand_regs
flash_complete_operation	pic32_flash.c	/^static inline int flash_complete_operation(void)$/;"	f	file:
flash_detect_cfi	cfi_flash.c	/^static int flash_detect_cfi (flash_info_t * info, struct cfi_qry *qry)$/;"	f	file:
flash_detect_legacy	cfi_flash.c	/^static inline int flash_detect_legacy(phys_addr_t base, int banknum)$/;"	f	file:
flash_detect_legacy	cfi_flash.c	/^static int flash_detect_legacy(phys_addr_t base, int banknum)$/;"	f	file:
flash_device	st_smi.c	/^struct flash_device {$/;"	s	file:
flash_devices	st_smi.c	/^static struct flash_device flash_devices[] = {$/;"	v	typeref:struct:flash_device	file:
flash_erase	altera_qspi.c	/^int flash_erase(flash_info_t *info, int s_first, int s_last)$/;"	f
flash_erase	cfi_flash.c	/^int flash_erase (flash_info_t * info, int s_first, int s_last)$/;"	f
flash_erase	pic32_flash.c	/^int flash_erase(flash_info_t *info, int s_first, int s_last)$/;"	f
flash_erase	st_smi.c	/^int flash_erase(flash_info_t *info, int s_first, int s_last)$/;"	f
flash_erase	stm32_flash.c	/^int flash_erase(flash_info_t *info, int first, int last)$/;"	f
flash_fixup_amd	cfi_flash.c	/^static void flash_fixup_amd(flash_info_t *info, struct cfi_qry *qry)$/;"	f	file:
flash_fixup_atmel	cfi_flash.c	/^static void flash_fixup_atmel(flash_info_t *info, struct cfi_qry *qry)$/;"	f	file:
flash_fixup_num	cfi_flash.c	/^static void flash_fixup_num(flash_info_t *info, struct cfi_qry *qry)$/;"	f	file:
flash_fixup_sst	cfi_flash.c	/^static void flash_fixup_sst(flash_info_t *info, struct cfi_qry *qry)$/;"	f	file:
flash_fixup_stm	cfi_flash.c	/^static void flash_fixup_stm(flash_info_t *info, struct cfi_qry *qry)$/;"	f	file:
flash_full_status_check	cfi_flash.c	/^static int flash_full_status_check (flash_info_t * info, flash_sect_t sector,$/;"	f	file:
flash_get_info	cfi_flash.c	/^flash_info_t *flash_get_info(ulong base)$/;"	f
flash_get_size	cfi_flash.c	/^ulong flash_get_size (phys_addr_t base, int banknum)$/;"	f
flash_get_size	st_smi.c	/^static ulong flash_get_size(ulong base, int banknum)$/;"	f	file:
flash_info	altera_qspi.c	/^flash_info_t flash_info[CONFIG_SYS_MAX_FLASH_BANKS];	\/* FLASH chips info *\/$/;"	v
flash_info	cfi_flash.c	/^flash_info_t flash_info[CFI_MAX_FLASH_BANKS];	\/* FLASH chips info *\/$/;"	v
flash_info	pic32_flash.c	/^flash_info_t flash_info[CONFIG_SYS_MAX_FLASH_BANKS];$/;"	v
flash_info	spi/sf_dataflash.c	/^struct flash_info {$/;"	s	file:
flash_info	st_smi.c	/^flash_info_t flash_info[CONFIG_SYS_MAX_FLASH_BANKS];$/;"	v
flash_info	stm32_flash.c	/^flash_info_t flash_info[CONFIG_SYS_MAX_FLASH_BANKS];$/;"	v
flash_init	altera_qspi.c	/^unsigned long flash_init(void)$/;"	f
flash_init	cfi_flash.c	/^unsigned long flash_init (void)$/;"	f
flash_init	pic32_flash.c	/^unsigned long flash_init(void)$/;"	f
flash_init	st_smi.c	/^unsigned long flash_init(void)$/;"	f
flash_init	stm32_flash.c	/^unsigned long flash_init(void)$/;"	f
flash_initiate_operation	pic32_flash.c	/^static inline void flash_initiate_operation(u32 nvmop)$/;"	f	file:
flash_is_busy	cfi_flash.c	/^static int flash_is_busy (flash_info_t * info, flash_sect_t sect)$/;"	f	file:
flash_isequal	cfi_flash.c	/^static int flash_isequal (flash_info_t * info, flash_sect_t sect,$/;"	f	file:
flash_isset	cfi_flash.c	/^static int flash_isset (flash_info_t * info, flash_sect_t sect,$/;"	f	file:
flash_make_cmd	cfi_flash.c	/^static void flash_make_cmd(flash_info_t *info, u32 cmd, void *cmdbuf)$/;"	f	file:
flash_map	cfi_flash.c	/^flash_map (flash_info_t * info, flash_sect_t sect, uint offset)$/;"	f	file:
flash_mem	nand/denali.h	/^	void __iomem *flash_mem;  \/* Mapped io reg base address *\/$/;"	m	struct:denali_nand_info
flash_offset_cfi	cfi_flash.c	/^static uint flash_offset_cfi[2] = { FLASH_OFFSET_CFI, FLASH_OFFSET_CFI_ALT };$/;"	v	file:
flash_print_info	altera_qspi.c	/^void flash_print_info(flash_info_t *info)$/;"	f
flash_print_info	cfi_flash.c	/^void flash_print_info (flash_info_t * info)$/;"	f
flash_print_info	pic32_flash.c	/^void flash_print_info(flash_info_t *info)$/;"	f
flash_print_info	st_smi.c	/^void flash_print_info(flash_info_t *info)$/;"	f
flash_print_info	stm32_flash.c	/^void flash_print_info(flash_info_t *info)$/;"	f
flash_printqry	cfi_flash.c	/^static void flash_printqry (struct cfi_qry *qry)$/;"	f	file:
flash_protect_default	cfi_flash.c	/^void flash_protect_default(void)$/;"	f
flash_read16	cfi_flash.c	/^__maybe_weak u16 flash_read16(void *addr)$/;"	f
flash_read32	cfi_flash.c	/^__maybe_weak u32 flash_read32(void *addr)$/;"	f
flash_read64	cfi_flash.c	/^__maybe_weak u64 flash_read64(void *addr)$/;"	f
flash_read8	cfi_flash.c	/^__maybe_weak u8 flash_read8(void *addr)$/;"	f
flash_read_cfi	cfi_flash.c	/^static void flash_read_cfi (flash_info_t *info, void *buf,$/;"	f	file:
flash_read_factory_serial	cfi_flash.c	/^void flash_read_factory_serial (flash_info_t * info, void *buffer, int offset,$/;"	f
flash_read_jedec_ids	cfi_flash.c	/^static void flash_read_jedec_ids (flash_info_t * info)$/;"	f	file:
flash_read_long	cfi_flash.c	/^static ulong flash_read_long (flash_info_t * info, flash_sect_t sect,$/;"	f	file:
flash_read_uchar	cfi_flash.c	/^static inline uchar flash_read_uchar (flash_info_t * info, uint offset)$/;"	f	file:
flash_read_user_serial	cfi_flash.c	/^void flash_read_user_serial (flash_info_t * info, void *buffer, int offset,$/;"	f
flash_read_word	cfi_flash.c	/^static inline ushort flash_read_word (flash_info_t * info, uint offset)$/;"	f	file:
flash_real_protect	cfi_flash.c	/^int flash_real_protect (flash_info_t * info, long sector, int prot)$/;"	f
flash_reg	nand/denali.h	/^	void __iomem *flash_reg;  \/* Mapped io reg base address *\/$/;"	m	struct:denali_nand_info
flash_sector_size	cfi_flash.c	/^unsigned long flash_sector_size(flash_info_t *info, flash_sect_t sect)$/;"	f
flash_set_verbose	altera_qspi.c	/^void flash_set_verbose(uint v)$/;"	f
flash_set_verbose	cfi_flash.c	/^void flash_set_verbose(uint v)$/;"	f
flash_size	ubi/ubi.h	/^	long long flash_size;$/;"	m	struct:ubi_device
flash_status_check	cfi_flash.c	/^static int flash_status_check (flash_info_t * info, flash_sect_t sector,$/;"	f	file:
flash_status_poll	cfi_flash.c	/^static int flash_status_poll(flash_info_t *info, void *src, void *dst,$/;"	f	file:
flash_sts_reg	nand/arasan_nfc.c	/^	u32 flash_sts_reg;$/;"	m	struct:nand_regs	file:
flash_toggle	cfi_flash.c	/^static int flash_toggle (flash_info_t * info, flash_sect_t sect,$/;"	f	file:
flash_unlock_seq	cfi_flash.c	/^static void flash_unlock_seq (flash_info_t * info, flash_sect_t sect)$/;"	f	file:
flash_unmap	cfi_flash.c	/^static inline void flash_unmap(flash_info_t *info, flash_sect_t sect,$/;"	f	file:
flash_verbose	altera_qspi.c	/^static uint flash_verbose;$/;"	v	file:
flash_verbose	cfi_flash.c	/^static uint flash_verbose = 1;$/;"	v	file:
flash_verbose	cfi_flash.c	60;"	d	file:
flash_wait_till_busy	pic32_flash.c	/^static int flash_wait_till_busy(const char *func, ulong timeout)$/;"	f	file:
flash_width	nand/pxa3xx_nand.h	/^	unsigned int	flash_width;    \/* Width of Flash memory (DWIDTH_M) *\/$/;"	m	struct:pxa3xx_nand_flash
flash_write16	cfi_flash.c	/^__maybe_weak void flash_write16(u16 value, void *addr)$/;"	f
flash_write32	cfi_flash.c	/^__maybe_weak void flash_write32(u32 value, void *addr)$/;"	f
flash_write64	cfi_flash.c	/^__maybe_weak void flash_write64(u64 value, void *addr)$/;"	f
flash_write8	cfi_flash.c	/^__maybe_weak void flash_write8(u8 value, void *addr)$/;"	f
flash_write_cfibuffer	cfi_flash.c	/^static int flash_write_cfibuffer (flash_info_t * info, ulong dest, uchar * cp,$/;"	f	file:
flash_write_cfiword	cfi_flash.c	/^static int flash_write_cfiword (flash_info_t * info, ulong dest,$/;"	f	file:
flash_write_cmd	cfi_flash.c	/^void flash_write_cmd (flash_info_t * info, flash_sect_t sect,$/;"	f
flexonenand_addr	onenand/onenand_base.c	/^static loff_t flexonenand_addr(struct onenand_chip *this, int block)$/;"	f	file:
flexonenand_block	onenand/onenand_base.c	/^static unsigned int flexonenand_block(struct onenand_chip *this, loff_t addr)$/;"	f	file:
flexonenand_check_blocks_erased	onenand/onenand_base.c	/^static int flexonenand_check_blocks_erased(struct mtd_info *mtd,$/;"	f	file:
flexonenand_get_boundary	onenand/onenand_base.c	/^static int flexonenand_get_boundary(struct mtd_info *mtd)$/;"	f	file:
flexonenand_get_size	onenand/onenand_base.c	/^static void flexonenand_get_size(struct mtd_info *mtd)$/;"	f	file:
flexonenand_region	onenand/onenand_base.c	/^int flexonenand_region(struct mtd_info *mtd, loff_t addr)$/;"	f
flexonenand_set_boundary	onenand/onenand_base.c	/^int flexonenand_set_boundary(struct mtd_info *mtd, int die,$/;"	f
fm	ubi/ubi.h	/^	struct ubi_fastmap_layout *fm;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_fastmap_layout
fm	ubispl/ubispl.h	/^	struct ubi_fastmap_layout	*fm;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::ubi_fastmap_layout
fm_autoconvert	ubi/build.c	/^static bool fm_autoconvert = CONFIG_MTD_UBI_FASTMAP_AUTOCONVERT;$/;"	v	file:
fm_autoconvert	ubi/build.c	/^static bool fm_autoconvert;$/;"	v	file:
fm_buf	ubi/ubi.h	/^	void *fm_buf;$/;"	m	struct:ubi_device
fm_buf	ubispl/ubispl.h	/^	uint8_t				fm_buf[UBI_FM_BUF_SIZE];$/;"	m	struct:ubi_scan_info
fm_debug	ubi/build.c	/^static bool fm_debug = CONFIG_MTD_UBI_FM_DEBUG;$/;"	v	file:
fm_debug	ubi/build.c	/^static bool fm_debug;$/;"	v	file:
fm_disabled	ubi/ubi.h	/^	int fm_disabled;$/;"	m	struct:ubi_device
fm_eba_sem	ubi/ubi.h	/^	struct rw_semaphore fm_eba_sem;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rw_semaphore
fm_enabled	ubispl/ubispl.h	/^	int				fm_enabled;$/;"	m	struct:ubi_scan_info
fm_layout	ubispl/ubispl.h	/^	struct ubi_fastmap_layout	fm_layout;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::ubi_fastmap_layout
fm_pool	ubi/ubi.h	/^	struct ubi_fm_pool fm_pool;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_fm_pool
fm_pool	ubispl/ubispl.h	/^	struct ubi_fm_pool		fm_pool;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::ubi_fm_pool
fm_protect	ubi/ubi.h	/^	struct rw_semaphore fm_protect;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rw_semaphore
fm_sb	ubispl/ubispl.h	/^	struct ubi_fm_sb		fm_sb;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::ubi_fm_sb
fm_size	ubi/ubi.h	/^	size_t fm_size;$/;"	m	struct:ubi_device
fm_size	ubispl/ubispl.h	/^	size_t				fm_size;$/;"	m	struct:ubi_scan_info
fm_used	ubispl/ubispl.h	/^	unsigned long			fm_used[UBI_FM_BM_SIZE];$/;"	m	struct:ubi_scan_info
fm_vh	ubispl/ubispl.h	/^	struct ubi_vid_hdr		fm_vh;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::ubi_vid_hdr
fm_wl_pool	ubi/ubi.h	/^	struct ubi_fm_pool fm_wl_pool;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_fm_pool
fm_wl_pool	ubispl/ubispl.h	/^	struct ubi_fm_pool		fm_wl_pool;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::ubi_fm_pool
fm_work	ubi/ubi.h	/^	struct work_struct fm_work;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::work_struct
fm_work_scheduled	ubi/ubi.h	/^	int fm_work_scheduled;$/;"	m	struct:ubi_device
fmr	nand/fsl_elbc_nand.c	/^	unsigned int fmr;       \/* FCM Flash Mode Register value     *\/$/;"	m	struct:fsl_elbc_mtd	file:
found	ubispl/ubispl.h	/^	unsigned long			found[UBI_VOL_BM_SIZE];$/;"	m	struct:ubi_vol_info
free	nand/lpc32xx_nand_mlc.c	/^	} free[4];$/;"	m	struct:lpc32xx_oob	typeref:struct:lpc32xx_oob::__anon23	file:
free	ubi/ubi.h	/^	struct list_head free;$/;"	m	struct:ubi_attach_info	typeref:struct:ubi_attach_info::list_head
free	ubi/ubi.h	/^	struct rb_root free;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rb_root
free_count	ubi/ubi.h	/^	int free_count;$/;"	m	struct:ubi_device
free_oob_bytes	nand/lpc32xx_nand_mlc.c	/^		uint8_t free_oob_bytes[6];$/;"	m	struct:lpc32xx_oob::__anon23	file:
free_partition	mtdpart.c	/^static inline void free_partition(struct mtd_part *p)$/;"	f	file:
free_peb_count	ubi/ubi-media.h	/^	__be32 free_peb_count;$/;"	m	struct:ubi_fm_hdr
free_seen	ubi/fastmap.c	/^static inline void free_seen(int *seen)$/;"	f	file:
fsize_mb	ubispl/ubispl.h	/^	unsigned int			fsize_mb;$/;"	m	struct:ubi_scan_info
fsl_elbc_chip_init	nand/fsl_elbc_nand.c	/^static int fsl_elbc_chip_init(int devnum, u8 *addr)$/;"	f	file:
fsl_elbc_cmdfunc	nand/fsl_elbc_nand.c	/^static void fsl_elbc_cmdfunc(struct mtd_info *mtd, unsigned int command,$/;"	f	file:
fsl_elbc_ctrl	nand/fsl_elbc_nand.c	/^struct fsl_elbc_ctrl {$/;"	s	file:
fsl_elbc_ctrl_init	nand/fsl_elbc_nand.c	/^static void fsl_elbc_ctrl_init(void)$/;"	f	file:
fsl_elbc_do_read	nand/fsl_elbc_nand.c	/^static void fsl_elbc_do_read(struct nand_chip *chip, int oob)$/;"	f	file:
fsl_elbc_mtd	nand/fsl_elbc_nand.c	/^struct fsl_elbc_mtd {$/;"	s	file:
fsl_elbc_oob_lp_eccm0	nand/fsl_elbc_nand.c	/^static struct nand_ecclayout fsl_elbc_oob_lp_eccm0 = {$/;"	v	typeref:struct:nand_ecclayout	file:
fsl_elbc_oob_lp_eccm1	nand/fsl_elbc_nand.c	/^static struct nand_ecclayout fsl_elbc_oob_lp_eccm1 = {$/;"	v	typeref:struct:nand_ecclayout	file:
fsl_elbc_oob_sp_eccm0	nand/fsl_elbc_nand.c	/^static struct nand_ecclayout fsl_elbc_oob_sp_eccm0 = {$/;"	v	typeref:struct:nand_ecclayout	file:
fsl_elbc_oob_sp_eccm1	nand/fsl_elbc_nand.c	/^static struct nand_ecclayout fsl_elbc_oob_sp_eccm1 = {$/;"	v	typeref:struct:nand_ecclayout	file:
fsl_elbc_read_buf	nand/fsl_elbc_nand.c	/^static void fsl_elbc_read_buf(struct mtd_info *mtd, u8 *buf, int len)$/;"	f	file:
fsl_elbc_read_byte	nand/fsl_elbc_nand.c	/^static u8 fsl_elbc_read_byte(struct mtd_info *mtd)$/;"	f	file:
fsl_elbc_read_page	nand/fsl_elbc_nand.c	/^static int fsl_elbc_read_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
fsl_elbc_run_command	nand/fsl_elbc_nand.c	/^static int fsl_elbc_run_command(struct mtd_info *mtd)$/;"	f	file:
fsl_elbc_select_chip	nand/fsl_elbc_nand.c	/^static void fsl_elbc_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
fsl_elbc_wait	nand/fsl_elbc_nand.c	/^static int fsl_elbc_wait(struct mtd_info *mtd, struct nand_chip *chip)$/;"	f	file:
fsl_elbc_write_buf	nand/fsl_elbc_nand.c	/^static void fsl_elbc_write_buf(struct mtd_info *mtd, const u8 *buf, int len)$/;"	f	file:
fsl_elbc_write_page	nand/fsl_elbc_nand.c	/^static int fsl_elbc_write_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
fsl_elbc_write_subpage	nand/fsl_elbc_nand.c	/^static int fsl_elbc_write_subpage(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
fsl_ifc_chip_init	nand/fsl_ifc_nand.c	/^static int fsl_ifc_chip_init(int devnum, u8 *addr)$/;"	f	file:
fsl_ifc_cmdfunc	nand/fsl_ifc_nand.c	/^static void fsl_ifc_cmdfunc(struct mtd_info *mtd, unsigned int command,$/;"	f	file:
fsl_ifc_ctrl	nand/fsl_ifc_nand.c	/^struct fsl_ifc_ctrl {$/;"	s	file:
fsl_ifc_ctrl_init	nand/fsl_ifc_nand.c	/^static void fsl_ifc_ctrl_init(void)$/;"	f	file:
fsl_ifc_do_read	nand/fsl_ifc_nand.c	/^static void fsl_ifc_do_read(struct nand_chip *chip,$/;"	f	file:
fsl_ifc_mtd	nand/fsl_ifc_nand.c	/^struct fsl_ifc_mtd {$/;"	s	file:
fsl_ifc_read_buf	nand/fsl_ifc_nand.c	/^static void fsl_ifc_read_buf(struct mtd_info *mtd, u8 *buf, int len)$/;"	f	file:
fsl_ifc_read_byte	nand/fsl_ifc_nand.c	/^static u8 fsl_ifc_read_byte(struct mtd_info *mtd)$/;"	f	file:
fsl_ifc_read_byte16	nand/fsl_ifc_nand.c	/^static uint8_t fsl_ifc_read_byte16(struct mtd_info *mtd)$/;"	f	file:
fsl_ifc_read_page	nand/fsl_ifc_nand.c	/^static int fsl_ifc_read_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
fsl_ifc_run_command	nand/fsl_ifc_nand.c	/^static int fsl_ifc_run_command(struct mtd_info *mtd)$/;"	f	file:
fsl_ifc_select_chip	nand/fsl_ifc_nand.c	/^static void fsl_ifc_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
fsl_ifc_sram_init	nand/fsl_ifc_nand.c	/^static int fsl_ifc_sram_init(uint32_t ver)$/;"	f	file:
fsl_ifc_wait	nand/fsl_ifc_nand.c	/^static int fsl_ifc_wait(struct mtd_info *mtd, struct nand_chip *chip)$/;"	f	file:
fsl_ifc_write_buf	nand/fsl_ifc_nand.c	/^static void fsl_ifc_write_buf(struct mtd_info *mtd, const u8 *buf, int len)$/;"	f	file:
fsl_ifc_write_page	nand/fsl_ifc_nand.c	/^static int fsl_ifc_write_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
fsl_spi_boot	spi/fsl_espi_spl.c	/^void fsl_spi_boot(void)$/;"	f
fsl_spi_spl_load_image	spi/fsl_espi_spl.c	/^void fsl_spi_spl_load_image(uint32_t offs, unsigned int size, void *vdst)$/;"	f
fsl_upm_end_pattern	nand/fsl_upm.c	/^static void fsl_upm_end_pattern(struct fsl_upm *upm)$/;"	f	file:
fsl_upm_nand_init	nand/fsl_upm.c	/^int fsl_upm_nand_init(struct nand_chip *chip, struct fsl_upm_nand *fun)$/;"	f
fsl_upm_run_pattern	nand/fsl_upm.c	/^static void fsl_upm_run_pattern(struct fsl_upm *upm, int width,$/;"	f	file:
fsl_upm_start_pattern	nand/fsl_upm.c	/^static void fsl_upm_start_pattern(struct fsl_upm *upm, u32 pat_offset)$/;"	f	file:
fsmc_bch8_correct_data	nand/fsmc_nand.c	/^static int fsmc_bch8_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
fsmc_ecc1_layout	nand/fsmc_nand.c	/^static struct nand_ecclayout fsmc_ecc1_layout = {$/;"	v	typeref:struct:nand_ecclayout	file:
fsmc_ecc4_224_layout	nand/fsmc_nand.c	/^static struct nand_ecclayout fsmc_ecc4_224_layout = {$/;"	v	typeref:struct:nand_ecclayout	file:
fsmc_ecc4_lp_layout	nand/fsmc_nand.c	/^static struct nand_ecclayout fsmc_ecc4_lp_layout = {$/;"	v	typeref:struct:nand_ecclayout	file:
fsmc_ecc4_sp_layout	nand/fsmc_nand.c	/^static struct nand_ecclayout fsmc_ecc4_sp_layout = {$/;"	v	typeref:struct:nand_ecclayout	file:
fsmc_eccpl_lp	nand/fsmc_nand.c	/^static struct fsmc_eccplace fsmc_eccpl_lp = {$/;"	v	typeref:struct:fsmc_eccplace	file:
fsmc_eccpl_sp	nand/fsmc_nand.c	/^static struct fsmc_eccplace fsmc_eccpl_sp = {$/;"	v	typeref:struct:fsmc_eccplace	file:
fsmc_enable_hwecc	nand/fsmc_nand.c	/^void fsmc_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f
fsmc_nand_hwcontrol	nand/fsmc_nand.c	/^static void fsmc_nand_hwcontrol(struct mtd_info *mtd, int cmd, uint ctrl)$/;"	f	file:
fsmc_nand_init	nand/fsmc_nand.c	/^int fsmc_nand_init(struct nand_chip *nand)$/;"	f
fsmc_nand_switch_ecc	nand/fsmc_nand.c	/^int fsmc_nand_switch_ecc(uint32_t eccstrength)$/;"	f
fsmc_read_hwecc	nand/fsmc_nand.c	/^static int fsmc_read_hwecc(struct mtd_info *mtd,$/;"	f	file:
fsmc_read_page_hwecc	nand/fsmc_nand.c	/^static int fsmc_read_page_hwecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
fsmc_regs_p	nand/fsmc_nand.c	/^static struct fsmc_regs *const fsmc_regs_p = (struct fsmc_regs *)$/;"	v	file:
fsmc_version	nand/fsmc_nand.c	/^static u32 fsmc_version;$/;"	v	file:
ftsmc020_config	ftsmc020.c	/^struct ftsmc020_config {$/;"	s	file:
ftsmc020_init	ftsmc020.c	/^void ftsmc020_init(void)$/;"	f
ftsmc020_setup_bank	ftsmc020.c	/^static void ftsmc020_setup_bank(unsigned int bank, struct ftsmc020_config *cfg)$/;"	f	file:
fun_cmd_ctrl	nand/fsl_upm.c	/^static void fun_cmd_ctrl(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
fun_select_chip	nand/fsl_upm.c	/^static void fun_select_chip(struct mtd_info *mtd, int chip_nr)$/;"	f	file:
fun_wait	nand/fsl_upm.c	/^static void fun_wait(struct fsl_upm_nand *fun)$/;"	f	file:
func	ubi/ubi.h	/^	int (*func)(struct ubi_device *ubi, struct ubi_work *wrk, int shutdown);$/;"	m	struct:ubi_work
fwblks	nand/denali.h	/^	uint32_t fwblks; \/* represent how many blocks FW used *\/$/;"	m	struct:denali_nand_info
galois_field	nand/mxs_nand.c	/^static int galois_field = 13;$/;"	v	file:
gen_true_ecc	nand/omap_gpmc.c	/^static uint32_t gen_true_ecc(uint8_t *ecc_buf)$/;"	f	file:
get_bad_peb_limit	ubi/build.c	/^static int get_bad_peb_limit(const struct ubi_device *ubi, int max_beb_per1024)$/;"	f	file:
get_dev_status	nand/mxc_nand.c	/^static uint16_t get_dev_status(struct mxc_nand_host *host)$/;"	f	file:
get_hynix_nand_para	nand/denali.c	/^static void get_hynix_nand_para(struct denali_nand_info *denali,$/;"	f	file:
get_mtd_device	mtdcore.c	/^EXPORT_SYMBOL_GPL(get_mtd_device);$/;"	v
get_mtd_device	mtdcore.c	/^struct mtd_info *get_mtd_device(struct mtd_info *mtd, int num)$/;"	f
get_mtd_device_nm	mtdcore.c	/^EXPORT_SYMBOL_GPL(get_mtd_device_nm);$/;"	v
get_mtd_device_nm	mtdcore.c	/^struct mtd_info *get_mtd_device_nm(const char *name)$/;"	f
get_onfi_nand_para	nand/denali.c	/^static uint32_t get_onfi_nand_para(struct denali_nand_info *denali)$/;"	f	file:
get_part	mtd_uboot.c	/^static int get_part(const char *partname, int *idx, loff_t *off, loff_t *size,$/;"	f	file:
get_partition_parser	mtdpart.c	/^static struct mtd_part_parser *get_partition_parser(const char *name)$/;"	f	file:
get_peb_for_wl	ubi/fastmap-wl.c	/^static struct ubi_wl_entry *get_peb_for_wl(struct ubi_device *ubi)$/;"	f	file:
get_peb_for_wl	ubi/wl.c	/^static struct ubi_wl_entry *get_peb_for_wl(struct ubi_device *ubi)$/;"	f	file:
get_samsung_nand_para	nand/denali.c	/^static void get_samsung_nand_para(struct denali_nand_info *denali,$/;"	f	file:
get_toshiba_nand_para	nand/denali.c	/^static void get_toshiba_nand_para(struct denali_nand_info *denali)$/;"	f	file:
global_sqnum	ubi/ubi.h	/^	unsigned long long global_sqnum;$/;"	m	struct:ubi_device
good_peb_count	ubi/ubi.h	/^	int good_peb_count;$/;"	m	struct:ubi_device
gpio	nand/sunxi_nand.c	/^		struct gpio_desc gpio;$/;"	m	union:sunxi_nand_rb::__anon25	typeref:struct:sunxi_nand_rb::__anon25::gpio_desc	file:
handle_data_pio	nand/pxa3xx_nand.c	/^static void handle_data_pio(struct pxa3xx_nand_info *info)$/;"	f	file:
hardware_ecc	nand/vf610_nfc.c	/^	int hardware_ecc;$/;"	m	struct:vf610_nfc_config	file:
hdr_crc	ubi/ubi-media.h	/^	__be32  hdr_crc;$/;"	m	struct:ubi_ec_hdr
hdr_crc	ubi/ubi-media.h	/^	__be32  hdr_crc;$/;"	m	struct:ubi_vid_hdr
hdrs_min_io_size	ubi/ubi.h	/^	int hdrs_min_io_size;$/;"	m	struct:ubi_device
head	nand/denali.h	/^	int head;$/;"	m	struct:nand_buf
highest_lnum	ubi/ubi.h	/^	int highest_lnum;$/;"	m	struct:ubi_ainf_volume
highest_vol_id	ubi/ubi.h	/^	int highest_vol_id;$/;"	m	struct:ubi_attach_info
hooked_block_markbad	nand/mxs_nand.c	/^	int		(*hooked_block_markbad)(struct mtd_info *mtd,$/;"	m	struct:mxs_nand_info	file:
hooked_read_oob	nand/mxs_nand.c	/^	int		(*hooked_read_oob)(struct mtd_info *mtd,$/;"	m	struct:mxs_nand_info	file:
hooked_write_oob	nand/mxs_nand.c	/^	int		(*hooked_write_oob)(struct mtd_info *mtd,$/;"	m	struct:mxs_nand_info	file:
host	nand/mxc_nand.c	/^static struct mxc_nand_host *host = &mxc_host;$/;"	v	typeref:struct:mxc_nand_host	file:
host	nand/pxa3xx_nand.c	/^	struct pxa3xx_nand_host *host[NUM_CHIP_SELECT];$/;"	m	struct:pxa3xx_nand_info	typeref:struct:pxa3xx_nand_info::pxa3xx_nand_host	file:
hwstatus_cmd	nand/tegra_nand.h	/^	u32	hwstatus_cmd;	\/* offset 50h *\/$/;"	m	struct:nand_ctlr
hwstatus_mask	nand/tegra_nand.h	/^	u32	hwstatus_mask;	\/* offset 54h *\/$/;"	m	struct:nand_ctlr
i	ubispl/ubispl.c	/^	int i;$/;"	m	struct:ubi_attach_info	file:
icr	nand/lpc32xx_nand_mlc.c	/^	u32 icr;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
icr	nand/lpc32xx_nand_slc.c	/^	u32 icr;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
id	mtdcore.c	/^	struct idr_layer id[MAX_IDR_ID];$/;"	m	struct:idr	typeref:struct:idr::idr_layer	file:
id	spi/sf_internal.h	/^	u8		id[SPI_FLASH_MAX_ID_LEN];$/;"	m	struct:spi_flash_info
id_len	spi/sf_internal.h	/^	u8		id_len;$/;"	m	struct:spi_flash_info
idr	mtdcore.c	/^struct idr {$/;"	s	file:
idr	nand/atmel_nand_ecc.h	/^	u32 idr;		\/* 0x20 PMECC Interrupt Disable Register *\/$/;"	m	struct:pmecc_regs
idr_alloc	mtdcore.c	/^int idr_alloc(struct idr *idp, void *ptr, int start, int end, gfp_t gfp_mask)$/;"	f
idr_find	mtdcore.c	/^void *idr_find(struct idr *idp, int id)$/;"	f
idr_get_next	mtdcore.c	/^void *idr_get_next(struct idr *idp, int *next)$/;"	f
idr_layer	mtdcore.c	/^struct idr_layer {$/;"	s	file:
idr_remove	mtdcore.c	/^void idr_remove(struct idr *idp, int id)$/;"	f
idx	nand/denali.h	/^	int idx;$/;"	m	struct:denali_nand_info
idx2vol_id	ubi/ubi.h	/^static inline int idx2vol_id(const struct ubi_device *ubi, int idx)$/;"	f
ien	nand/lpc32xx_nand_slc.c	/^	u32 ien;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
ier	nand/atmel_nand_ecc.h	/^	u32 ier;		\/* 0x1C PMECC Interrupt Enable Register *\/$/;"	m	struct:pmecc_regs
ier	nand/tegra_nand.h	/^	u32	ier;		\/* offset 0Ch *\/$/;"	m	struct:nand_ctlr
ifc_ctrl	nand/fsl_ifc_nand.c	/^static struct fsl_ifc_ctrl *ifc_ctrl;$/;"	v	typeref:struct:fsl_ifc_ctrl	file:
image_seq	ubi/ubi-media.h	/^	__be32  image_seq;$/;"	m	struct:ubi_ec_hdr
image_seq	ubi/ubi.h	/^	int image_seq;$/;"	m	struct:ubi_device
imr	altera_qspi.c	/^	u32	imr;$/;"	m	struct:altera_qspi_regs	file:
imr	nand/atmel_nand_ecc.h	/^	u32 imr;		\/* 0x24 PMECC Interrupt Mask Register *\/$/;"	m	struct:pmecc_regs
in_wl_tree	ubi/wl.c	/^static int in_wl_tree(struct ubi_wl_entry *e, struct rb_root *root)$/;"	f	file:
index	nand/fsl_elbc_nand.c	/^	unsigned int index;      \/* Pointer to next byte to 'read'        *\/$/;"	m	struct:fsl_elbc_ctrl	file:
index	nand/fsl_ifc_nand.c	/^	unsigned int index;      \/* Pointer to next byte to 'read'        *\/$/;"	m	struct:fsl_ifc_ctrl	file:
index_addr	nand/denali.c	/^static void index_addr(struct denali_nand_info *denali,$/;"	f	file:
index_addr	nand/denali_spl.c	/^static void index_addr(uint32_t address, uint32_t data)$/;"	f	file:
index_addr_read_data	nand/denali.c	/^static void index_addr_read_data(struct denali_nand_info *denali,$/;"	f	file:
info	nand/sunxi_nand.c	/^	} info;$/;"	m	struct:sunxi_nand_rb	typeref:union:sunxi_nand_rb::__anon25	file:
info_data	nand/pxa3xx_nand.c	/^	void			*info_data;$/;"	m	struct:pxa3xx_nand_host	file:
init_mtd	mtdcore.c	/^module_init(init_mtd);$/;"	v
init_mtd	mtdcore.c	/^static int __init init_mtd(void)$/;"	f	file:
init_seen	ubi/fastmap.c	/^static inline int *init_seen(struct ubi_device *ubi)$/;"	f	file:
init_volumes	ubi/vtbl.c	/^static int init_volumes(struct ubi_device *ubi,$/;"	f	file:
int_stat	nand/lpc32xx_nand_slc.c	/^	u32 int_stat;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
intsig_enr	nand/arasan_nfc.c	/^	u32 intsig_enr;$/;"	m	struct:nand_regs	file:
intsts_enr	nand/arasan_nfc.c	/^	u32 intsts_enr;$/;"	m	struct:nand_regs	file:
intsts_reg	nand/arasan_nfc.c	/^	u32 intsts_reg;$/;"	m	struct:nand_regs	file:
invalidate_fastmap	ubi/fastmap.c	/^static int invalidate_fastmap(struct ubi_device *ubi)$/;"	f	file:
io_init	ubi/build.c	/^static int io_init(struct ubi_device *ubi, int max_beb_per1024)$/;"	f	file:
ioread16_rep	nand/nand_base.c	/^static void ioread16_rep(void *addr, void *buf, int len)$/;"	f	file:
ioread8_rep	nand/nand_base.c	/^static void ioread8_rep(void *addr, uint8_t *buf, int len)$/;"	f	file:
iowrite16_rep	nand/nand_base.c	/^static void iowrite16_rep(void *addr, void *buf, int len)$/;"	f	file:
iowrite8_rep	nand/nand_base.c	/^static void iowrite8_rep(void *addr, const uint8_t *buf, int len)$/;"	f	file:
ip_regs	nand/mxc_nand.c	/^	struct mxc_nand_ip_regs __iomem	*ip_regs;$/;"	m	struct:mxc_nand_host	typeref:struct:mxc_nand_host::__iomem	file:
ipc	nand/mxc_nand.h	/^	u32 ipc;$/;"	m	struct:mxc_nand_ip_regs
ipl_load	ubispl/ubispl.c	/^static int ipl_load(struct ubi_scan_info *ubi, const u32 vol_id, uint8_t *laddr)$/;"	f	file:
ipl_scan	ubispl/ubispl.c	/^static void ipl_scan(struct ubi_scan_info *ubi)$/;"	f	file:
irq	nand/denali.h	/^	int irq;$/;"	m	struct:denali_nand_info
irq	nand/mpc5121_nfc.c	/^	int irq;$/;"	m	struct:mpc5121_nfc_prv	file:
irq_debug_array	nand/denali.h	/^	int irq_debug_array[32];$/;"	m	struct:denali_nand_info
irq_mr	nand/lpc32xx_nand_mlc.c	/^	u32 irq_mr;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
irq_sr	nand/lpc32xx_nand_mlc.c	/^	u32 irq_sr;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
irq_status	nand/denali.h	/^	uint32_t irq_status;$/;"	m	struct:denali_nand_info
is_16bit_nand	nand/mxc_nand.c	/^static int is_16bit_nand(void)$/;"	f	file:
is_badblock	nand/mxc_nand_spl.c	/^static int is_badblock(int pagenumber)$/;"	f	file:
is_badblock	nand/mxs_nand_spl.c	/^static int is_badblock(struct mtd_info *mtd, loff_t offs, int allowbbt)$/;"	f	file:
is_blank	nand/fsl_ifc_nand.c	/^static int is_blank(struct mtd_info *mtd, struct fsl_ifc_ctrl *ctrl,$/;"	f	file:
is_blank	nand/fsl_ifc_spl.c	/^static inline int is_blank(uchar *addr, int page_size)$/;"	f	file:
is_buf_blank	nand/pxa3xx_nand.c	/^static inline int is_buf_blank(uint8_t *buf, size_t len)$/;"	f	file:
is_empty	ubi/ubi.h	/^	int is_empty;$/;"	m	struct:ubi_attach_info
is_erased	nand/denali.c	/^static bool is_erased(uint8_t *buf, int len)$/;"	f	file:
is_error_sane	ubi/eba.c	/^static int is_error_sane(int err)$/;"	f	file:
is_flash_bank_valid	nand/denali.c	/^static inline bool is_flash_bank_valid(int flash_bank)$/;"	f	file:
is_full_id_nand	nand/nand_base.c	/^static inline bool is_full_id_nand(struct nand_flash_dev *type)$/;"	f	file:
is_mxc_nfc_1	nand/mxc_nand.h	30;"	d
is_mxc_nfc_1	nand/mxc_nand.h	35;"	d
is_mxc_nfc_1	nand/mxc_nand.h	41;"	d
is_mxc_nfc_21	nand/mxc_nand.h	31;"	d
is_mxc_nfc_21	nand/mxc_nand.h	36;"	d
is_mxc_nfc_21	nand/mxc_nand.h	42;"	d
is_mxc_nfc_3	nand/mxc_nand.h	47;"	d
is_mxc_nfc_32	nand/mxc_nand.h	32;"	d
is_mxc_nfc_32	nand/mxc_nand.h	37;"	d
is_mxc_nfc_32	nand/mxc_nand.h	43;"	d
isr	altera_qspi.c	/^	u32	isr;$/;"	m	struct:altera_qspi_regs	file:
isr	nand/atmel_nand_ecc.h	/^	u32 isr;		\/* 0x28 PMECC Interrupt Status Register *\/$/;"	m	struct:pmecc_regs
isr	nand/lpc32xx_nand_mlc.c	/^	u32 isr;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
isr	nand/lpc32xx_nand_slc.c	/^	u32 isr;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
isr	nand/tegra_nand.h	/^	u32	isr;		\/* offset 08h *\/$/;"	m	struct:nand_ctlr
jedec_flash_match	jedec_flash.c	/^int jedec_flash_match(flash_info_t *info, ulong base)$/;"	f
jedec_id	spi/sf_dataflash.c	/^	uint32_t	jedec_id;$/;"	m	struct:flash_info	file:
jedec_probe	spi/sf_dataflash.c	/^static struct flash_info *jedec_probe(struct spi_slave *spi)$/;"	f	file:
jedec_table	jedec_flash.c	/^static const struct amd_flash_info jedec_table[] = {$/;"	v	typeref:struct:amd_flash_info	file:
kb9202_nand_hwcontrol	nand/kb9202_nand.c	/^static void kb9202_nand_hwcontrol(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
kb9202_nand_ready	nand/kb9202_nand.c	/^static int kb9202_nand_ready(struct mtd_info *mtd)$/;"	f	file:
keep_config	nand/pxa3xx_nand.h	/^	int	keep_config;$/;"	m	struct:pxa3xx_nand_platform_data
key	pic32_flash.c	/^	struct pic32_reg_atomic key;$/;"	m	struct:pic32_reg_nvm	typeref:struct:pic32_reg_nvm::pic32_reg_atomic	file:
key	stm32_flash.h	/^	u32 key;$/;"	m	struct:stm32_flash_regs
kill_volumes	ubi/build.c	/^static void kill_volumes(struct ubi_device *ubi)$/;"	f	file:
kpn_chip_ready	nand/kmeter1_nand.c	/^static int kpn_chip_ready(void)$/;"	f	file:
kpn_nand_dev_ready	nand/kmeter1_nand.c	/^static int kpn_nand_dev_ready(struct mtd_info *mtd)$/;"	f	file:
kpn_nand_hwcontrol	nand/kmeter1_nand.c	/^static void kpn_nand_hwcontrol(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
kpn_nand_read_buf	nand/kmeter1_nand.c	/^static void kpn_nand_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
kpn_nand_read_byte	nand/kmeter1_nand.c	/^static u_char kpn_nand_read_byte(struct mtd_info *mtd)$/;"	f	file:
kpn_nand_write_buf	nand/kmeter1_nand.c	/^static void kpn_nand_write_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
kpn_wait_rdy	nand/kmeter1_nand.c	/^static void kpn_wait_rdy(void)$/;"	f	file:
kstrdup	mtdpart.c	/^char *kstrdup(const char *s, gfp_t gfp)$/;"	f
kstrtoint	ubi/build.c	/^int kstrtoint(const char *s, unsigned int base, int *res)$/;"	f
kw_nand_hwcontrol	nand/kirkwood_nand.c	/^static void kw_nand_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
kw_nand_select_chip	nand/kirkwood_nand.c	/^void kw_nand_select_chip(struct mtd_info *mtd, int chip)$/;"	f
kwnandf_registers	nand/kirkwood_nand.c	/^struct kwnandf_registers {$/;"	s	file:
largepage_memorybased	nand/fsl_elbc_nand.c	/^static struct nand_bbt_descr largepage_memorybased = {$/;"	v	typeref:struct:nand_bbt_descr	file:
largepage_memorybased	onenand/onenand_bbt.c	/^static struct nand_bbt_descr largepage_memorybased = {$/;"	v	typeref:struct:nand_bbt_descr	file:
last_block	ubispl/ubispl.h	/^	u32				last_block;$/;"	m	struct:ubi_vol_info
last_data_size	ubi/ubi.h	/^	int last_data_size;$/;"	m	struct:ubi_ainf_volume
last_eb_bytes	ubi/ubi-media.h	/^	__be32 last_eb_bytes;$/;"	m	struct:ubi_fm_volhdr
last_eb_bytes	ubi/ubi.h	/^	int last_eb_bytes;$/;"	m	struct:ubi_volume
last_eb_bytes	ubi/ubi.h	/^	u32 last_eb_bytes;$/;"	m	struct:ubi_volume
late_analysis	ubi/attach.c	/^static int late_analysis(struct ubi_device *ubi, struct ubi_attach_info *ai)$/;"	f	file:
launch	nand/mxc_nand.h	/^	u32 launch;$/;"	m	struct:mxc_nand_regs
layout	nand/sunxi_nand.c	/^	struct nand_ecclayout layout;$/;"	m	struct:sunxi_nand_hw_ecc	typeref:struct:sunxi_nand_hw_ecc::nand_ecclayout	file:
leb_count	ubi/ubi.h	/^	int leb_count;$/;"	m	struct:ubi_ainf_volume
leb_read_lock	ubi/eba.c	/^static int leb_read_lock(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f	file:
leb_read_sanity_check	ubi/kapi.c	/^static int leb_read_sanity_check(struct ubi_volume_desc *desc, int lnum,$/;"	f	file:
leb_read_unlock	ubi/eba.c	/^static void leb_read_unlock(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f	file:
leb_size	ubi/ubi.h	/^	int leb_size;$/;"	m	struct:ubi_device
leb_size	ubispl/ubispl.h	/^	unsigned long			leb_size;$/;"	m	struct:ubi_scan_info
leb_start	ubi/ubi.h	/^	int leb_start;$/;"	m	struct:ubi_device
leb_start	ubispl/ubispl.h	/^	unsigned long			leb_start;$/;"	m	struct:ubi_scan_info
leb_write_lock	ubi/eba.c	/^static int leb_write_lock(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f	file:
leb_write_trylock	ubi/eba.c	/^static int leb_write_trylock(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f	file:
leb_write_unlock	ubi/eba.c	/^static void leb_write_unlock(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f	file:
lebs_to_pebs	ubispl/ubispl.h	/^	u32				lebs_to_pebs[UBI_MAX_VOL_LEBS];$/;"	m	struct:ubi_vol_info
list	mtdpart.c	/^	struct list_head list;$/;"	m	struct:mtd_part	typeref:struct:mtd_part::list_head	file:
list	ubi/ubi.h	/^		struct list_head list;$/;"	m	union:ubi_ainf_peb::__anon6	typeref:struct:ubi_ainf_peb::__anon6::list_head
list	ubi/ubi.h	/^		struct list_head list;$/;"	m	union:ubi_wl_entry::__anon5	typeref:struct:ubi_wl_entry::__anon5::list_head
list	ubi/ubi.h	/^	struct list_head list;$/;"	m	struct:ubi_rename_entry	typeref:struct:ubi_rename_entry::list_head
list	ubi/ubi.h	/^	struct list_head list;$/;"	m	struct:ubi_work	typeref:struct:ubi_work::list_head
lnum	ubi/ubi-media.h	/^	__be32  lnum;$/;"	m	struct:ubi_vid_hdr
lnum	ubi/ubi.h	/^	int lnum;$/;"	m	struct:ubi_ainf_peb
lnum	ubi/ubi.h	/^	int lnum;$/;"	m	struct:ubi_ltree_entry
lnum	ubi/ubi.h	/^	int lnum;$/;"	m	struct:ubi_work
lock_pr	nand/lpc32xx_nand_mlc.c	/^	u32 lock_pr;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
lookuptbl	ubi/ubi.h	/^	struct ubi_wl_entry **lookuptbl;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_wl_entry
lpc32xx_chip	nand/lpc32xx_nand_mlc.c	/^static struct nand_chip lpc32xx_chip;$/;"	v	typeref:struct:nand_chip	file:
lpc32xx_cmd_ctrl	nand/lpc32xx_nand_mlc.c	/^static void lpc32xx_cmd_ctrl(struct mtd_info *mtd, int cmd,$/;"	f	file:
lpc32xx_correct_data	nand/lpc32xx_nand_slc.c	/^int lpc32xx_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f
lpc32xx_dev_ready	nand/lpc32xx_nand_mlc.c	/^static int lpc32xx_dev_ready(struct mtd_info *mtd)$/;"	f	file:
lpc32xx_dma_read_buf	nand/lpc32xx_nand_slc.c	/^static void lpc32xx_dma_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
lpc32xx_dma_write_buf	nand/lpc32xx_nand_slc.c	/^static void lpc32xx_dma_write_buf(struct mtd_info *mtd, const uint8_t *buf,$/;"	f	file:
lpc32xx_dmac_next_lli	nand/lpc32xx_nand_slc.c	110;"	d	file:
lpc32xx_dmac_set_dma_data	nand/lpc32xx_nand_slc.c	111;"	d	file:
lpc32xx_dmac_set_ecc	nand/lpc32xx_nand_slc.c	112;"	d	file:
lpc32xx_ecc_calculate	nand/lpc32xx_nand_slc.c	/^static int lpc32xx_ecc_calculate(struct mtd_info *mtd, const uint8_t *dat,$/;"	f	file:
lpc32xx_hwecc_enable	nand/lpc32xx_nand_slc.c	/^static void lpc32xx_hwecc_enable(struct mtd_info *mtd, int mode)$/;"	f	file:
lpc32xx_largepage_ecclayout	nand/lpc32xx_nand_mlc.c	/^static struct nand_ecclayout lpc32xx_largepage_ecclayout = {$/;"	v	typeref:struct:nand_ecclayout	file:
lpc32xx_nand_cmd_ctrl	nand/lpc32xx_nand_slc.c	/^static void lpc32xx_nand_cmd_ctrl(struct mtd_info *mtd,$/;"	f	file:
lpc32xx_nand_dev_ready	nand/lpc32xx_nand_slc.c	/^static int lpc32xx_nand_dev_ready(struct mtd_info *mtd)$/;"	f	file:
lpc32xx_nand_dma_configure	nand/lpc32xx_nand_slc.c	/^static void lpc32xx_nand_dma_configure(struct nand_chip *chip,$/;"	f	file:
lpc32xx_nand_init	nand/lpc32xx_nand_mlc.c	/^static void lpc32xx_nand_init(void)$/;"	f	file:
lpc32xx_nand_init	nand/lpc32xx_nand_slc.c	/^static void lpc32xx_nand_init(void)$/;"	f	file:
lpc32xx_nand_mlc_registers	nand/lpc32xx_nand_mlc.c	/^static struct lpc32xx_nand_mlc_registers __iomem *lpc32xx_nand_mlc_registers$/;"	v	typeref:struct:__iomem	file:
lpc32xx_nand_mlc_registers	nand/lpc32xx_nand_mlc.c	/^struct lpc32xx_nand_mlc_registers {$/;"	s	file:
lpc32xx_nand_oob_16	nand/lpc32xx_nand_slc.c	/^static struct nand_ecclayout lpc32xx_nand_oob_16 = {$/;"	v	typeref:struct:nand_ecclayout	file:
lpc32xx_nand_slc_regs	nand/lpc32xx_nand_slc.c	/^static struct lpc32xx_nand_slc_regs __iomem *lpc32xx_nand_slc_regs$/;"	v	typeref:struct:__iomem	file:
lpc32xx_nand_slc_regs	nand/lpc32xx_nand_slc.c	/^struct lpc32xx_nand_slc_regs {$/;"	s	file:
lpc32xx_nand_xfer	nand/lpc32xx_nand_slc.c	/^static void lpc32xx_nand_xfer(struct mtd_info *mtd, const u8 *buf,$/;"	f	file:
lpc32xx_oob	nand/lpc32xx_nand_mlc.c	/^struct lpc32xx_oob {$/;"	s	file:
lpc32xx_read_buf	nand/lpc32xx_nand_slc.c	/^static void lpc32xx_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
lpc32xx_read_byte	nand/lpc32xx_nand_mlc.c	/^static uint8_t lpc32xx_read_byte(struct mtd_info *mtd)$/;"	f	file:
lpc32xx_read_byte	nand/lpc32xx_nand_slc.c	/^static uint8_t lpc32xx_read_byte(struct mtd_info *mtd)$/;"	f	file:
lpc32xx_read_oob	nand/lpc32xx_nand_mlc.c	/^static int lpc32xx_read_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
lpc32xx_read_page_hwecc	nand/lpc32xx_nand_mlc.c	/^static int lpc32xx_read_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
lpc32xx_read_page_hwecc	nand/lpc32xx_nand_slc.c	/^static int lpc32xx_read_page_hwecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
lpc32xx_read_page_raw	nand/lpc32xx_nand_mlc.c	/^static int lpc32xx_read_page_raw(struct mtd_info *mtd,$/;"	f	file:
lpc32xx_waitfunc	nand/lpc32xx_nand_mlc.c	/^static int lpc32xx_waitfunc(struct mtd_info *mtd, struct nand_chip *chip)$/;"	f	file:
lpc32xx_write_buf	nand/lpc32xx_nand_slc.c	/^static void lpc32xx_write_buf(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f	file:
lpc32xx_write_byte	nand/lpc32xx_nand_slc.c	/^static void lpc32xx_write_byte(struct mtd_info *mtd, uint8_t byte)$/;"	f	file:
lpc32xx_write_oob	nand/lpc32xx_nand_mlc.c	/^static int lpc32xx_write_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
lpc32xx_write_page_hwecc	nand/lpc32xx_nand_mlc.c	/^static int lpc32xx_write_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
lpc32xx_write_page_hwecc	nand/lpc32xx_nand_slc.c	/^static int lpc32xx_write_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
lpc32xx_write_page_raw	nand/lpc32xx_nand_mlc.c	/^static int lpc32xx_write_page_raw(struct mtd_info *mtd,$/;"	f	file:
ltree	ubi/ubi.h	/^	struct rb_root ltree;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rb_root
ltree_add_entry	ubi/eba.c	/^static struct ubi_ltree_entry *ltree_add_entry(struct ubi_device *ubi,$/;"	f	file:
ltree_lock	ubi/ubi.h	/^	spinlock_t ltree_lock;$/;"	m	struct:ubi_device
ltree_lookup	ubi/eba.c	/^static struct ubi_ltree_entry *ltree_lookup(struct ubi_device *ubi, int vol_id,$/;"	f	file:
macronix_quad_enable	spi/spi_flash.c	/^static int macronix_quad_enable(struct spi_flash *flash)$/;"	f	file:
magic	ubi/ubi-media.h	/^	__be32  magic;$/;"	m	struct:ubi_ec_hdr
magic	ubi/ubi-media.h	/^	__be32  magic;$/;"	m	struct:ubi_vid_hdr
magic	ubi/ubi-media.h	/^	__be32 magic;$/;"	m	struct:ubi_fm_eba
magic	ubi/ubi-media.h	/^	__be32 magic;$/;"	m	struct:ubi_fm_hdr
magic	ubi/ubi-media.h	/^	__be32 magic;$/;"	m	struct:ubi_fm_sb
magic	ubi/ubi-media.h	/^	__be32 magic;$/;"	m	struct:ubi_fm_scan_pool
magic	ubi/ubi-media.h	/^	__be32 magic;$/;"	m	struct:ubi_fm_volhdr
main	ubi/crc32.c	/^int main(void)$/;"	f
main_area	nand/mxc_nand.h	/^	u8 main_area[NAND_MXC_NR_BUFS][0x200];$/;"	m	struct:mxc_nand_regs
manufact_match	cfi_flash.c	/^static inline int manufact_match(flash_info_t *info, u32 manu)$/;"	f	file:
mark_bbt_region	nand/nand_bbt.c	/^static void mark_bbt_region(struct mtd_info *mtd, struct nand_bbt_descr *td)$/;"	f	file:
marking_block_bad	nand/mxs_nand.c	/^	uint8_t		marking_block_bad;$/;"	m	struct:mxs_nand_info	file:
master	mtdpart.c	/^	struct mtd_info *master;$/;"	m	struct:mtd_part	typeref:struct:mtd_part::mtd_info	file:
max_banks	nand/denali.h	/^	uint32_t max_banks;$/;"	m	struct:denali_nand_info
max_beb_per1024	ubi/build.c	/^	int max_beb_per1024;$/;"	m	struct:mtd_dev_param	file:
max_bitflips	nand/pxa3xx_nand.c	/^	unsigned int		max_bitflips;$/;"	m	struct:pxa3xx_nand_info	file:
max_ec	ubi/ubi.h	/^	int max_ec;$/;"	m	struct:ubi_attach_info
max_ec	ubi/ubi.h	/^	int max_ec;$/;"	m	struct:ubi_device
max_erroneous	ubi/ubi.h	/^	int max_erroneous;$/;"	m	struct:ubi_device
max_pool_size	ubi/ubi.h	/^	int max_pool_size;$/;"	m	struct:ubi_fastmap_layout
max_pool_size	ubispl/ubi-wrapper.h	/^	int max_pool_size;$/;"	m	struct:ubi_fastmap_layout
max_size	ubi/ubi-media.h	/^	__be16 max_size;$/;"	m	struct:ubi_fm_scan_pool
max_size	ubi/ubi.h	/^	int max_size;$/;"	m	struct:ubi_fm_pool
max_size	ubispl/ubi-wrapper.h	/^	int max_size;$/;"	m	struct:ubi_fm_pool
max_sqnum	ubi/ubi.h	/^	unsigned long long max_sqnum;$/;"	m	struct:ubi_attach_info
max_wl_pool_size	ubi/ubi.h	/^	int max_wl_pool_size;$/;"	m	struct:ubi_fastmap_layout
max_wl_pool_size	ubispl/ubi-wrapper.h	/^	int max_wl_pool_size;$/;"	m	struct:ubi_fastmap_layout
max_write_size	ubi/ubi.h	/^	int max_write_size;$/;"	m	struct:ubi_device
may_reserve_for_fm	ubi/fastmap-wl.c	/^static struct ubi_wl_entry *may_reserve_for_fm(struct ubi_device *ubi,$/;"	f	file:
may_reserve_for_fm	ubi/wl.h	/^static struct ubi_wl_entry *may_reserve_for_fm(struct ubi_device *ubi,$/;"	f
maybe_bad_peb_count	ubi/ubi.h	/^	int maybe_bad_peb_count;$/;"	m	struct:ubi_attach_info
mdr	nand/fsl_elbc_nand.c	/^	unsigned int mdr;        \/* UPM\/FCM Data Register value           *\/$/;"	m	struct:fsl_elbc_ctrl	file:
mean_ec	ubi/ubi.h	/^	int mean_ec;$/;"	m	struct:ubi_attach_info
mean_ec	ubi/ubi.h	/^	int mean_ec;$/;"	m	struct:ubi_device
mem_addr	onenand/samsung.c	/^	unsigned int	(*mem_addr)(int fba, int fpa, int fsa);$/;"	m	struct:s3c_onenand	file:
mem_op	altera_qspi.c	/^	u32	mem_op;$/;"	m	struct:altera_qspi_regs	file:
memadr_reg1	nand/arasan_nfc.c	/^	u32 memadr_reg1;$/;"	m	struct:nand_regs	file:
memadr_reg2	nand/arasan_nfc.c	/^	u32 memadr_reg2;$/;"	m	struct:nand_regs	file:
memcpy_16	onenand/onenand_base.c	/^static void *memcpy_16(void *dst, const void *src, unsigned int len)$/;"	f	file:
metaonly	ubi/ubi.h	/^	int metaonly;$/;"	m	struct:ubi_volume
mfr_id	jedec_flash.c	/^	const __u16 mfr_id;$/;"	m	struct:amd_flash_info	file:
min_ec	ubi/ubi.h	/^	int min_ec;$/;"	m	struct:ubi_attach_info
min_io_size	ubi/ubi.h	/^	int min_io_size;$/;"	m	struct:ubi_device
mirror_pattern	nand/fsl_elbc_nand.c	/^static u8 mirror_pattern[] = {'1', 't', 'b', 'B' };$/;"	v	file:
mirror_pattern	nand/fsl_ifc_nand.c	/^static u8 mirror_pattern[] = {'1', 't', 'b', 'B' };$/;"	v	file:
mirror_pattern	nand/mxc_nand.c	/^static u8 mirror_pattern[] = {'1', 't', 'b', 'B' };$/;"	v	file:
mirror_pattern	nand/nand_bbt.c	/^static uint8_t mirror_pattern[] = {'1', 't', 'b', 'B' };$/;"	v	file:
mirror_pattern	nand/zynq_nand.c	/^static u8 mirror_pattern[] = {'1', 't', 'b', 'B' };$/;"	v	file:
mmio_base	nand/pxa3xx_nand.c	/^	void __iomem		*mmio_base;$/;"	m	struct:pxa3xx_nand_info	file:
mmio_phys	nand/pxa3xx_nand.c	/^	unsigned long		mmio_phys;$/;"	m	struct:pxa3xx_nand_info	file:
mod_clk	nand/sunxi_nand.c	/^	struct clk *mod_clk;$/;"	m	struct:sunxi_nfc	typeref:struct:sunxi_nfc::clk	file:
mode	nand/sunxi_nand.c	/^	int mode;$/;"	m	struct:sunxi_nand_hw_ecc	file:
mode	ubi/ubi.h	/^	int mode;$/;"	m	struct:ubi_volume_desc
move_from	ubi/ubi.h	/^	struct ubi_wl_entry *move_from;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_wl_entry
move_mutex	ubi/ubi.h	/^	struct mutex move_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
move_to	ubi/ubi.h	/^	struct ubi_wl_entry *move_to;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_wl_entry
move_to_put	ubi/ubi.h	/^	int move_to_put;$/;"	m	struct:ubi_device
mpc5121_nfc_addr_cycle	nand/mpc5121_nfc.c	/^static void mpc5121_nfc_addr_cycle(struct mtd_info *mtd, int column, int page)$/;"	f	file:
mpc5121_nfc_buf_copy	nand/mpc5121_nfc.c	/^static void mpc5121_nfc_buf_copy(struct mtd_info *mtd, u_char * buf, int len,$/;"	f	file:
mpc5121_nfc_chip	nand/mpc5121_nfc.c	/^int mpc5121_nfc_chip = 0;$/;"	v
mpc5121_nfc_command	nand/mpc5121_nfc.c	/^static void mpc5121_nfc_command(struct mtd_info *mtd, unsigned command,$/;"	f	file:
mpc5121_nfc_copy_spare	nand/mpc5121_nfc.c	/^static void mpc5121_nfc_copy_spare(struct mtd_info *mtd, uint offset,$/;"	f	file:
mpc5121_nfc_dev_ready	nand/mpc5121_nfc.c	/^static int mpc5121_nfc_dev_ready(struct mtd_info *mtd)$/;"	f	file:
mpc5121_nfc_done	nand/mpc5121_nfc.c	/^static void mpc5121_nfc_done(struct mtd_info *mtd)$/;"	f	file:
mpc5121_nfc_prv	nand/mpc5121_nfc.c	/^struct mpc5121_nfc_prv {$/;"	s	file:
mpc5121_nfc_read_buf	nand/mpc5121_nfc.c	/^static void mpc5121_nfc_read_buf(struct mtd_info *mtd, u_char * buf, int len)$/;"	f	file:
mpc5121_nfc_read_byte	nand/mpc5121_nfc.c	/^static u8 mpc5121_nfc_read_byte(struct mtd_info *mtd)$/;"	f	file:
mpc5121_nfc_read_hw_config	nand/mpc5121_nfc.c	/^static int mpc5121_nfc_read_hw_config(struct mtd_info *mtd)$/;"	f	file:
mpc5121_nfc_read_word	nand/mpc5121_nfc.c	/^static u16 mpc5121_nfc_read_word(struct mtd_info *mtd)$/;"	f	file:
mpc5121_nfc_send_addr	nand/mpc5121_nfc.c	/^static inline void mpc5121_nfc_send_addr(struct mtd_info *mtd, u16 addr)$/;"	f	file:
mpc5121_nfc_send_cmd	nand/mpc5121_nfc.c	/^static inline void mpc5121_nfc_send_cmd(struct mtd_info *mtd, u16 cmd)$/;"	f	file:
mpc5121_nfc_send_prog_page	nand/mpc5121_nfc.c	/^static inline void mpc5121_nfc_send_prog_page(struct mtd_info *mtd)$/;"	f	file:
mpc5121_nfc_send_read_id	nand/mpc5121_nfc.c	/^static inline void mpc5121_nfc_send_read_id(struct mtd_info *mtd)$/;"	f	file:
mpc5121_nfc_send_read_page	nand/mpc5121_nfc.c	/^static inline void mpc5121_nfc_send_read_page(struct mtd_info *mtd)$/;"	f	file:
mpc5121_nfc_send_read_status	nand/mpc5121_nfc.c	/^static inline void mpc5121_nfc_send_read_status(struct mtd_info *mtd)$/;"	f	file:
mpc5121_nfc_write_buf	nand/mpc5121_nfc.c	/^static void mpc5121_nfc_write_buf(struct mtd_info *mtd,$/;"	f	file:
mtd	mtd-uclass.c	/^UCLASS_DRIVER(mtd) = {$/;"	v
mtd	mtdconcat.c	/^	struct mtd_info mtd;$/;"	m	struct:mtd_concat	typeref:struct:mtd_concat::mtd_info	file:
mtd	mtdcore.c	/^ATTRIBUTE_GROUPS(mtd);$/;"	v
mtd	mtdpart.c	/^	struct mtd_info mtd;$/;"	m	struct:mtd_part	typeref:struct:mtd_part::mtd_info	file:
mtd	nand/am335x_spl_bch.c	/^static struct mtd_info *mtd;$/;"	v	typeref:struct:mtd_info	file:
mtd	nand/atmel_nand.c	/^static struct mtd_info *mtd;$/;"	v	typeref:struct:mtd_info	file:
mtd	nand/mxs_nand_spl.c	/^static struct mtd_info *mtd;$/;"	v	typeref:struct:mtd_info	file:
mtd	nand/nand_spl_simple.c	/^static struct mtd_info *mtd;$/;"	v	typeref:struct:mtd_info	file:
mtd	nand/pxa3xx_nand.c	/^	struct mtd_info         *mtd;$/;"	m	struct:pxa3xx_nand_host	typeref:struct:pxa3xx_nand_host::mtd_info	file:
mtd	onenand/samsung.c	/^	struct mtd_info	*mtd;$/;"	m	struct:s3c_onenand	typeref:struct:s3c_onenand::mtd_info	file:
mtd	ubi/ubi.h	/^	struct mtd_info *mtd;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mtd_info
mtd_add_partition	mtdpart.c	/^EXPORT_SYMBOL_GPL(mtd_add_partition);$/;"	v
mtd_add_partition	mtdpart.c	/^int mtd_add_partition(struct mtd_info *master, const char *name,$/;"	f
mtd_arg_off	mtd_uboot.c	/^int mtd_arg_off(const char *arg, int *idx, loff_t *off, loff_t *size,$/;"	f
mtd_arg_off_size	mtd_uboot.c	/^int mtd_arg_off_size(int argc, char *const argv[], int *idx, loff_t *off,$/;"	f
mtd_attrs	mtdcore.c	/^static struct attribute *mtd_attrs[] = {$/;"	v	typeref:struct:attribute	file:
mtd_bdi_init	mtdcore.c	/^static int __init mtd_bdi_init(struct backing_dev_info *bdi, const char *name)$/;"	f	file:
mtd_bdi_ro_mappable	mtdcore.c	/^static struct backing_dev_info mtd_bdi_ro_mappable = {$/;"	v	typeref:struct:backing_dev_info	file:
mtd_bdi_rw_mappable	mtdcore.c	/^static struct backing_dev_info mtd_bdi_rw_mappable = {$/;"	v	typeref:struct:backing_dev_info	file:
mtd_bdi_unmappable	mtdcore.c	/^static struct backing_dev_info mtd_bdi_unmappable = {$/;"	v	typeref:struct:backing_dev_info	file:
mtd_bitflip_threshold_show	mtdcore.c	/^static ssize_t mtd_bitflip_threshold_show(struct device *dev,$/;"	f	file:
mtd_bitflip_threshold_store	mtdcore.c	/^static ssize_t mtd_bitflip_threshold_store(struct device *dev,$/;"	f	file:
mtd_block_isbad	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_block_isbad);$/;"	v
mtd_block_isbad	mtdcore.c	/^int mtd_block_isbad(struct mtd_info *mtd, loff_t ofs)$/;"	f
mtd_block_isreserved	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_block_isreserved);$/;"	v
mtd_block_isreserved	mtdcore.c	/^int mtd_block_isreserved(struct mtd_info *mtd, loff_t ofs)$/;"	f
mtd_block_markbad	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_block_markbad);$/;"	v
mtd_block_markbad	mtdcore.c	/^int mtd_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f
mtd_class	mtdcore.c	/^static struct class mtd_class = {$/;"	v	typeref:struct:class	file:
mtd_cls_resume	mtdcore.c	/^static int mtd_cls_resume(struct device *dev)$/;"	f	file:
mtd_cls_suspend	mtdcore.c	/^static int mtd_cls_suspend(struct device *dev, pm_message_t state)$/;"	f	file:
mtd_concat	mtdconcat.c	/^struct mtd_concat {$/;"	s	file:
mtd_concat_create	mtdconcat.c	/^EXPORT_SYMBOL(mtd_concat_create);$/;"	v
mtd_concat_create	mtdconcat.c	/^struct mtd_info *mtd_concat_create(struct mtd_info *subdev[],	\/* subdevices to concatenate *\/$/;"	f
mtd_concat_destroy	mtdconcat.c	/^EXPORT_SYMBOL(mtd_concat_destroy);$/;"	v
mtd_concat_destroy	mtdconcat.c	/^void mtd_concat_destroy(struct mtd_info *mtd)$/;"	f
mtd_del_partition	mtdpart.c	/^EXPORT_SYMBOL_GPL(mtd_del_partition);$/;"	v
mtd_del_partition	mtdpart.c	/^int mtd_del_partition(struct mtd_info *master, int partno)$/;"	f
mtd_dev_param	ubi/build.c	/^static struct mtd_dev_param __initdata mtd_dev_param[UBI_MAX_DEVICES];$/;"	v	typeref:struct:__initdata	file:
mtd_dev_param	ubi/build.c	/^struct mtd_dev_param {$/;"	s	file:
mtd_device_parse_register	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_device_parse_register);$/;"	v
mtd_device_parse_register	mtdcore.c	/^int mtd_device_parse_register(struct mtd_info *mtd, const char * const *types,$/;"	f
mtd_device_unregister	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_device_unregister);$/;"	v
mtd_device_unregister	mtdcore.c	/^int mtd_device_unregister(struct mtd_info *master)$/;"	f
mtd_devs	ubi/build.c	/^static int __initdata mtd_devs;$/;"	v	file:
mtd_devtype	mtdcore.c	/^static struct device_type mtd_devtype = {$/;"	v	typeref:struct:device_type	file:
mtd_ecc_step_size_show	mtdcore.c	/^static ssize_t mtd_ecc_step_size_show(struct device *dev,$/;"	f	file:
mtd_ecc_strength_show	mtdcore.c	/^static ssize_t mtd_ecc_strength_show(struct device *dev,$/;"	f	file:
mtd_erase	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_erase);$/;"	v
mtd_erase	mtdcore.c	/^int mtd_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f
mtd_erase_callback	mtdpart.c	/^EXPORT_SYMBOL_GPL(mtd_erase_callback);$/;"	v
mtd_erase_callback	mtdpart.c	/^void mtd_erase_callback(struct erase_info *instr)$/;"	f
mtd_erasesize_show	mtdcore.c	/^static ssize_t mtd_erasesize_show(struct device *dev,$/;"	f	file:
mtd_flags_show	mtdcore.c	/^static ssize_t mtd_flags_show(struct device *dev,$/;"	f	file:
mtd_for_each_device	mtdcore.h	20;"	d
mtd_get_device_size	mtdpart.c	/^EXPORT_SYMBOL_GPL(mtd_get_device_size);$/;"	v
mtd_get_device_size	mtdpart.c	/^uint64_t mtd_get_device_size(const struct mtd_info *mtd)$/;"	f
mtd_get_fact_prot_info	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_get_fact_prot_info);$/;"	v
mtd_get_fact_prot_info	mtdcore.c	/^int mtd_get_fact_prot_info(struct mtd_info *mtd, size_t len, size_t *retlen,$/;"	f
mtd_get_len_incl_bad	mtdcore.c	/^void mtd_get_len_incl_bad(struct mtd_info *mtd, uint64_t offset,$/;"	f
mtd_get_unmapped_area	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_get_unmapped_area);$/;"	v
mtd_get_unmapped_area	mtdcore.c	/^unsigned long mtd_get_unmapped_area(struct mtd_info *mtd, unsigned long len,$/;"	f
mtd_get_user_prot_info	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_get_user_prot_info);$/;"	v
mtd_get_user_prot_info	mtdcore.c	/^int mtd_get_user_prot_info(struct mtd_info *mtd, size_t len, size_t *retlen,$/;"	f
mtd_info_t	nand/nand_util.c	/^typedef struct mtd_info		mtd_info_t;$/;"	t	typeref:struct:mtd_info	file:
mtd_is_locked	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_is_locked);$/;"	v
mtd_is_locked	mtdcore.c	/^int mtd_is_locked(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f
mtd_is_partition	mtdpart.c	/^EXPORT_SYMBOL_GPL(mtd_is_partition);$/;"	v
mtd_is_partition	mtdpart.c	/^int mtd_is_partition(const struct mtd_info *mtd)$/;"	f
mtd_kmalloc_up_to	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_kmalloc_up_to);$/;"	v
mtd_kmalloc_up_to	mtdcore.c	/^void *mtd_kmalloc_up_to(const struct mtd_info *mtd, size_t *size)$/;"	f
mtd_lock	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_lock);$/;"	v
mtd_lock	mtdcore.c	/^int mtd_lock(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f
mtd_lock_user_prot_reg	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_lock_user_prot_reg);$/;"	v
mtd_lock_user_prot_reg	mtdcore.c	/^int mtd_lock_user_prot_reg(struct mtd_info *mtd, loff_t from, size_t len)$/;"	f
mtd_name_show	mtdcore.c	/^static ssize_t mtd_name_show(struct device *dev,$/;"	f	file:
mtd_numeraseregions_show	mtdcore.c	/^static ssize_t mtd_numeraseregions_show(struct device *dev,$/;"	f	file:
mtd_oobsize_show	mtdcore.c	/^static ssize_t mtd_oobsize_show(struct device *dev,$/;"	f	file:
mtd_panic_write	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_panic_write);$/;"	v
mtd_panic_write	mtdcore.c	/^int mtd_panic_write(struct mtd_info *mtd, loff_t to, size_t len, size_t *retlen,$/;"	f
mtd_part	mtdpart.c	/^struct mtd_part {$/;"	s	file:
mtd_partitions_mutex	mtdpart.c	/^DEFINE_MUTEX(mtd_partitions_mutex);$/;"	v
mtd_point	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_point);$/;"	v
mtd_point	mtdcore.c	/^int mtd_point(struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen,$/;"	f
mtd_proc_open	mtdcore.c	/^static int mtd_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
mtd_proc_ops	mtdcore.c	/^static const struct file_operations mtd_proc_ops = {$/;"	v	typeref:struct:file_operations	file:
mtd_proc_show	mtdcore.c	/^static int mtd_proc_show(struct seq_file *m, void *v)$/;"	f	file:
mtd_read	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_read);$/;"	v
mtd_read	mtdcore.c	/^int mtd_read(struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen,$/;"	f
mtd_read_fact_prot_reg	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_read_fact_prot_reg);$/;"	v
mtd_read_fact_prot_reg	mtdcore.c	/^int mtd_read_fact_prot_reg(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f
mtd_read_oob	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_read_oob);$/;"	v
mtd_read_oob	mtdcore.c	/^int mtd_read_oob(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops)$/;"	f
mtd_read_user_prot_reg	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_read_user_prot_reg);$/;"	v
mtd_read_user_prot_reg	mtdcore.c	/^int mtd_read_user_prot_reg(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f
mtd_release	mtdcore.c	/^static void mtd_release(struct device *dev)$/;"	f	file:
mtd_size_show	mtdcore.c	/^static ssize_t mtd_size_show(struct device *dev,$/;"	f	file:
mtd_subpagesize_show	mtdcore.c	/^static ssize_t mtd_subpagesize_show(struct device *dev,$/;"	f	file:
mtd_table	mtdcore.c	/^struct mtd_info *mtd_table[MAX_MTD_DEVICES];$/;"	v	typeref:struct:mtd_info
mtd_table_mutex	mtdcore.c	/^DEFINE_MUTEX(mtd_table_mutex);$/;"	v
mtd_table_mutex	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_table_mutex);$/;"	v
mtd_to_denali	nand/denali.c	/^static inline struct denali_nand_info *mtd_to_denali(struct mtd_info *mtd)$/;"	f	file:
mtd_to_nfc	nand/vf610_nfc.c	157;"	d	file:
mtd_type_show	mtdcore.c	/^static ssize_t mtd_type_show(struct device *dev,$/;"	f	file:
mtd_unlock	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_unlock);$/;"	v
mtd_unlock	mtdcore.c	/^int mtd_unlock(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f
mtd_unpoint	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_unpoint);$/;"	v
mtd_unpoint	mtdcore.c	/^int mtd_unpoint(struct mtd_info *mtd, loff_t from, size_t len)$/;"	f
mtd_write	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_write);$/;"	v
mtd_write	mtdcore.c	/^int mtd_write(struct mtd_info *mtd, loff_t to, size_t len, size_t *retlen,$/;"	f
mtd_write_user_prot_reg	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_write_user_prot_reg);$/;"	v
mtd_write_user_prot_reg	mtdcore.c	/^int mtd_write_user_prot_reg(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f
mtd_writesize_show	mtdcore.c	/^static ssize_t mtd_writesize_show(struct device *dev,$/;"	f	file:
mtd_writev	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_writev);$/;"	v
mtd_writev	mtdcore.c	/^int mtd_writev(struct mtd_info *mtd, const struct kvec *vecs,$/;"	f
mutex	ubi/ubi.h	/^	struct rw_semaphore mutex;$/;"	m	struct:ubi_ltree_entry	typeref:struct:ubi_ltree_entry::rw_semaphore
mw_eeprom_erase_disable	mw_eeprom.c	/^int mw_eeprom_erase_disable(int dev)$/;"	f
mw_eeprom_erase_enable	mw_eeprom.c	/^int mw_eeprom_erase_enable(int dev)$/;"	f
mw_eeprom_probe	mw_eeprom.c	/^int mw_eeprom_probe(int dev)$/;"	f
mw_eeprom_read	mw_eeprom.c	/^int mw_eeprom_read(int dev, int addr, u8 *buffer, int len)$/;"	f
mw_eeprom_read_word	mw_eeprom.c	/^u32 mw_eeprom_read_word(int dev, int addr)$/;"	f
mw_eeprom_select	mw_eeprom.c	/^static void mw_eeprom_select(int dev)$/;"	f	file:
mw_eeprom_size	mw_eeprom.c	/^static int mw_eeprom_size(int dev)$/;"	f	file:
mw_eeprom_write	mw_eeprom.c	/^int mw_eeprom_write(int dev, int addr, u8 *buffer, int len)$/;"	f
mw_eeprom_write_word	mw_eeprom.c	/^int mw_eeprom_write_word(int dev, int addr, u16 data)$/;"	f
mxc_host	nand/mxc_nand.c	/^static struct mxc_nand_host mxc_host;$/;"	v	typeref:struct:mxc_nand_host	file:
mxc_nand_calculate_ecc	nand/mxc_nand.c	/^static int mxc_nand_calculate_ecc(struct mtd_info *mtd, const u_char *dat,$/;"	f	file:
mxc_nand_command	nand/mxc_nand.c	/^void mxc_nand_command(struct mtd_info *mtd, unsigned command,$/;"	f
mxc_nand_correct_data	nand/mxc_nand.c	/^static int mxc_nand_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
mxc_nand_dev_ready	nand/mxc_nand.c	/^static int mxc_nand_dev_ready(struct mtd_info *mtd)$/;"	f	file:
mxc_nand_enable_hwecc	nand/mxc_nand.c	/^static void mxc_nand_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
mxc_nand_host	nand/mxc_nand.c	/^struct mxc_nand_host {$/;"	s	file:
mxc_nand_ip_regs	nand/mxc_nand.h	/^struct mxc_nand_ip_regs {$/;"	s
mxc_nand_memcpy32	nand/mxc_nand.c	/^static uint32_t *mxc_nand_memcpy32(uint32_t *dest, uint32_t *source, size_t size)$/;"	f	file:
mxc_nand_read_buf	nand/mxc_nand.c	/^static void mxc_nand_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
mxc_nand_read_byte	nand/mxc_nand.c	/^static u_char mxc_nand_read_byte(struct mtd_info *mtd)$/;"	f	file:
mxc_nand_read_oob_syndrome	nand/mxc_nand.c	/^static int mxc_nand_read_oob_syndrome(struct mtd_info *mtd,$/;"	f	file:
mxc_nand_read_oob_syndrome	nand/mxc_nand.c	694;"	d	file:
mxc_nand_read_page_raw_syndrome	nand/mxc_nand.c	/^static int mxc_nand_read_page_raw_syndrome(struct mtd_info *mtd,$/;"	f	file:
mxc_nand_read_page_raw_syndrome	nand/mxc_nand.c	693;"	d	file:
mxc_nand_read_page_syndrome	nand/mxc_nand.c	/^static int mxc_nand_read_page_syndrome(struct mtd_info *mtd,$/;"	f	file:
mxc_nand_read_page_syndrome	nand/mxc_nand.c	692;"	d	file:
mxc_nand_read_word	nand/mxc_nand.c	/^static uint16_t mxc_nand_read_word(struct mtd_info *mtd)$/;"	f	file:
mxc_nand_regs	nand/mxc_nand.h	/^struct mxc_nand_regs {$/;"	s
mxc_nand_select_chip	nand/mxc_nand.c	/^static void mxc_nand_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
mxc_nand_write_buf	nand/mxc_nand.c	/^static void mxc_nand_write_buf(struct mtd_info *mtd,$/;"	f	file:
mxc_nand_write_oob_syndrome	nand/mxc_nand.c	/^static int mxc_nand_write_oob_syndrome(struct mtd_info *mtd,$/;"	f	file:
mxc_nand_write_oob_syndrome	nand/mxc_nand.c	697;"	d	file:
mxc_nand_write_page_raw_syndrome	nand/mxc_nand.c	/^static int mxc_nand_write_page_raw_syndrome(struct mtd_info *mtd,$/;"	f	file:
mxc_nand_write_page_raw_syndrome	nand/mxc_nand.c	696;"	d	file:
mxc_nand_write_page_syndrome	nand/mxc_nand.c	/^static int mxc_nand_write_page_syndrome(struct mtd_info *mtd,$/;"	f	file:
mxc_nand_write_page_syndrome	nand/mxc_nand.c	695;"	d	file:
mxs_flash_ident	nand/mxs_nand_spl.c	/^static int mxs_flash_ident(struct mtd_info *mtd)$/;"	f	file:
mxs_nand_alloc_buffers	nand/mxs_nand.c	/^int mxs_nand_alloc_buffers(struct mxs_nand_info *nand_info)$/;"	f
mxs_nand_aux_status_offset	nand/mxs_nand.c	/^static uint32_t mxs_nand_aux_status_offset(void)$/;"	f	file:
mxs_nand_block_bad	nand/mxs_nand.c	/^static int mxs_nand_block_bad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
mxs_nand_cmd_ctrl	nand/mxs_nand.c	/^static void mxs_nand_cmd_ctrl(struct mtd_info *mtd, int data, unsigned int ctrl)$/;"	f	file:
mxs_nand_command	nand/mxs_nand_spl.c	/^static void mxs_nand_command(struct mtd_info *mtd, unsigned int command,$/;"	f	file:
mxs_nand_device_ready	nand/mxs_nand.c	/^static int mxs_nand_device_ready(struct mtd_info *mtd)$/;"	f	file:
mxs_nand_ecc_chunk_cnt	nand/mxs_nand.c	/^static uint32_t mxs_nand_ecc_chunk_cnt(uint32_t page_data_size)$/;"	f	file:
mxs_nand_ecc_read_oob	nand/mxs_nand.c	/^static int mxs_nand_ecc_read_oob(struct mtd_info *mtd, struct nand_chip *nand,$/;"	f	file:
mxs_nand_ecc_read_page	nand/mxs_nand.c	/^static int mxs_nand_ecc_read_page(struct mtd_info *mtd, struct nand_chip *nand,$/;"	f	file:
mxs_nand_ecc_size_in_bits	nand/mxs_nand.c	/^static uint32_t mxs_nand_ecc_size_in_bits(uint32_t ecc_strength)$/;"	f	file:
mxs_nand_ecc_write_oob	nand/mxs_nand.c	/^static int mxs_nand_ecc_write_oob(struct mtd_info *mtd, struct nand_chip *nand,$/;"	f	file:
mxs_nand_ecc_write_page	nand/mxs_nand.c	/^static int mxs_nand_ecc_write_page(struct mtd_info *mtd,$/;"	f	file:
mxs_nand_flush_cmd_buf	nand/mxs_nand.c	/^static inline void mxs_nand_flush_cmd_buf(struct mxs_nand_info *info) {}$/;"	f	file:
mxs_nand_flush_cmd_buf	nand/mxs_nand.c	/^static void mxs_nand_flush_cmd_buf(struct mxs_nand_info *info)$/;"	f	file:
mxs_nand_flush_data_buf	nand/mxs_nand.c	/^static inline void mxs_nand_flush_data_buf(struct mxs_nand_info *info) {}$/;"	f	file:
mxs_nand_flush_data_buf	nand/mxs_nand.c	/^static void mxs_nand_flush_data_buf(struct mxs_nand_info *info)$/;"	f	file:
mxs_nand_get_dma_desc	nand/mxs_nand.c	/^static struct mxs_dma_desc *mxs_nand_get_dma_desc(struct mxs_nand_info *info)$/;"	f	file:
mxs_nand_get_ecc_strength	nand/mxs_nand.c	/^static inline uint32_t mxs_nand_get_ecc_strength(uint32_t page_data_size,$/;"	f	file:
mxs_nand_get_mark_offset	nand/mxs_nand.c	/^static inline uint32_t mxs_nand_get_mark_offset(uint32_t page_data_size,$/;"	f	file:
mxs_nand_hook_block_markbad	nand/mxs_nand.c	/^static int mxs_nand_hook_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
mxs_nand_hook_read_oob	nand/mxs_nand.c	/^static int mxs_nand_hook_read_oob(struct mtd_info *mtd, loff_t from,$/;"	f	file:
mxs_nand_hook_write_oob	nand/mxs_nand.c	/^static int mxs_nand_hook_write_oob(struct mtd_info *mtd, loff_t to,$/;"	f	file:
mxs_nand_info	nand/mxs_nand.c	/^struct mxs_nand_info {$/;"	s	file:
mxs_nand_init	nand/mxs_nand.c	/^int mxs_nand_init(struct mxs_nand_info *info)$/;"	f
mxs_nand_init	nand/mxs_nand_spl.c	/^static int mxs_nand_init(void)$/;"	f	file:
mxs_nand_inval_data_buf	nand/mxs_nand.c	/^static inline void mxs_nand_inval_data_buf(struct mxs_nand_info *info) {}$/;"	f	file:
mxs_nand_inval_data_buf	nand/mxs_nand.c	/^static void mxs_nand_inval_data_buf(struct mxs_nand_info *info)$/;"	f	file:
mxs_nand_mark_bit_offset	nand/mxs_nand.c	/^static uint32_t mxs_nand_mark_bit_offset(struct mtd_info *mtd)$/;"	f	file:
mxs_nand_mark_byte_offset	nand/mxs_nand.c	/^static uint32_t mxs_nand_mark_byte_offset(struct mtd_info *mtd)$/;"	f	file:
mxs_nand_read_buf	nand/mxs_nand.c	/^static void mxs_nand_read_buf(struct mtd_info *mtd, uint8_t *buf, int length)$/;"	f	file:
mxs_nand_read_byte	nand/mxs_nand.c	/^static uint8_t mxs_nand_read_byte(struct mtd_info *mtd)$/;"	f	file:
mxs_nand_return_dma_descs	nand/mxs_nand.c	/^static void mxs_nand_return_dma_descs(struct mxs_nand_info *info)$/;"	f	file:
mxs_nand_scan_bbt	nand/mxs_nand.c	/^static int mxs_nand_scan_bbt(struct mtd_info *mtd)$/;"	f	file:
mxs_nand_select_chip	nand/mxs_nand.c	/^static void mxs_nand_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
mxs_nand_swap_block_mark	nand/mxs_nand.c	/^static void mxs_nand_swap_block_mark(struct mtd_info *mtd,$/;"	f	file:
mxs_nand_wait_for_bch_complete	nand/mxs_nand.c	/^static int mxs_nand_wait_for_bch_complete(void)$/;"	f	file:
mxs_nand_write_buf	nand/mxs_nand.c	/^static void mxs_nand_write_buf(struct mtd_info *mtd, const uint8_t *buf,$/;"	f	file:
mxs_read_page_ecc	nand/mxs_nand_spl.c	/^static int mxs_read_page_ecc(struct mtd_info *mtd, void *buf, unsigned int page)$/;"	f	file:
n_sectors	spi/sf_internal.h	/^	u32		n_sectors;$/;"	m	struct:spi_flash_info
name	jedec_flash.c	/^	const char *name;$/;"	m	struct:amd_flash_info	file:
name	spi/sf_dataflash.c	/^	char		*name;$/;"	m	struct:flash_info	file:
name	spi/sf_internal.h	/^	const char	*name;$/;"	m	struct:spi_flash_info
name	st_smi.c	/^	char *name;$/;"	m	struct:flash_device	file:
name	ubi/build.c	/^	char name[MTD_PARAM_LEN_MAX];$/;"	m	struct:mtd_dev_param	file:
name	ubi/ubi-media.h	/^	__u8    name[UBI_VOL_NAME_MAX+1];$/;"	m	struct:ubi_vtbl_record
name	ubi/ubi-media.h	/^	char    name[UBI_VOL_NAME_MAX+1];$/;"	m	struct:ubi_vtbl_record
name	ubi/ubi.h	/^	char name[UBI_VOL_NAME_MAX + 1];$/;"	m	struct:ubi_volume
name_len	ubi/ubi-media.h	/^	__be16  name_len;$/;"	m	struct:ubi_vtbl_record
name_len	ubi/ubi.h	/^	int name_len;$/;"	m	struct:ubi_volume
nand	nand/denali.h	/^	struct nand_chip nand;$/;"	m	struct:denali_nand_info	typeref:struct:denali_nand_info::nand_chip
nand	nand/mxc_nand.c	/^	struct nand_chip		*nand;$/;"	m	struct:mxc_nand_host	typeref:struct:mxc_nand_host::nand_chip	file:
nand	nand/sunxi_nand.c	/^	struct nand_chip nand;$/;"	m	struct:sunxi_nand_chip	typeref:struct:sunxi_nand_chip::nand_chip	file:
nand_apply_config	nand/sunxi_nand_spl.c	/^static void nand_apply_config(const struct nfc_config *conf)$/;"	f	file:
nand_base	nand/arasan_nfc.c	/^	void __iomem *nand_base;$/;"	m	struct:arasan_nand_info	file:
nand_base	nand/zynq_nand.c	/^	void __iomem	*nand_base;$/;"	m	struct:zynq_nand_info	file:
nand_bch_calculate_ecc	nand/nand_bch.c	/^int nand_bch_calculate_ecc(struct mtd_info *mtd, const unsigned char *buf,$/;"	f
nand_bch_control	nand/nand_bch.c	/^struct nand_bch_control {$/;"	s	file:
nand_bch_correct_data	nand/nand_bch.c	/^int nand_bch_correct_data(struct mtd_info *mtd, unsigned char *buf,$/;"	f
nand_bch_free	nand/nand_bch.c	/^void nand_bch_free(struct nand_bch_control *nbc)$/;"	f
nand_bch_init	nand/nand_bch.c	/^struct nand_bch_control *nand_bch_init(struct mtd_info *mtd)$/;"	f
nand_block_bad	nand/nand_base.c	/^static int nand_block_bad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
nand_block_checkbad	nand/nand_base.c	/^static int nand_block_checkbad(struct mtd_info *mtd, loff_t ofs, int allowbbt)$/;"	f	file:
nand_block_isbad	nand/denali_spl.c	/^static int nand_block_isbad(void *buf, int block)$/;"	f	file:
nand_block_isbad	nand/nand_base.c	/^static int nand_block_isbad(struct mtd_info *mtd, loff_t offs)$/;"	f	file:
nand_block_isreserved	nand/nand_base.c	/^static int nand_block_isreserved(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
nand_block_markbad	nand/nand_base.c	/^static int nand_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
nand_block_markbad_lowlevel	nand/nand_base.c	/^static int nand_block_markbad_lowlevel(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
nand_boot	nand/fsl_elbc_spl.c	/^void nand_boot(void)$/;"	f
nand_boot	nand/fsl_ifc_spl.c	/^void nand_boot(void)$/;"	f
nand_boot	nand/mxc_nand_spl.c	/^void nand_boot(void)$/;"	f
nand_boot	nand/nand_spl_load.c	/^void nand_boot(void)$/;"	f
nand_buf	nand/denali.h	/^struct nand_buf {$/;"	s
nand_calculate_ecc	nand/nand_ecc.c	/^int nand_calculate_ecc(struct mtd_info *mtd, const u_char *dat,$/;"	f
nand_check_erased_buf	nand/nand_base.c	/^static int nand_check_erased_buf(void *buf, int len, int bitflips_threshold)$/;"	f	file:
nand_check_erased_ecc_chunk	nand/nand_base.c	/^EXPORT_SYMBOL(nand_check_erased_ecc_chunk);$/;"	v
nand_check_erased_ecc_chunk	nand/nand_base.c	/^int nand_check_erased_ecc_chunk(void *data, int datalen,$/;"	f
nand_check_wp	nand/nand_base.c	/^static int nand_check_wp(struct mtd_info *mtd)$/;"	f	file:
nand_chip	nand/am335x_spl_bch.c	/^static struct nand_chip nand_chip;$/;"	v	typeref:struct:nand_chip	file:
nand_chip	nand/arasan_nfc.c	/^static struct nand_chip nand_chip[CONFIG_SYS_MAX_NAND_DEVICE];$/;"	v	typeref:struct:nand_chip	file:
nand_chip	nand/atmel_nand.c	/^static struct nand_chip nand_chip;$/;"	v	typeref:struct:nand_chip	file:
nand_chip	nand/atmel_nand.c	/^static struct nand_chip nand_chip[CONFIG_SYS_MAX_NAND_DEVICE];$/;"	v	typeref:struct:nand_chip	file:
nand_chip	nand/mxs_nand_spl.c	/^static struct nand_chip nand_chip;$/;"	v	typeref:struct:nand_chip	file:
nand_chip	nand/nand.c	/^static struct nand_chip nand_chip[CONFIG_SYS_MAX_NAND_DEVICE];$/;"	v	typeref:struct:nand_chip	file:
nand_chip	nand/nand_spl_simple.c	/^static struct nand_chip nand_chip;$/;"	v	typeref:struct:nand_chip	file:
nand_chip	nand/tegra_nand.c	/^static struct nand_chip nand_chip[CONFIG_SYS_MAX_NAND_DEVICE];$/;"	v	typeref:struct:nand_chip	file:
nand_chip	nand/zynq_nand.c	/^static struct nand_chip nand_chip[CONFIG_SYS_MAX_NAND_DEVICE];$/;"	v	typeref:struct:nand_chip	file:
nand_clear_interrupt_status	nand/tegra_nand.c	/^static void nand_clear_interrupt_status(struct nand_ctlr *reg)$/;"	f	file:
nand_cmdfunc	nand/pxa3xx_nand.c	/^static void nand_cmdfunc(struct mtd_info *mtd, unsigned command,$/;"	f	file:
nand_cmdfunc_extended	nand/pxa3xx_nand.c	/^static void nand_cmdfunc_extended(struct mtd_info *mtd,$/;"	f	file:
nand_command	nand/am335x_spl_bch.c	/^static int nand_command(int block, int page, uint32_t offs,$/;"	f	file:
nand_command	nand/atmel_nand.c	/^static int nand_command(int block, int page, uint32_t offs, u8 cmd)$/;"	f	file:
nand_command	nand/nand_base.c	/^static void nand_command(struct mtd_info *mtd, unsigned int command,$/;"	f	file:
nand_command	nand/nand_spl_simple.c	/^static int nand_command(int block, int page, uint32_t offs,$/;"	f	file:
nand_command	nand/tegra_nand.c	/^static void nand_command(struct mtd_info *mtd, unsigned int command,$/;"	f	file:
nand_command_lp	nand/nand_base.c	/^static void nand_command_lp(struct mtd_info *mtd, unsigned int command,$/;"	f	file:
nand_correct_data	nand/nand_ecc.c	/^int nand_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f
nand_create_badblock_pattern	nand/nand_bbt.c	/^static int nand_create_badblock_pattern(struct nand_chip *this)$/;"	f	file:
nand_ctlr	nand/tegra_nand.h	/^struct nand_ctlr {$/;"	s
nand_ctrl	nand/tegra_nand.c	/^static struct nand_drv nand_ctrl;$/;"	v	typeref:struct:nand_drv	file:
nand_curr_device	nand/nand.c	/^int nand_curr_device = -1;$/;"	v
nand_davinci_4bit_calculate_ecc	nand/davinci_nand.c	/^static int nand_davinci_4bit_calculate_ecc(struct mtd_info *mtd,$/;"	f	file:
nand_davinci_4bit_correct_data	nand/davinci_nand.c	/^static int nand_davinci_4bit_correct_data(struct mtd_info *mtd, uint8_t *dat,$/;"	f	file:
nand_davinci_4bit_enable_hwecc	nand/davinci_nand.c	/^static void nand_davinci_4bit_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
nand_davinci_4bit_layout_oobfirst	nand/davinci_nand.c	/^static struct nand_ecclayout nand_davinci_4bit_layout_oobfirst = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_davinci_4bit_readecc	nand/davinci_nand.c	/^static u32 nand_davinci_4bit_readecc(struct mtd_info *mtd, unsigned int ecc[4])$/;"	f	file:
nand_davinci_calculate_ecc	nand/davinci_nand.c	/^static int nand_davinci_calculate_ecc(struct mtd_info *mtd, const u_char *dat,$/;"	f	file:
nand_davinci_correct_data	nand/davinci_nand.c	/^static int nand_davinci_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
nand_davinci_dev_ready	nand/davinci_nand.c	/^static int nand_davinci_dev_ready(struct mtd_info *mtd)$/;"	f	file:
nand_davinci_enable_hwecc	nand/davinci_nand.c	/^static void nand_davinci_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
nand_davinci_hwcontrol	nand/davinci_nand.c	/^static void nand_davinci_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
nand_davinci_read_buf	nand/davinci_nand.c	/^static void nand_davinci_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
nand_davinci_read_page_hwecc	nand/davinci_nand.c	/^static int nand_davinci_read_page_hwecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_davinci_readecc	nand/davinci_nand.c	/^static u_int32_t nand_davinci_readecc(struct mtd_info *mtd)$/;"	f	file:
nand_davinci_write_buf	nand/davinci_nand.c	/^static void nand_davinci_write_buf(struct mtd_info *mtd, const uint8_t *buf,$/;"	f	file:
nand_davinci_write_page	nand/davinci_nand.c	/^static int nand_davinci_write_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_decode_bbm_options	nand/nand_base.c	/^static void nand_decode_bbm_options(struct mtd_info *mtd,$/;"	f	file:
nand_decode_ext_id	nand/nand_base.c	/^static void nand_decode_ext_id(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_decode_id	nand/nand_base.c	/^static void nand_decode_id(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_default_bbt	nand/mxs_nand_spl.c	/^int nand_default_bbt(struct mtd_info *mtd)$/;"	f
nand_default_bbt	nand/nand_bbt.c	/^int nand_default_bbt(struct mtd_info *mtd)$/;"	f
nand_default_block_markbad	nand/nand_base.c	/^static int nand_default_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
nand_deselect	nand/am335x_spl_bch.c	/^void nand_deselect(void)$/;"	f
nand_deselect	nand/atmel_nand.c	/^void nand_deselect(void)$/;"	f
nand_deselect	nand/denali_spl.c	/^void nand_deselect(void) {}$/;"	f
nand_deselect	nand/fsl_ifc_spl.c	/^void nand_deselect(void)$/;"	f
nand_deselect	nand/lpc32xx_nand_mlc.c	/^void nand_deselect(void)$/;"	f
nand_deselect	nand/mxc_nand_spl.c	/^void nand_deselect(void) {}$/;"	f
nand_deselect	nand/mxs_nand_spl.c	/^void nand_deselect(void)$/;"	f
nand_deselect	nand/nand_spl_simple.c	/^void nand_deselect(void)$/;"	f
nand_deselect	nand/sunxi_nand_spl.c	/^void nand_deselect(void)$/;"	f
nand_detect_config	nand/sunxi_nand_spl.c	/^static int nand_detect_config(struct nfc_config *conf, u32 offs, void *dest)$/;"	f	file:
nand_detect_ecc_config	nand/sunxi_nand_spl.c	/^static int nand_detect_ecc_config(struct nfc_config *conf, u32 offs,$/;"	f	file:
nand_dev_ready	nand/fsl_upm.c	/^static int nand_dev_ready(struct mtd_info *mtd)$/;"	f	file:
nand_dev_ready	nand/tegra_nand.c	/^static int nand_dev_ready(struct mtd_info *mtd)$/;"	f	file:
nand_do_read_oob	nand/nand_base.c	/^static int nand_do_read_oob(struct mtd_info *mtd, loff_t from,$/;"	f	file:
nand_do_read_ops	nand/nand_base.c	/^static int nand_do_read_ops(struct mtd_info *mtd, loff_t from,$/;"	f	file:
nand_do_write_oob	nand/nand_base.c	/^static int nand_do_write_oob(struct mtd_info *mtd, loff_t to,$/;"	f	file:
nand_do_write_ops	nand/nand_base.c	/^static int nand_do_write_ops(struct mtd_info *mtd, loff_t to,$/;"	f	file:
nand_drv	nand/tegra_nand.c	/^struct nand_drv {$/;"	s	file:
nand_dt_init	nand/nand_base.c	/^static int nand_dt_init(struct mtd_info *mtd, struct nand_chip *chip, int node)$/;"	f	file:
nand_ecc_pos	nand/am335x_spl_bch.c	/^static int nand_ecc_pos[] = CONFIG_SYS_NAND_ECCPOS;$/;"	v	file:
nand_ecc_pos	nand/atmel_nand.c	/^static int nand_ecc_pos[] = CONFIG_SYS_NAND_ECCPOS;$/;"	v	file:
nand_ecc_pos	nand/nand_spl_simple.c	/^static int nand_ecc_pos[] = CONFIG_SYS_NAND_ECCPOS;$/;"	v	file:
nand_ecc_precalc_table	nand/nand_ecc.c	/^static const u_char nand_ecc_precalc_table[] = {$/;"	v	file:
nand_ecc_strength_good	nand/nand_base.c	/^static bool nand_ecc_strength_good(struct mtd_info *mtd)$/;"	f	file:
nand_erase	nand/nand_base.c	/^static int nand_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
nand_erase_nand	nand/nand_base.c	/^int nand_erase_nand(struct mtd_info *mtd, struct erase_info *instr,$/;"	f
nand_erase_opts	nand/nand_util.c	/^int nand_erase_opts(struct mtd_info *mtd,$/;"	f
nand_fill_oob	nand/nand_base.c	/^static uint8_t *nand_fill_oob(struct mtd_info *mtd, uint8_t *oob, size_t len,$/;"	f	file:
nand_flash_detect_ext_param_page	nand/nand_base.c	/^static int nand_flash_detect_ext_param_page(struct mtd_info *mtd,$/;"	f	file:
nand_flash_detect_jedec	nand/nand_base.c	/^static int nand_flash_detect_jedec(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_flash_detect_onfi	nand/nand_base.c	/^static int nand_flash_detect_onfi(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_flash_ids	nand/nand_ids.c	/^EXPORT_SYMBOL(nand_flash_ids);$/;"	v
nand_flash_ids	nand/nand_ids.c	/^struct nand_flash_dev nand_flash_ids[] = {$/;"	v	typeref:struct:nand_flash_dev
nand_flash_init	nand/davinci_nand.c	/^static void nand_flash_init(void)$/;"	f	file:
nand_get_bits_per_cell	nand/nand_base.c	/^static int nand_get_bits_per_cell(u8 cellinfo)$/;"	f	file:
nand_get_device	nand/nand_base.c	/^nand_get_device(struct mtd_info *mtd, int new_state)$/;"	f	file:
nand_get_flash_type	nand/nand_base.c	/^static struct nand_flash_dev *nand_get_flash_type(struct mtd_info *mtd,$/;"	f	file:
nand_get_lock_status	nand/nand_util.c	/^int nand_get_lock_status(struct mtd_info *mtd, loff_t offset)$/;"	f
nand_hw_eccoob	nand/mxc_nand.c	/^static struct nand_ecclayout nand_hw_eccoob = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_hw_eccoob2k	nand/mxc_nand.c	/^static struct nand_ecclayout nand_hw_eccoob2k = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_id_has_period	nand/nand_base.c	/^static int nand_id_has_period(u8 *id_data, int arrlen, int period)$/;"	f	file:
nand_id_len	nand/nand_base.c	/^static int nand_id_len(u8 *id_data, int arrlen)$/;"	f	file:
nand_info	nand/nand.c	/^struct mtd_info *nand_info[CONFIG_SYS_MAX_NAND_DEVICE];$/;"	v	typeref:struct:mtd_info
nand_init	nand/am335x_spl_bch.c	/^void nand_init(void)$/;"	f
nand_init	nand/atmel_nand.c	/^void nand_init(void)$/;"	f
nand_init	nand/denali_spl.c	/^void nand_init(void)$/;"	f
nand_init	nand/fsl_ifc_spl.c	/^void nand_init(void)$/;"	f
nand_init	nand/lpc32xx_nand_mlc.c	/^void nand_init(void)$/;"	f
nand_init	nand/mxc_nand_spl.c	/^void nand_init(void) {}$/;"	f
nand_init	nand/mxs_nand_spl.c	/^void nand_init(void)$/;"	f
nand_init	nand/nand.c	/^void nand_init(void)$/;"	f
nand_init	nand/nand_spl_simple.c	/^void nand_init(void)$/;"	f
nand_init	nand/sunxi_nand_spl.c	/^void nand_init(void)$/;"	f
nand_init_chip	nand/nand.c	/^static void nand_init_chip(int i)$/;"	f	file:
nand_is_bad_block	nand/am335x_spl_bch.c	/^static int nand_is_bad_block(int block)$/;"	f	file:
nand_is_bad_block	nand/atmel_nand.c	/^static int nand_is_bad_block(int block)$/;"	f	file:
nand_is_bad_block	nand/nand_spl_simple.c	/^static int nand_is_bad_block(int block)$/;"	f	file:
nand_isbad_bbt	nand/nand_bbt.c	/^int nand_isbad_bbt(struct mtd_info *mtd, loff_t offs, int allowbbt)$/;"	f
nand_isreserved_bbt	nand/nand_bbt.c	/^int nand_isreserved_bbt(struct mtd_info *mtd, loff_t offs)$/;"	f
nand_keystone_rbl_4bit_layout_oobfirst	nand/davinci_nand.c	/^static struct nand_ecclayout nand_keystone_rbl_4bit_layout_oobfirst = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_led_trigger	nand/nand_base.c	/^DEFINE_LED_TRIGGER(nand_led_trigger);$/;"	v
nand_load_page	nand/sunxi_nand_spl.c	/^static int nand_load_page(const struct nfc_config *conf, u32 offs)$/;"	f	file:
nand_lock	nand/nand_util.c	/^int nand_lock(struct mtd_info *mtd, int tight)$/;"	f
nand_manuf_ids	nand/nand_ids.c	/^EXPORT_SYMBOL(nand_manuf_ids);$/;"	v
nand_manuf_ids	nand/nand_ids.c	/^struct nand_manufacturers nand_manuf_ids[] = {$/;"	v	typeref:struct:nand_manufacturers
nand_markbad_bbt	nand/nand_bbt.c	/^int nand_markbad_bbt(struct mtd_info *mtd, loff_t offs)$/;"	f
nand_max_ecc_strength	nand/sunxi_nand_spl.c	/^static int nand_max_ecc_strength(struct nfc_config *conf)$/;"	f	file:
nand_memory_bbt	nand/nand_bbt.c	/^static inline int nand_memory_bbt(struct mtd_info *mtd, struct nand_bbt_descr *bd)$/;"	f	file:
nand_mpp_backup	nand/kirkwood_nand.c	/^static u32 nand_mpp_backup[9] = { 0 };$/;"	v	file:
nand_mtd_to_devnum	nand/nand.c	/^int nand_mtd_to_devnum(struct mtd_info *mtd)$/;"	f
nand_onfi_detect_micron	nand/nand_base.c	/^static void nand_onfi_detect_micron(struct nand_chip *chip,$/;"	f	file:
nand_onfi_get_features	nand/nand_base.c	/^static int nand_onfi_get_features(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_onfi_set_features	nand/nand_base.c	/^static int nand_onfi_set_features(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_onfi_timing_set	nand/denali.c	/^static void nand_onfi_timing_set(struct denali_nand_info *denali,$/;"	f	file:
nand_oob	nand/arasan_nfc.c	/^static struct nand_ecclayout nand_oob;$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oob	nand/denali.c	/^static struct nand_ecclayout nand_oob;$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oob_128	nand/nand_base.c	/^static struct nand_ecclayout nand_oob_128 = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oob_16	nand/nand_base.c	/^static struct nand_ecclayout nand_oob_16 = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oob_16	nand/zynq_nand.c	/^static struct nand_ecclayout nand_oob_16 = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oob_64	nand/nand_base.c	/^static struct nand_ecclayout nand_oob_64 = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oob_64	nand/zynq_nand.c	/^static struct nand_ecclayout nand_oob_64 = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oob_8	nand/nand_base.c	/^static struct nand_ecclayout nand_oob_8 = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_read	nand/nand_base.c	/^static int nand_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
nand_read_buf	nand/nand_base.c	/^void nand_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f
nand_read_buf	nand/s3c2410_nand.c	/^static void nand_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
nand_read_buf16	nand/nand_base.c	/^void nand_read_buf16(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f
nand_read_buffer	nand/sunxi_nand_spl.c	/^static int nand_read_buffer(struct nfc_config *conf, uint32_t offs,$/;"	f	file:
nand_read_byte	nand/nand_base.c	/^uint8_t nand_read_byte(struct mtd_info *mtd)$/;"	f
nand_read_byte16	nand/nand_base.c	/^static uint8_t nand_read_byte16(struct mtd_info *mtd)$/;"	f	file:
nand_read_oob	nand/denali_spl.c	/^static int nand_read_oob(void *buf, int page)$/;"	f	file:
nand_read_oob	nand/nand_base.c	/^static int nand_read_oob(struct mtd_info *mtd, loff_t from,$/;"	f	file:
nand_read_oob	nand/tegra_nand.c	/^static int nand_read_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_oob_std	nand/nand_base.c	/^static int nand_read_oob_std(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_oob_syndrome	nand/nand_base.c	/^static int nand_read_oob_syndrome(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_page	nand/am335x_spl_bch.c	/^static int nand_read_page(int block, int page, void *dst)$/;"	f	file:
nand_read_page	nand/atmel_nand.c	/^static int nand_read_page(int block, int page, void *dst)$/;"	f	file:
nand_read_page	nand/denali_spl.c	/^static int nand_read_page(void *buf, int page)$/;"	f	file:
nand_read_page	nand/nand_spl_simple.c	/^static int nand_read_page(int block, int page, uchar *dst)$/;"	f	file:
nand_read_page	nand/nand_spl_simple.c	/^static int nand_read_page(int block, int page, void *dst)$/;"	f	file:
nand_read_page	nand/sunxi_nand_spl.c	/^static int nand_read_page(const struct nfc_config *conf, u32 offs,$/;"	f	file:
nand_read_page_hwecc	nand/nand_base.c	/^static int nand_read_page_hwecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_page_hwecc	nand/tegra_nand.c	/^static int nand_read_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
nand_read_page_hwecc_oob_first	nand/nand_base.c	/^static int nand_read_page_hwecc_oob_first(struct mtd_info *mtd,$/;"	f	file:
nand_read_page_raw	nand/nand_base.c	/^static int nand_read_page_raw(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_page_raw	nand/tegra_nand.c	/^static int nand_read_page_raw(struct mtd_info *mtd,$/;"	f	file:
nand_read_page_raw_syndrome	nand/nand_base.c	/^static int nand_read_page_raw_syndrome(struct mtd_info *mtd,$/;"	f	file:
nand_read_page_swecc	nand/nand_base.c	/^static int nand_read_page_swecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_page_syndrome	nand/nand_base.c	/^static int nand_read_page_syndrome(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_skip_bad	nand/nand_util.c	/^int nand_read_skip_bad(struct mtd_info *mtd, loff_t offset, size_t *length,$/;"	f
nand_read_subpage	nand/nand_base.c	/^static int nand_read_subpage(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_word	nand/nand_base.c	/^static u16 nand_read_word(struct mtd_info *mtd)$/;"	f	file:
nand_readl	nand/pxa3xx_nand.c	114;"	d	file:
nand_register	nand/nand.c	/^int nand_register(int devnum, struct mtd_info *mtd)$/;"	f
nand_regs	nand/arasan_nfc.c	/^struct nand_regs {$/;"	s	file:
nand_release_device	nand/nand_base.c	/^static void nand_release_device(struct mtd_info *mtd)$/;"	f	file:
nand_reset_column	nand/sunxi_nand_spl.c	/^static int nand_reset_column(void)$/;"	f	file:
nand_rw_oob	nand/tegra_nand.c	/^static int nand_rw_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_rw_page	nand/tegra_nand.c	/^static int nand_rw_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_scan	nand/nand_base.c	/^EXPORT_SYMBOL(nand_scan);$/;"	v
nand_scan	nand/nand_base.c	/^int nand_scan(struct mtd_info *mtd, int maxchips)$/;"	f
nand_scan_bbt	nand/nand_bbt.c	/^static int nand_scan_bbt(struct mtd_info *mtd, struct nand_bbt_descr *bd)$/;"	f	file:
nand_scan_ident	nand/nand_base.c	/^EXPORT_SYMBOL(nand_scan_ident);$/;"	v
nand_scan_ident	nand/nand_base.c	/^int nand_scan_ident(struct mtd_info *mtd, int maxchips,$/;"	f
nand_scan_tail	nand/nand_base.c	/^EXPORT_SYMBOL(nand_scan_tail);$/;"	v
nand_scan_tail	nand/nand_base.c	/^int nand_scan_tail(struct mtd_info *mtd)$/;"	f
nand_select_chip	nand/nand_base.c	/^static void nand_select_chip(struct mtd_info *mtd, int chipnr)$/;"	f	file:
nand_select_chip	nand/tegra_nand.c	/^static void nand_select_chip(struct mtd_info *mtd, int chipnr)$/;"	f	file:
nand_set_defaults	nand/nand_base.c	/^static void nand_set_defaults(struct nand_chip *chip, int busw)$/;"	f	file:
nand_setup_read_retry	nand/nand_base.c	/^static int nand_setup_read_retry(struct mtd_info *mtd, int retry_mode)$/;"	f	file:
nand_setup_read_retry_micron	nand/nand_base.c	/^static int nand_setup_read_retry_micron(struct mtd_info *mtd, int retry_mode)$/;"	f	file:
nand_spl_load_image	nand/am335x_spl_bch.c	/^int nand_spl_load_image(uint32_t offs, unsigned int size, void *dst)$/;"	f
nand_spl_load_image	nand/atmel_nand.c	/^int nand_spl_load_image(uint32_t offs, unsigned int size, void *dst)$/;"	f
nand_spl_load_image	nand/denali_spl.c	/^int nand_spl_load_image(uint32_t offs, unsigned int size, void *dst)$/;"	f
nand_spl_load_image	nand/fsl_elbc_spl.c	/^int nand_spl_load_image(uint32_t offs, unsigned int uboot_size, void *vdst)$/;"	f
nand_spl_load_image	nand/fsl_elbc_spl.c	125;"	d	file:
nand_spl_load_image	nand/fsl_ifc_spl.c	/^int nand_spl_load_image(uint32_t offs, unsigned int uboot_size, void *vdst)$/;"	f
nand_spl_load_image	nand/lpc32xx_nand_mlc.c	/^int nand_spl_load_image(uint32_t offs, unsigned int size, void *dst)$/;"	f
nand_spl_load_image	nand/mxc_nand_spl.c	/^int nand_spl_load_image(uint32_t from, unsigned int size, void *buf)$/;"	f
nand_spl_load_image	nand/mxs_nand_spl.c	/^int nand_spl_load_image(uint32_t offs, unsigned int size, void *buf)$/;"	f
nand_spl_load_image	nand/nand_spl_simple.c	/^int nand_spl_load_image(uint32_t offs, unsigned int size, void *dst)$/;"	f
nand_spl_load_image	nand/sunxi_nand_spl.c	/^int nand_spl_load_image(uint32_t offs, unsigned int size, void *dest)$/;"	f
nand_spl_read_block	nand/nand_spl_simple.c	/^int nand_spl_read_block(int block, int offset, int len, void *dst)$/;"	f
nand_sync	nand/nand_base.c	/^static void nand_sync(struct mtd_info *mtd)$/;"	f	file:
nand_torture	nand/nand_util.c	/^int nand_torture(struct mtd_info *mtd, loff_t offset)$/;"	f
nand_transfer_oob	nand/nand_base.c	/^static uint8_t *nand_transfer_oob(struct nand_chip *chip, uint8_t *oob,$/;"	f	file:
nand_unlock	nand/nand_util.c	/^int nand_unlock(struct mtd_info *mtd, loff_t start, size_t length,$/;"	f
nand_update_bbt	nand/nand_bbt.c	/^static int nand_update_bbt(struct mtd_info *mtd, loff_t offs)$/;"	f	file:
nand_verify	nand/nand_util.c	/^int nand_verify(struct mtd_info *mtd, loff_t ofs, size_t len, u_char *buf)$/;"	f
nand_verify_page_oob	nand/nand_util.c	/^int nand_verify_page_oob(struct mtd_info *mtd, struct mtd_oob_ops *ops,$/;"	f
nand_wait	nand/fsl_elbc_spl.c	/^static void nand_wait(void)$/;"	f	file:
nand_wait	nand/fsl_ifc_spl.c	/^static inline void nand_wait(uchar *buf, int bufnum, int page_size)$/;"	f	file:
nand_wait	nand/nand_base.c	/^static int nand_wait(struct mtd_info *mtd, struct nand_chip *chip)$/;"	f	file:
nand_wait_ready	nand/nand_base.c	/^EXPORT_SYMBOL_GPL(nand_wait_ready);$/;"	v
nand_wait_ready	nand/nand_base.c	/^void nand_wait_ready(struct mtd_info *mtd)$/;"	f
nand_wait_status_ready	nand/nand_base.c	/^static void nand_wait_status_ready(struct mtd_info *mtd, unsigned long timeo)$/;"	f	file:
nand_waitfor_cmd_completion	nand/tegra_nand.c	/^static int nand_waitfor_cmd_completion(struct nand_ctlr *reg)$/;"	f	file:
nand_write	nand/nand_base.c	/^static int nand_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
nand_write_buf	nand/nand_base.c	/^void nand_write_buf(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f
nand_write_buf16	nand/nand_base.c	/^void nand_write_buf16(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f
nand_write_byte	nand/nand_base.c	/^static void nand_write_byte(struct mtd_info *mtd, uint8_t byte)$/;"	f	file:
nand_write_byte16	nand/nand_base.c	/^static void nand_write_byte16(struct mtd_info *mtd, uint8_t byte)$/;"	f	file:
nand_write_oob	nand/nand_base.c	/^static int nand_write_oob(struct mtd_info *mtd, loff_t to,$/;"	f	file:
nand_write_oob	nand/tegra_nand.c	/^static int nand_write_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_oob_std	nand/nand_base.c	/^static int nand_write_oob_std(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_oob_syndrome	nand/nand_base.c	/^static int nand_write_oob_syndrome(struct mtd_info *mtd,$/;"	f	file:
nand_write_page	nand/nand_base.c	/^static int nand_write_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_hwecc	nand/nand_base.c	/^static int nand_write_page_hwecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_hwecc	nand/tegra_nand.c	/^static int nand_write_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
nand_write_page_raw	nand/nand_base.c	/^static int nand_write_page_raw(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_raw	nand/tegra_nand.c	/^static int nand_write_page_raw(struct mtd_info *mtd,$/;"	f	file:
nand_write_page_raw_syndrome	nand/nand_base.c	/^static int nand_write_page_raw_syndrome(struct mtd_info *mtd,$/;"	f	file:
nand_write_page_swecc	nand/nand_base.c	/^static int nand_write_page_swecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_syndrome	nand/nand_base.c	/^static int nand_write_page_syndrome(struct mtd_info *mtd,$/;"	f	file:
nand_write_skip_bad	nand/nand_util.c	/^int nand_write_skip_bad(struct mtd_info *mtd, loff_t offset, size_t *length,$/;"	f
nand_write_subpage_hwecc	nand/nand_base.c	/^static int nand_write_subpage_hwecc(struct mtd_info *mtd,$/;"	f	file:
nand_writel	nand/pxa3xx_nand.c	111;"	d	file:
nativeid	nand/sunxi_nand.c	/^		int nativeid;$/;"	m	union:sunxi_nand_rb::__anon25	file:
ndcb0	nand/pxa3xx_nand.c	/^	uint32_t		ndcb0;$/;"	m	struct:pxa3xx_nand_info	file:
ndcb1	nand/pxa3xx_nand.c	/^	uint32_t		ndcb1;$/;"	m	struct:pxa3xx_nand_info	file:
ndcb2	nand/pxa3xx_nand.c	/^	uint32_t		ndcb2;$/;"	m	struct:pxa3xx_nand_info	file:
ndcb3	nand/pxa3xx_nand.c	/^	uint32_t		ndcb3;$/;"	m	struct:pxa3xx_nand_info	file:
ndfc_calculate_ecc	nand/ndfc.c	/^static int ndfc_calculate_ecc(struct mtd_info *mtdinfo,$/;"	f	file:
ndfc_cs	nand/ndfc.c	/^static int ndfc_cs[NDFC_MAX_BANKS];$/;"	v	file:
ndfc_dev_ready	nand/ndfc.c	/^static int ndfc_dev_ready(struct mtd_info *mtdinfo)$/;"	f	file:
ndfc_enable_hwecc	nand/ndfc.c	/^static void ndfc_enable_hwecc(struct mtd_info *mtdinfo, int mode)$/;"	f	file:
ndfc_hwcontrol	nand/ndfc.c	/^static void ndfc_hwcontrol(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
ndfc_read_buf	nand/ndfc.c	/^static void ndfc_read_buf(struct mtd_info *mtdinfo, uint8_t *buf, int len)$/;"	f	file:
ndfc_read_byte	nand/ndfc.c	/^static uint8_t ndfc_read_byte(struct mtd_info *mtd)$/;"	f	file:
ndfc_select_chip	nand/ndfc.c	/^static void ndfc_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
ndfc_write_buf	nand/ndfc.c	/^static void ndfc_write_buf(struct mtd_info *mtdinfo, const uint8_t *buf, int len)$/;"	f	file:
ndtr0cs0	nand/pxa3xx_nand.c	/^	uint32_t		ndtr0cs0;$/;"	m	struct:pxa3xx_nand_info	file:
ndtr1cs0	nand/pxa3xx_nand.c	/^	uint32_t		ndtr1cs0;$/;"	m	struct:pxa3xx_nand_info	file:
need_wait	nand/pxa3xx_nand.c	/^	int			need_wait;$/;"	m	struct:pxa3xx_nand_info	file:
new_fm_vhdr	ubi/fastmap.c	/^static struct ubi_vid_hdr *new_fm_vhdr(struct ubi_device *ubi, int vol_id)$/;"	f	file:
new_name	ubi/ubi.h	/^	char new_name[UBI_VOL_NAME_MAX + 1];$/;"	m	struct:ubi_rename_entry
new_name_len	ubi/ubi.h	/^	int new_name_len;$/;"	m	struct:ubi_rename_entry
nf_reg	nand/kirkwood_nand.c	/^static struct kwnandf_registers *nf_reg =$/;"	v	typeref:struct:kwnandf_registers	file:
nf_wrprst	nand/mxc_nand.h	/^	u16 nf_wrprst;$/;"	m	struct:mxc_nand_regs
nfc	nand/mxc_nand_spl.c	/^static struct mxc_nand_regs *const nfc = (void *)NFC_BASE_ADDR;$/;"	v	file:
nfc	nand/mxc_nand_spl.c	/^static struct mxc_nand_regs *const nfc = (void *)NFC_BASE_ADDR_AXI;$/;"	v	file:
nfc_clear	nand/mpc5121_nfc.c	/^static inline void nfc_clear(struct mtd_info *mtd, uint reg, u16 bits)$/;"	f	file:
nfc_config	nand/sunxi_nand_spl.c	/^struct nfc_config {$/;"	s	file:
nfc_ip	nand/mxc_nand_spl.c	/^static struct mxc_nand_ip_regs *const nfc_ip = (void *)NFC_BASE_ADDR;$/;"	v	file:
nfc_nand_address	nand/mxc_nand_spl.c	/^static void nfc_nand_address(unsigned short address)$/;"	f	file:
nfc_nand_check_ecc	nand/mxc_nand_spl.c	/^static int nfc_nand_check_ecc(void)$/;"	f	file:
nfc_nand_command	nand/mxc_nand_spl.c	/^static void nfc_nand_command(unsigned short command)$/;"	f	file:
nfc_nand_data_output	nand/mxc_nand_spl.c	/^static void nfc_nand_data_output(void)$/;"	f	file:
nfc_nand_init	nand/mxc_nand_spl.c	/^static void nfc_nand_init(void)$/;"	f	file:
nfc_nand_page_address	nand/mxc_nand_spl.c	/^static void nfc_nand_page_address(unsigned int page_address)$/;"	f	file:
nfc_nand_read_page	nand/mxc_nand_spl.c	/^static void nfc_nand_read_page(unsigned int page_address)$/;"	f	file:
nfc_read	nand/mpc5121_nfc.c	/^static inline u16 nfc_read(struct mtd_info *mtd, uint reg)$/;"	f	file:
nfc_read_page	nand/mxc_nand_spl.c	/^static int nfc_read_page(unsigned int page_address, unsigned char *buf)$/;"	f	file:
nfc_set	nand/mpc5121_nfc.c	/^static inline void nfc_set(struct mtd_info *mtd, uint reg, u16 bits)$/;"	f	file:
nfc_wait_ready	nand/mxc_nand_spl.c	/^static void nfc_wait_ready(void)$/;"	f	file:
nfc_write	nand/mpc5121_nfc.c	/^static inline void nfc_write(struct mtd_info *mtd, uint reg, u16 val)$/;"	f	file:
node	nand/sunxi_nand.c	/^	struct list_head node;$/;"	m	struct:sunxi_nand_chip	typeref:struct:sunxi_nand_chip::list_head	file:
nor_erase_prepare	ubi/io.c	/^static int nor_erase_prepare(struct ubi_device *ubi, int pnum)$/;"	f	file:
nor_flash	ubi/ubi.h	/^	unsigned int nor_flash:1;$/;"	m	struct:ubi_device
nr_pages	spi/sf_dataflash.c	/^	unsigned	nr_pages;$/;"	m	struct:flash_info	file:
nr_parts	nand/pxa3xx_nand.h	/^	unsigned int				nr_parts[NUM_CHIP_SELECT];$/;"	m	struct:pxa3xx_nand_platform_data
ns2cycle	nand/pxa3xx_nand.c	303;"	d	file:
nseeds	nand/sunxi_nand_spl.c	/^	int nseeds;$/;"	m	struct:nfc_config	file:
nsels	nand/sunxi_nand.c	/^	int nsels;$/;"	m	struct:sunxi_nand_chip	file:
num_cs	nand/pxa3xx_nand.h	/^	int	num_cs;$/;"	m	struct:pxa3xx_nand_platform_data
num_flash	nand/pxa3xx_nand.h	/^	size_t					num_flash;$/;"	m	struct:pxa3xx_nand_platform_data
num_subdev	mtdconcat.c	/^	int num_subdev;$/;"	m	struct:mtd_concat	file:
nvm_regs_p	pic32_flash.c	/^static struct pic32_reg_nvm *nvm_regs_p;$/;"	v	typeref:struct:pic32_reg_nvm	file:
obj-y	onenand/Makefile	/^obj-y				:= onenand_spl.o$/;"	m
off	spi/sandbox.c	/^	uint off;$/;"	m	struct:sandbox_spi_flash	file:
offset	mtdpart.c	/^	uint64_t offset;$/;"	m	struct:mtd_part	file:
omap_calculate_ecc	nand/omap_gpmc.c	/^static int omap_calculate_ecc(struct mtd_info *mtd, const uint8_t *dat,$/;"	f	file:
omap_correct_data	nand/omap_gpmc.c	/^static int __maybe_unused omap_correct_data(struct mtd_info *mtd, uint8_t *dat,$/;"	f	file:
omap_correct_data_bch	nand/omap_gpmc.c	/^static int omap_correct_data_bch(struct mtd_info *mtd, uint8_t *dat,$/;"	f	file:
omap_correct_data_bch_sw	nand/omap_gpmc.c	/^static int omap_correct_data_bch_sw(struct mtd_info *mtd, u_char *data,$/;"	f	file:
omap_dev_ready	nand/omap_gpmc.c	/^static int omap_dev_ready(struct mtd_info *mtd)$/;"	f	file:
omap_ecclayout	nand/omap_gpmc.c	/^static __maybe_unused struct nand_ecclayout omap_ecclayout;$/;"	v	typeref:struct:nand_ecclayout	file:
omap_enable_hwecc	nand/omap_gpmc.c	/^static void omap_enable_hwecc(struct mtd_info *mtd, int32_t mode)$/;"	f	file:
omap_free_bch	nand/omap_gpmc.c	/^static void __maybe_unused omap_free_bch(struct mtd_info *mtd)$/;"	f	file:
omap_nand_hwcontrol	nand/omap_gpmc.c	/^static void omap_nand_hwcontrol(struct mtd_info *mtd, int32_t cmd,$/;"	f	file:
omap_nand_info	nand/omap_gpmc.c	/^static struct omap_nand_info omap_nand_info[GPMC_MAX_CS];$/;"	v	typeref:struct:omap_nand_info	file:
omap_nand_info	nand/omap_gpmc.c	/^struct omap_nand_info {$/;"	s	file:
omap_nand_read	nand/omap_gpmc.c	/^static inline void omap_nand_read(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
omap_nand_read_prefetch	nand/omap_gpmc.c	/^static void omap_nand_read_prefetch(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
omap_nand_switch_ecc	nand/omap_gpmc.c	/^int __maybe_unused omap_nand_switch_ecc(uint32_t hardware, uint32_t eccstrength)$/;"	f
omap_prefetch_enable	nand/omap_gpmc.c	/^static int omap_prefetch_enable(int fifo_th, unsigned int count, int is_write, int cs)$/;"	f	file:
omap_prefetch_reset	nand/omap_gpmc.c	/^static void omap_prefetch_reset(void)$/;"	f	file:
omap_read_page_bch	nand/omap_gpmc.c	/^static int omap_read_page_bch(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
omap_reverse_list	nand/omap_gpmc.c	/^static void omap_reverse_list(u8 *list, unsigned int length)$/;"	f	file:
omap_select_ecc_scheme	nand/omap_gpmc.c	/^static int omap_select_ecc_scheme(struct nand_chip *nand,$/;"	f	file:
ondie_nand_oob_64	nand/zynq_nand.c	/^static struct nand_ecclayout ondie_nand_oob_64 = {$/;"	v	typeref:struct:nand_ecclayout	file:
onehot	nand/zynq_nand.c	/^static bool onehot(unsigned short value)$/;"	f	file:
onenand	onenand/samsung.c	/^static struct s3c_onenand *onenand;$/;"	v	typeref:struct:s3c_onenand	file:
onenand_addr	onenand/onenand_base.c	/^loff_t onenand_addr(struct onenand_chip *this, int block)$/;"	f
onenand_bbt_read_oob	onenand/onenand_base.c	/^int onenand_bbt_read_oob(struct mtd_info *mtd, loff_t from,$/;"	f
onenand_bbt_wait	onenand/onenand_base.c	/^static int onenand_bbt_wait(struct mtd_info *mtd, int state)$/;"	f	file:
onenand_block	onenand/onenand_base.c	/^unsigned int onenand_block(struct onenand_chip *this, loff_t addr)$/;"	f
onenand_block_address	onenand/onenand_base.c	/^static int onenand_block_address(struct onenand_chip *this, int block)$/;"	f	file:
onenand_block_address	onenand/onenand_spl.c	27;"	d	file:
onenand_block_isbad	onenand/onenand_base.c	/^int onenand_block_isbad(struct mtd_info *mtd, loff_t ofs)$/;"	f
onenand_block_isbad_nolock	onenand/onenand_base.c	/^static int onenand_block_isbad_nolock(struct mtd_info *mtd, loff_t ofs, int allowbbt)$/;"	f	file:
onenand_block_markbad	onenand/onenand_base.c	/^int onenand_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f
onenand_buffer_address	onenand/onenand_base.c	/^static int onenand_buffer_address(int dataram1, int sectors, int count)$/;"	f	file:
onenand_buffer_address	onenand/onenand_spl.c	29;"	d	file:
onenand_bufferram_address	onenand/onenand_base.c	/^static int onenand_bufferram_address(struct onenand_chip *this, int block)$/;"	f	file:
onenand_bufferram_address	onenand/onenand_spl.c	30;"	d	file:
onenand_bufferram_offset	onenand/onenand_base.c	/^static inline int onenand_bufferram_offset(struct mtd_info *mtd, int area)$/;"	f	file:
onenand_check_bufferram	onenand/onenand_base.c	/^static int onenand_check_bufferram(struct mtd_info *mtd, loff_t addr)$/;"	f	file:
onenand_check_features	onenand/onenand_base.c	/^static void onenand_check_features(struct mtd_info *mtd)$/;"	f	file:
onenand_check_lock_status	onenand/onenand_base.c	/^static int onenand_check_lock_status(struct onenand_chip *this)$/;"	f	file:
onenand_check_maf	onenand/onenand_base.c	/^static int onenand_check_maf(int manuf)$/;"	f	file:
onenand_chip	onenand/onenand_uboot.c	/^struct onenand_chip onenand_chip;$/;"	v	typeref:struct:onenand_chip
onenand_chip_probe	onenand/onenand_base.c	/^static int onenand_chip_probe(struct mtd_info *mtd)$/;"	f	file:
onenand_command	onenand/onenand_base.c	/^static int onenand_command(struct mtd_info *mtd, int cmd, loff_t addr,$/;"	f	file:
onenand_default_bbt	onenand/onenand_bbt.c	/^int onenand_default_bbt(struct mtd_info *mtd)$/;"	f
onenand_default_block_markbad	onenand/onenand_base.c	/^static int onenand_default_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
onenand_do_lock_cmd	onenand/onenand_base.c	/^static int onenand_do_lock_cmd(struct mtd_info *mtd, loff_t ofs, size_t len, int cmd)$/;"	f	file:
onenand_erase	onenand/onenand_base.c	/^int onenand_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f
onenand_fill_auto_oob	onenand/onenand_base.c	/^static int onenand_fill_auto_oob(struct mtd_info *mtd, u_char *oob_buf,$/;"	f	file:
onenand_get_2x_blockpage	onenand/onenand_base.c	/^static int onenand_get_2x_blockpage(struct mtd_info *mtd, loff_t addr)$/;"	f	file:
onenand_get_density	onenand/onenand_base.c	/^static inline int onenand_get_density(int dev_id)$/;"	f	file:
onenand_get_device	onenand/onenand_base.c	/^static void onenand_get_device(struct mtd_info *mtd, int new_state)$/;"	f	file:
onenand_init	onenand/onenand_uboot.c	/^void onenand_init(void)$/;"	f
onenand_invalidate_bufferram	onenand/onenand_base.c	/^static void onenand_invalidate_bufferram(struct mtd_info *mtd, loff_t addr,$/;"	f	file:
onenand_isbad_bbt	onenand/onenand_bbt.c	/^static int onenand_isbad_bbt(struct mtd_info *mtd, loff_t offs, int allowbbt)$/;"	f	file:
onenand_lock	onenand/onenand_base.c	/^static int onenand_lock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
onenand_manuf_ids	onenand/onenand_base.c	/^static const struct onenand_manufacturers onenand_manuf_ids[] = {$/;"	v	typeref:struct:onenand_manufacturers	file:
onenand_memory_bbt	onenand/onenand_bbt.c	/^static inline int onenand_memory_bbt(struct mtd_info *mtd,$/;"	f	file:
onenand_mtd	onenand/onenand_uboot.c	/^struct mtd_info onenand_mtd;$/;"	v	typeref:struct:mtd_info
onenand_oob_128	onenand/onenand_base.c	/^static struct nand_ecclayout onenand_oob_128 = {$/;"	v	typeref:struct:nand_ecclayout	file:
onenand_oob_32	onenand/onenand_base.c	/^static struct nand_ecclayout onenand_oob_32 = {$/;"	v	typeref:struct:nand_ecclayout	file:
onenand_oob_64	onenand/onenand_base.c	/^static struct nand_ecclayout onenand_oob_64 = {$/;"	v	typeref:struct:nand_ecclayout	file:
onenand_page_address	onenand/onenand_base.c	/^static int onenand_page_address(int page, int sector)$/;"	f	file:
onenand_print_device_info	onenand/onenand_base.c	/^char *onenand_print_device_info(int device, int version)$/;"	f
onenand_probe	onenand/onenand_base.c	/^int onenand_probe(struct mtd_info *mtd)$/;"	f
onenand_read	onenand/onenand_base.c	/^int onenand_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f
onenand_read_bufferram	onenand/onenand_base.c	/^static int onenand_read_bufferram(struct mtd_info *mtd, loff_t addr, int area,$/;"	f	file:
onenand_read_bufferram	onenand/samsung.c	/^static int onenand_read_bufferram(struct mtd_info *mtd, loff_t addr, int area,$/;"	f	file:
onenand_read_ecc	onenand/onenand_base.c	/^static int onenand_read_ecc(struct onenand_chip *this)$/;"	f	file:
onenand_read_oob	onenand/onenand_base.c	/^int onenand_read_oob(struct mtd_info *mtd, loff_t from,$/;"	f
onenand_read_oob_nolock	onenand/onenand_base.c	/^static int onenand_read_oob_nolock(struct mtd_info *mtd, loff_t from,$/;"	f	file:
onenand_read_ops_nolock	onenand/onenand_base.c	/^static int onenand_read_ops_nolock(struct mtd_info *mtd, loff_t from,$/;"	f	file:
onenand_readw	onenand/onenand_base.c	/^static unsigned short onenand_readw(void __iomem * addr)$/;"	f	file:
onenand_readw	onenand/onenand_spl.c	/^static inline uint16_t onenand_readw(uint32_t addr)$/;"	f	file:
onenand_recover_lsb	onenand/onenand_base.c	/^static int onenand_recover_lsb(struct mtd_info *mtd, loff_t addr, int status)$/;"	f	file:
onenand_release	onenand/onenand_base.c	/^void onenand_release(struct mtd_info *mtd)$/;"	f
onenand_release_device	onenand/onenand_base.c	/^static void onenand_release_device(struct mtd_info *mtd)$/;"	f	file:
onenand_scan	onenand/onenand_base.c	/^int onenand_scan(struct mtd_info *mtd, int maxchips)$/;"	f
onenand_scan_bbt	onenand/onenand_bbt.c	/^int onenand_scan_bbt(struct mtd_info *mtd, struct nand_bbt_descr *bd)$/;"	f
onenand_sector_address	onenand/onenand_spl.c	28;"	d	file:
onenand_spl_get_geometry	onenand/onenand_spl.c	/^static enum onenand_spl_pagesize onenand_spl_get_geometry(void)$/;"	f	file:
onenand_spl_load_image	onenand/onenand_spl.c	/^void onenand_spl_load_image(uint32_t offs, uint32_t size, void *dst)$/;"	f
onenand_spl_pagesize	onenand/onenand_spl.c	/^enum onenand_spl_pagesize {$/;"	g	file:
onenand_spl_read_block	onenand/onenand_spl.c	/^int onenand_spl_read_block(int block, int offset, int len, void *dst)$/;"	f
onenand_spl_read_page	onenand/onenand_spl.c	/^static int onenand_spl_read_page(uint32_t block, uint32_t page, uint32_t *buf,$/;"	f	file:
onenand_sync	onenand/onenand_base.c	/^void onenand_sync(struct mtd_info *mtd)$/;"	f
onenand_sync_read_bufferram	onenand/onenand_base.c	/^static int onenand_sync_read_bufferram(struct mtd_info *mtd, loff_t addr, int area,$/;"	f	file:
onenand_transfer_auto_oob	onenand/onenand_base.c	/^static int onenand_transfer_auto_oob(struct mtd_info *mtd, uint8_t *buf,$/;"	f	file:
onenand_unlock	onenand/onenand_base.c	/^static int onenand_unlock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
onenand_unlock_all	onenand/onenand_base.c	/^static void onenand_unlock_all(struct mtd_info *mtd)$/;"	f	file:
onenand_update_bufferram	onenand/onenand_base.c	/^static int onenand_update_bufferram(struct mtd_info *mtd, loff_t addr,$/;"	f	file:
onenand_verify	onenand/onenand_base.c	/^static int onenand_verify(struct mtd_info *mtd, const u_char *buf, loff_t addr, size_t len)$/;"	f	file:
onenand_verify	onenand/onenand_base.c	1350;"	d	file:
onenand_verify_oob	onenand/onenand_base.c	/^static int onenand_verify_oob(struct mtd_info *mtd, const u_char *buf, loff_t to)$/;"	f	file:
onenand_verify_oob	onenand/onenand_base.c	1351;"	d	file:
onenand_wait	onenand/onenand_base.c	/^static int onenand_wait(struct mtd_info *mtd, int state)$/;"	f	file:
onenand_write	onenand/onenand_base.c	/^int onenand_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f
onenand_write_bufferram	onenand/onenand_base.c	/^static int onenand_write_bufferram(struct mtd_info *mtd, loff_t addr, int area,$/;"	f	file:
onenand_write_bufferram	onenand/samsung.c	/^static int onenand_write_bufferram(struct mtd_info *mtd, loff_t addr, int area,$/;"	f	file:
onenand_write_oob	onenand/onenand_base.c	/^int onenand_write_oob(struct mtd_info *mtd, loff_t to,$/;"	f
onenand_write_oob_nolock	onenand/onenand_base.c	/^static int onenand_write_oob_nolock(struct mtd_info *mtd, loff_t to,$/;"	f	file:
onenand_write_ops_nolock	onenand/onenand_base.c	/^static int onenand_write_ops_nolock(struct mtd_info *mtd, loff_t to,$/;"	f	file:
onenand_writew	onenand/onenand_base.c	/^static void onenand_writew(unsigned short value, void __iomem * addr)$/;"	f	file:
onenand_writew	onenand/onenand_spl.c	/^static inline void onenand_writew(uint16_t value, uint32_t addr)$/;"	f	file:
onfi_async_timing_mode_to_sdr_timings	nand/nand_timings.c	/^EXPORT_SYMBOL(onfi_async_timing_mode_to_sdr_timings);$/;"	v
onfi_async_timing_mode_to_sdr_timings	nand/nand_timings.c	/^const struct nand_sdr_timings *onfi_async_timing_mode_to_sdr_timings(int mode)$/;"	f
onfi_crc16	nand/nand_base.c	/^static u16 onfi_crc16(u16 crc, u8 const *p, size_t len)$/;"	f	file:
onfi_sdr_timings	nand/nand_timings.c	/^static const struct nand_sdr_timings onfi_sdr_timings[] = {$/;"	v	typeref:struct:nand_sdr_timings	file:
onfi_timing_mode	nand/denali.c	/^static int onfi_timing_mode = NAND_DEFAULT_TIMINGS;$/;"	v	file:
oob	nand/fsl_elbc_nand.c	/^	unsigned int oob;        \/* Non zero if operating on OOB data     *\/$/;"	m	struct:fsl_elbc_ctrl	file:
oob	nand/fsl_ifc_nand.c	/^	unsigned int oob;        \/* Non zero if operating on OOB data     *\/$/;"	m	struct:fsl_ifc_ctrl	file:
oob_2048_ecc4	nand/fsl_ifc_nand.c	/^static struct nand_ecclayout oob_2048_ecc4 = {$/;"	v	typeref:struct:nand_ecclayout	file:
oob_4096_ecc4	nand/fsl_ifc_nand.c	/^static struct nand_ecclayout oob_4096_ecc4 = {$/;"	v	typeref:struct:nand_ecclayout	file:
oob_4096_ecc8	nand/fsl_ifc_nand.c	/^static struct nand_ecclayout oob_4096_ecc8 = {$/;"	v	typeref:struct:nand_ecclayout	file:
oob_512_16bit_ecc4	nand/fsl_ifc_nand.c	/^static struct nand_ecclayout oob_512_16bit_ecc4 = {$/;"	v	typeref:struct:nand_ecclayout	file:
oob_512_8bit_ecc4	nand/fsl_ifc_nand.c	/^static struct nand_ecclayout oob_512_8bit_ecc4 = {$/;"	v	typeref:struct:nand_ecclayout	file:
oob_8192_ecc4	nand/fsl_ifc_nand.c	/^static struct nand_ecclayout oob_8192_ecc4 = {$/;"	v	typeref:struct:nand_ecclayout	file:
oob_8192_ecc8	nand/fsl_ifc_nand.c	/^static struct nand_ecclayout oob_8192_ecc8 = {$/;"	v	typeref:struct:nand_ecclayout	file:
oob_buf	nand/mxs_nand.c	/^	uint8_t		*oob_buf;$/;"	m	struct:mxs_nand_info	file:
oob_buf	onenand/samsung.c	/^	void __iomem	*oob_buf;$/;"	m	struct:s3c_onenand	file:
oob_buff	nand/pxa3xx_nand.c	/^	unsigned char		*oob_buff;$/;"	m	struct:pxa3xx_nand_info	file:
oob_buff_pos	nand/pxa3xx_nand.c	/^	unsigned int		oob_buff_pos;$/;"	m	struct:pxa3xx_nand_info	file:
oob_size	nand/denali_spl.c	/^static int page_size, oob_size, pages_per_block;$/;"	v	file:
oob_size	nand/pxa3xx_nand.c	/^	unsigned int		oob_size;$/;"	m	struct:pxa3xx_nand_info	file:
open_mtd_by_chdev	ubi/build.c	/^static struct mtd_info * __init open_mtd_by_chdev(const char *mtd_dev)$/;"	f	file:
open_mtd_device	ubi/build.c	/^static struct mtd_info * __init open_mtd_device(const char *mtd_dev)$/;"	f	file:
operation	nand/mxc_nand.h	200;"	d
operation	nand/mxc_nand.h	204;"	d
optcr	stm32_flash.h	/^	u32 optcr;$/;"	m	struct:stm32_flash_regs
optcr1	stm32_flash.h	/^	u32 optcr1;$/;"	m	struct:stm32_flash_regs
optkeyr	stm32_flash.h	/^	u32 optkeyr;$/;"	m	struct:stm32_flash_regs
our_mtd	nand/tegra_nand.c	/^static struct mtd_info *our_mtd;$/;"	v	typeref:struct:mtd_info	file:
pad	nand/kirkwood_nand.c	/^	u8  pad[0x10470 - 0x1041c - 4];$/;"	m	struct:kwnandf_registers	file:
pad_addr_bytes	spi/sandbox.c	/^	uint addr_bytes, pad_addr_bytes;$/;"	m	struct:sandbox_spi_flash	file:
padding	ubi/ubi-media.h	/^	__be32 padding[4];$/;"	m	struct:ubi_fm_scan_pool
padding	ubi/ubi-media.h	/^	__u8    padding[23];$/;"	m	struct:ubi_vtbl_record
padding	ubi/ubi-media.h	/^	__u8 padding[4];$/;"	m	struct:ubi_fm_hdr
padding1	ubi/ubi-media.h	/^	__u8    padding1[3];$/;"	m	struct:ubi_ec_hdr
padding1	ubi/ubi-media.h	/^	__u8    padding1[4];$/;"	m	struct:ubi_vid_hdr
padding1	ubi/ubi-media.h	/^	__u8 padding1[3];$/;"	m	struct:ubi_fm_sb
padding1	ubi/ubi-media.h	/^	__u8 padding1[3];$/;"	m	struct:ubi_fm_volhdr
padding2	ubi/ubi-media.h	/^	__u8    padding2[32];$/;"	m	struct:ubi_ec_hdr
padding2	ubi/ubi-media.h	/^	__u8    padding2[4];$/;"	m	struct:ubi_vid_hdr
padding2	ubi/ubi-media.h	/^	__u8 padding2[32];$/;"	m	struct:ubi_fm_sb
padding2	ubi/ubi-media.h	/^	__u8 padding2[8];$/;"	m	struct:ubi_fm_volhdr
padding3	ubi/ubi-media.h	/^	__u8    padding3[12];$/;"	m	struct:ubi_vid_hdr
page	nand/arasan_nfc.c	/^	u32 page;$/;"	m	struct:arasan_nand_info	file:
page	nand/denali.h	/^	uint32_t page;$/;"	m	struct:denali_nand_info
page	nand/fsl_elbc_nand.c	/^	unsigned int page;       \/* Last page written to \/ read from      *\/$/;"	m	struct:fsl_elbc_ctrl	file:
page	nand/fsl_ifc_nand.c	/^	unsigned int page;       \/* Last page written to \/ read from      *\/$/;"	m	struct:fsl_ifc_ctrl	file:
page_addr	nand/mxc_nand.c	/^	unsigned int			page_addr;$/;"	m	struct:mxc_nand_host	file:
page_buf	onenand/samsung.c	/^	void __iomem	*page_buf;$/;"	m	struct:s3c_onenand	file:
page_erase	pic32_flash.c	/^int page_erase(flash_info_t *info, int sect)$/;"	f
page_offset	spi/sf_dataflash.c	/^	unsigned short		page_offset;	\/* offset in flash address *\/$/;"	m	struct:dataflash	file:
page_size	nand/denali_spl.c	/^static int page_size, oob_size, pages_per_block;$/;"	v	file:
page_size	nand/fsl_elbc_nand.c	/^	int page_size;          \/* NAND page size (0=512, 1=2048)    *\/$/;"	m	struct:fsl_elbc_mtd	file:
page_size	nand/sunxi_nand_spl.c	/^	int page_size;$/;"	m	struct:nfc_config	file:
page_size	spi/sf_internal.h	/^	u16		page_size;$/;"	m	struct:spi_flash_info
pageoffset	spi/sf_dataflash.c	/^	uint16_t	pageoffset;$/;"	m	struct:flash_info	file:
pages_per_block	nand/denali_spl.c	/^static int page_size, oob_size, pages_per_block;$/;"	v	file:
pagesize	nand/arasan_nfc.c	/^	u32 pagesize;$/;"	m	struct:arasan_ecc_matrix	file:
pagesize	spi/sf_dataflash.c	/^	uint16_t	pagesize;$/;"	m	struct:flash_info	file:
pagesize	st_smi.c	/^	u32 pagesize;$/;"	m	struct:flash_device	file:
pagesize_2k	nand/mxc_nand.c	/^	int				pagesize_2k;$/;"	m	struct:mxc_nand_host	file:
panic_nand_get_device	nand/nand_base.c	/^static void panic_nand_get_device(struct nand_chip *chip,$/;"	f	file:
panic_nand_wait	nand/nand_base.c	/^static void panic_nand_wait(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
panic_nand_write	nand/nand_base.c	/^static int panic_nand_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
parse_mtd_partitions	mtdpart.c	/^int parse_mtd_partitions(struct mtd_info *master, const char *const *types,$/;"	f
part_block_isbad	mtdpart.c	/^static int part_block_isbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
part_block_isreserved	mtdpart.c	/^static int part_block_isreserved(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
part_block_markbad	mtdpart.c	/^static int part_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
part_erase	mtdpart.c	/^static int part_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
part_get_fact_prot_info	mtdpart.c	/^static int part_get_fact_prot_info(struct mtd_info *mtd, size_t len,$/;"	f	file:
part_get_unmapped_area	mtdpart.c	/^static unsigned long part_get_unmapped_area(struct mtd_info *mtd,$/;"	f	file:
part_get_user_prot_info	mtdpart.c	/^static int part_get_user_prot_info(struct mtd_info *mtd, size_t len,$/;"	f	file:
part_is_locked	mtdpart.c	/^static int part_is_locked(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f	file:
part_lock	mtdpart.c	/^static int part_lock(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f	file:
part_lock_user_prot_reg	mtdpart.c	/^static int part_lock_user_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
part_panic_write	mtdpart.c	/^static int part_panic_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
part_point	mtdpart.c	/^static int part_point(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
part_read	mtdpart.c	/^static int part_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
part_read_fact_prot_reg	mtdpart.c	/^static int part_read_fact_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
part_read_oob	mtdpart.c	/^static int part_read_oob(struct mtd_info *mtd, loff_t from,$/;"	f	file:
part_read_user_prot_reg	mtdpart.c	/^static int part_read_user_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
part_resume	mtdpart.c	/^static void part_resume(struct mtd_info *mtd)$/;"	f	file:
part_suspend	mtdpart.c	/^static int part_suspend(struct mtd_info *mtd)$/;"	f	file:
part_sync	mtdpart.c	/^static void part_sync(struct mtd_info *mtd)$/;"	f	file:
part_unlock	mtdpart.c	/^static int part_unlock(struct mtd_info *mtd, loff_t ofs, uint64_t len)$/;"	f	file:
part_unpoint	mtdpart.c	/^static int part_unpoint(struct mtd_info *mtd, loff_t from, size_t len)$/;"	f	file:
part_write	mtdpart.c	/^static int part_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
part_write_oob	mtdpart.c	/^static int part_write_oob(struct mtd_info *mtd, loff_t to,$/;"	f	file:
part_write_user_prot_reg	mtdpart.c	/^static int part_write_user_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
part_writev	mtdpart.c	/^static int part_writev(struct mtd_info *mtd, const struct kvec *vecs,$/;"	f	file:
parts	nand/pxa3xx_nand.h	/^	const struct mtd_partition		*parts[NUM_CHIP_SELECT];$/;"	m	struct:pxa3xx_nand_platform_data	typeref:struct:pxa3xx_nand_platform_data::mtd_partition
patterns	ubi/io.c	/^static uint8_t patterns[] = {0xa5, 0x5a, 0x0};$/;"	v	file:
pdata	nand/pxa3xx_nand.c	/^	struct pxa3xx_nand_platform_data *pdata;$/;"	m	struct:pxa3xx_nand_info	typeref:struct:pxa3xx_nand_info::pxa3xx_nand_platform_data	file:
peb_buf	ubi/ubi.h	/^	void *peb_buf;$/;"	m	struct:ubi_device
peb_count	ubi/ubi.h	/^	int peb_count;$/;"	m	struct:ubi_device
peb_count	ubispl/ubispl.h	/^	unsigned int			peb_count;$/;"	m	struct:ubi_scan_info
peb_offset	ubispl/ubispl.h	/^	unsigned int			peb_offset;$/;"	m	struct:ubi_scan_info
peb_size	ubi/ubi.h	/^	int peb_size;$/;"	m	struct:ubi_device
pebs	ubi/ubi-media.h	/^	__be32 pebs[UBI_FM_MAX_POOL_SIZE];$/;"	m	struct:ubi_fm_scan_pool
pebs	ubi/ubi.h	/^	int pebs[UBI_FM_MAX_POOL_SIZE];$/;"	m	struct:ubi_fm_pool
pebs	ubispl/ubi-wrapper.h	/^	int pebs[UBI_FM_MAX_POOL_SIZE];$/;"	m	struct:ubi_fm_pool
pgm	nand/arasan_nfc.c	/^	u32 pgm;$/;"	m	struct:arasan_nand_command_format	file:
pgm_reg	nand/arasan_nfc.c	/^	u32 pgm_reg;$/;"	m	struct:nand_regs	file:
pic32_flash	pic32_flash.c	/^U_BOOT_DRIVER(pic32_flash) = {$/;"	v
pic32_flash_bank_init	pic32_flash.c	/^static void pic32_flash_bank_init(flash_info_t *info,$/;"	f	file:
pic32_flash_ids	pic32_flash.c	/^static const struct udevice_id pic32_flash_ids[] = {$/;"	v	typeref:struct:udevice_id	file:
pic32_flash_probe	pic32_flash.c	/^static int pic32_flash_probe(struct udevice *dev)$/;"	f	file:
pic32_reg_nvm	pic32_flash.c	/^struct pic32_reg_nvm {$/;"	s	file:
pkt_reg	nand/arasan_nfc.c	/^	u32 pkt_reg;$/;"	m	struct:nand_regs	file:
plat_cmd_ctrl	nand/nand_plat.c	/^static void plat_cmd_ctrl(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
plat_dev_ready	nand/nand_plat.c	/^static int plat_dev_ready(struct mtd_info *mtd)$/;"	f	file:
plat_dev_ready	nand/nand_plat.c	45;"	d	file:
platform	nand/denali.h	/^	int platform;$/;"	m	struct:denali_nand_info
pmecc	nand/atmel_nand.c	/^	struct pmecc_regs __iomem *pmecc;$/;"	m	struct:atmel_nand_host	typeref:struct:atmel_nand_host::__iomem	file:
pmecc_alpha_to	nand/atmel_nand.c	/^	void __iomem	*pmecc_alpha_to;$/;"	m	struct:atmel_nand_host	file:
pmecc_bytes_per_sector	nand/atmel_nand.c	/^	int		pmecc_bytes_per_sector;$/;"	m	struct:atmel_nand_host	file:
pmecc_choose_ecc	nand/atmel_nand.c	/^static int pmecc_choose_ecc(struct atmel_nand_host *host,$/;"	f	file:
pmecc_config_ecc_layout	nand/atmel_nand.c	/^static void pmecc_config_ecc_layout(struct nand_ecclayout *layout,$/;"	f	file:
pmecc_corr_cap	nand/atmel_nand.c	/^	u8		pmecc_corr_cap;$/;"	m	struct:atmel_nand_host	file:
pmecc_correct_data	nand/atmel_nand.c	/^static void pmecc_correct_data(struct mtd_info *mtd, uint8_t *buf, uint8_t *ecc,$/;"	f	file:
pmecc_correction	nand/atmel_nand.c	/^static int pmecc_correction(struct mtd_info *mtd, u32 pmecc_stat, uint8_t *buf,$/;"	f	file:
pmecc_cw_len	nand/atmel_nand.c	/^	int		pmecc_cw_len;	\/* Length of codeword *\/$/;"	m	struct:atmel_nand_host	file:
pmecc_data_alloc	nand/atmel_nand.c	/^static int pmecc_data_alloc(struct atmel_nand_host *host)$/;"	f	file:
pmecc_data_free	nand/atmel_nand.c	/^static void pmecc_data_free(struct atmel_nand_host *host)$/;"	f	file:
pmecc_degree	nand/atmel_nand.c	/^	int		pmecc_degree;	\/* Degree of remainders *\/$/;"	m	struct:atmel_nand_host	file:
pmecc_delta	nand/atmel_nand.c	/^	int	*pmecc_delta;$/;"	m	struct:atmel_nand_host	file:
pmecc_dmu	nand/atmel_nand.c	/^	int	*pmecc_dmu;$/;"	m	struct:atmel_nand_host	file:
pmecc_err_location	nand/atmel_nand.c	/^static int pmecc_err_location(struct mtd_info *mtd)$/;"	f	file:
pmecc_errloc_regs	nand/atmel_nand_ecc.h	/^struct pmecc_errloc_regs {$/;"	s
pmecc_galois_table	nand/atmel_nand.c	/^static uint16_t *pmecc_galois_table;$/;"	v	file:
pmecc_gen_syndrome	nand/atmel_nand.c	/^static void pmecc_gen_syndrome(struct mtd_info *mtd, int sector)$/;"	f	file:
pmecc_get_alpha_to	nand/atmel_nand.c	/^static void __iomem *pmecc_get_alpha_to(struct atmel_nand_host *host)$/;"	f	file:
pmecc_get_ecc_bytes	nand/atmel_nand.c	/^static int pmecc_get_ecc_bytes(int cap, int sector_size)$/;"	f	file:
pmecc_get_sigma	nand/atmel_nand.c	/^static void pmecc_get_sigma(struct mtd_info *mtd)$/;"	f	file:
pmecc_host	nand/atmel_nand.c	/^static struct atmel_nand_host pmecc_host;$/;"	v	typeref:struct:atmel_nand_host	file:
pmecc_index_of	nand/atmel_nand.c	/^	void __iomem	*pmecc_index_of;$/;"	m	struct:atmel_nand_host	file:
pmecc_index_table_offset	nand/atmel_nand.c	/^	u32		pmecc_index_table_offset;$/;"	m	struct:atmel_nand_host	file:
pmecc_lmu	nand/atmel_nand.c	/^	int16_t	*pmecc_lmu; \/* polynomal order *\/$/;"	m	struct:atmel_nand_host	file:
pmecc_mu	nand/atmel_nand.c	/^	int	*pmecc_mu;$/;"	m	struct:atmel_nand_host	file:
pmecc_partial_syn	nand/atmel_nand.c	/^	int16_t	*pmecc_partial_syn;$/;"	m	struct:atmel_nand_host	file:
pmecc_readb	nand/atmel_nand_ecc.h	37;"	d
pmecc_readl	nand/atmel_nand_ecc.h	34;"	d
pmecc_regs	nand/atmel_nand_ecc.h	/^struct pmecc_regs {$/;"	s
pmecc_rom_base	nand/atmel_nand.c	/^	void __iomem		*pmecc_rom_base;$/;"	m	struct:atmel_nand_host	file:
pmecc_sector_number	nand/atmel_nand.c	/^	int		pmecc_sector_number;$/;"	m	struct:atmel_nand_host	file:
pmecc_sector_size	nand/atmel_nand.c	/^	u16		pmecc_sector_size;$/;"	m	struct:atmel_nand_host	file:
pmecc_si	nand/atmel_nand.c	/^	int16_t	*pmecc_si;$/;"	m	struct:atmel_nand_host	file:
pmecc_smu	nand/atmel_nand.c	/^	int16_t	*pmecc_smu;$/;"	m	struct:atmel_nand_host	file:
pmecc_substitute	nand/atmel_nand.c	/^static void pmecc_substitute(struct mtd_info *mtd)$/;"	f	file:
pmecc_version	nand/atmel_nand.c	/^	u32		pmecc_version;$/;"	m	struct:atmel_nand_host	file:
pmecc_writel	nand/atmel_nand_ecc.h	40;"	d
pmerrloc	nand/atmel_nand.c	/^	struct pmecc_errloc_regs __iomem *pmerrloc;$/;"	m	struct:atmel_nand_host	typeref:struct:atmel_nand_host::__iomem	file:
pnum	ubi/ubi-media.h	/^	__be32 pnum;$/;"	m	struct:ubi_fm_ec
pnum	ubi/ubi-media.h	/^	__be32 pnum[0];$/;"	m	struct:ubi_fm_eba
pnum	ubi/ubi.h	/^	int pnum;$/;"	m	struct:ubi_ainf_peb
pnum	ubi/ubi.h	/^	int pnum;$/;"	m	struct:ubi_wl_entry
power_cut_counter	ubi/ubi.h	/^	unsigned int power_cut_counter;$/;"	m	struct:ubi_debug_info
power_cut_max	ubi/ubi.h	/^	unsigned int power_cut_max;$/;"	m	struct:ubi_debug_info
power_cut_min	ubi/ubi.h	/^	unsigned int power_cut_min;$/;"	m	struct:ubi_debug_info
pq	ubi/ubi.h	/^	struct list_head pq[UBI_PROT_QUEUE_LEN];$/;"	m	struct:ubi_device	typeref:struct:ubi_device::list_head
pq_head	ubi/ubi.h	/^	int pq_head;$/;"	m	struct:ubi_device
pr_fmt	nand/nand_base.c	30;"	d	file:
pr_stamp	nand/bfin_nand.c	22;"	d	file:
pr_stamp	nand/bfin_nand.c	24;"	d	file:
prepare_set_command	nand/pxa3xx_nand.c	/^static int prepare_set_command(struct pxa3xx_nand_info *info, int command,$/;"	f	file:
prepare_start_command	nand/pxa3xx_nand.c	/^static void prepare_start_command(struct pxa3xx_nand_info *info, int command)$/;"	f	file:
print_longlong	cfi_flash.c	/^static void print_longlong (char *str, unsigned long long data)$/;"	f	file:
print_rsvd_warning	ubi/eba.c	/^static void print_rsvd_warning(struct ubi_device *ubi,$/;"	f	file:
printf	nand/s3c2410_nand.c	29;"	d	file:
proc_mtd	mtdcore.c	/^static struct proc_dir_entry *proc_mtd;$/;"	v	typeref:struct:proc_dir_entry	file:
process_lvol	ubi/vtbl.c	/^static struct ubi_vtbl_record *process_lvol(struct ubi_device *ubi,$/;"	f	file:
process_pool_aeb	ubi/fastmap.c	/^static int process_pool_aeb(struct ubi_device *ubi, struct ubi_attach_info *ai,$/;"	f	file:
produce_free_peb	ubi/wl.c	/^static int produce_free_peb(struct ubi_device *ubi)$/;"	f	file:
prot_dataflash	dataflash.c	/^int prot_dataflash (AT91PS_DataFlash pdataFlash, unsigned long addr)$/;"	f
prot_queue_add	ubi/wl.c	/^static void prot_queue_add(struct ubi_device *ubi, struct ubi_wl_entry *e)$/;"	f	file:
prot_queue_del	ubi/wl.c	/^static int prot_queue_del(struct ubi_device *ubi, int pnum)$/;"	f	file:
protection_queue_destroy	ubi/wl.c	/^static void protection_queue_destroy(struct ubi_device *ubi)$/;"	f	file:
ptr	mtdcore.c	/^	void	*ptr;$/;"	m	struct:idr_layer	file:
put_mtd_device	mtdcore.c	/^EXPORT_SYMBOL_GPL(put_mtd_device);$/;"	v
put_mtd_device	mtdcore.c	/^void put_mtd_device(struct mtd_info *mtd)$/;"	f
put_partition_parser	mtdpart.c	734;"	d	file:
pxa3xx_nand_config_flash	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_config_flash(struct pxa3xx_nand_info *info)$/;"	f	file:
pxa3xx_nand_detect_config	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_detect_config(struct pxa3xx_nand_info *info)$/;"	f	file:
pxa3xx_nand_flash	nand/pxa3xx_nand.h	/^struct pxa3xx_nand_flash {$/;"	s
pxa3xx_nand_get_variant	nand/pxa3xx_nand.c	/^static enum pxa3xx_nand_variant pxa3xx_nand_get_variant(void)$/;"	f	file:
pxa3xx_nand_host	nand/pxa3xx_nand.c	/^struct pxa3xx_nand_host {$/;"	s	file:
pxa3xx_nand_info	nand/pxa3xx_nand.c	/^struct pxa3xx_nand_info {$/;"	s	file:
pxa3xx_nand_init_buff	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_init_buff(struct pxa3xx_nand_info *info)$/;"	f	file:
pxa3xx_nand_init_timings	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_init_timings(struct pxa3xx_nand_host *host)$/;"	f	file:
pxa3xx_nand_irq	nand/pxa3xx_nand.c	/^static irqreturn_t pxa3xx_nand_irq(struct pxa3xx_nand_info *info)$/;"	f	file:
pxa3xx_nand_irq_thread	nand/pxa3xx_nand.c	/^static void pxa3xx_nand_irq_thread(struct pxa3xx_nand_info *info)$/;"	f	file:
pxa3xx_nand_platform_data	nand/pxa3xx_nand.h	/^struct pxa3xx_nand_platform_data {$/;"	s
pxa3xx_nand_probe	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_probe(struct pxa3xx_nand_info *info)$/;"	f	file:
pxa3xx_nand_probe_dt	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_probe_dt(struct pxa3xx_nand_info *info)$/;"	f	file:
pxa3xx_nand_read_buf	nand/pxa3xx_nand.c	/^static void pxa3xx_nand_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
pxa3xx_nand_read_byte	nand/pxa3xx_nand.c	/^static uint8_t pxa3xx_nand_read_byte(struct mtd_info *mtd)$/;"	f	file:
pxa3xx_nand_read_page_hwecc	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_read_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
pxa3xx_nand_read_word	nand/pxa3xx_nand.c	/^static u16 pxa3xx_nand_read_word(struct mtd_info *mtd)$/;"	f	file:
pxa3xx_nand_scan	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_scan(struct mtd_info *mtd)$/;"	f	file:
pxa3xx_nand_select_chip	nand/pxa3xx_nand.c	/^static void pxa3xx_nand_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
pxa3xx_nand_sensing	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_sensing(struct pxa3xx_nand_host *host)$/;"	f	file:
pxa3xx_nand_set_sdr_timing	nand/pxa3xx_nand.c	/^static void pxa3xx_nand_set_sdr_timing(struct pxa3xx_nand_host *host,$/;"	f	file:
pxa3xx_nand_set_timing	nand/pxa3xx_nand.c	/^static void pxa3xx_nand_set_timing(struct pxa3xx_nand_host *host,$/;"	f	file:
pxa3xx_nand_start	nand/pxa3xx_nand.c	/^static void pxa3xx_nand_start(struct pxa3xx_nand_info *info)$/;"	f	file:
pxa3xx_nand_timing	nand/pxa3xx_nand.h	/^struct pxa3xx_nand_timing {$/;"	s
pxa3xx_nand_variant	nand/pxa3xx_nand.c	/^enum pxa3xx_nand_variant {$/;"	g	file:
pxa3xx_nand_waitfunc	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_waitfunc(struct mtd_info *mtd, struct nand_chip *this)$/;"	f	file:
pxa3xx_nand_write_buf	nand/pxa3xx_nand.c	/^static void pxa3xx_nand_write_buf(struct mtd_info *mtd,$/;"	f	file:
pxa3xx_nand_write_page_hwecc	nand/pxa3xx_nand.c	/^static int pxa3xx_nand_write_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
pxa3xx_set_datasize	nand/pxa3xx_nand.c	/^static void pxa3xx_set_datasize(struct pxa3xx_nand_info *info,$/;"	f	file:
pxa_ecc_init	nand/pxa3xx_nand.c	/^static int pxa_ecc_init(struct pxa3xx_nand_info *info,$/;"	f	file:
random_garbage	ubi/crc32.c	/^static void random_garbage(unsigned char *buf, size_t len)$/;"	f	file:
random_seed	nand/sunxi_nand_spl.c	/^const uint16_t random_seed[128] = {$/;"	v
randomize	nand/sunxi_nand_spl.c	/^	bool randomize;$/;"	m	struct:nfc_config	file:
raw_oob_mode	nand/mxs_nand.c	/^	uint8_t		raw_oob_mode;$/;"	m	struct:mxs_nand_info	file:
rb	nand/sunxi_nand.c	/^	struct sunxi_nand_rb rb;$/;"	m	struct:sunxi_nand_chip_sel	typeref:struct:sunxi_nand_chip_sel::sunxi_nand_rb	file:
rb	ubi/ubi.h	/^		struct rb_node rb;$/;"	m	union:ubi_ainf_peb::__anon6	typeref:struct:ubi_ainf_peb::__anon6::rb_node
rb	ubi/ubi.h	/^		struct rb_node rb;$/;"	m	union:ubi_wl_entry::__anon5	typeref:struct:ubi_wl_entry::__anon5::rb_node
rb	ubi/ubi.h	/^	struct rb_node rb;$/;"	m	struct:ubi_ainf_volume	typeref:struct:ubi_ainf_volume::rb_node
rb	ubi/ubi.h	/^	struct rb_node rb;$/;"	m	struct:ubi_ltree_entry	typeref:struct:ubi_ltree_entry::rb_node
rd_params	nand/kirkwood_nand.c	/^	u32 rd_params;	\/* 0x10418 *\/$/;"	m	struct:kwnandf_registers	file:
rd_rdid	altera_qspi.c	/^	u32	rd_rdid;$/;"	m	struct:altera_qspi_regs	file:
rd_sid	altera_qspi.c	/^	u32	rd_sid;$/;"	m	struct:altera_qspi_regs	file:
rd_status	altera_qspi.c	/^	u32	rd_status;$/;"	m	struct:altera_qspi_regs	file:
rdy_busy	nand/arasan_nfc.c	/^	u32 rdy_busy;$/;"	m	struct:nand_regs	file:
read	ubispl/ubispl.h	/^	ubispl_read_flash		read;$/;"	m	struct:ubi_scan_info
read_abs_bbt	nand/nand_bbt.c	/^static int read_abs_bbt(struct mtd_info *mtd, uint8_t *buf, struct nand_bbt_descr *td, int chip)$/;"	f	file:
read_abs_bbts	nand/nand_bbt.c	/^static void read_abs_bbts(struct mtd_info *mtd, uint8_t *buf,$/;"	f	file:
read_bar	spi/spi_flash.c	/^static int read_bar(struct spi_flash *flash, const struct spi_flash_info *info)$/;"	f	file:
read_bbt	nand/nand_bbt.c	/^static int read_bbt(struct mtd_info *mtd, uint8_t *buf, int page, int num,$/;"	f	file:
read_buf	nand/tegra_nand.c	/^static void read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
read_byte	nand/tegra_nand.c	/^static uint8_t read_byte(struct mtd_info *mtd)$/;"	f	file:
read_bytes	nand/fsl_elbc_nand.c	/^	unsigned int read_bytes; \/* Number of bytes read during command   *\/$/;"	m	struct:fsl_elbc_ctrl	file:
read_bytes	nand/fsl_ifc_nand.c	/^	unsigned int read_bytes; \/* Number of bytes read during command   *\/$/;"	m	struct:fsl_ifc_ctrl	file:
read_cr	spi/spi_flash.c	/^static int read_cr(struct spi_flash *flash, u8 *rc)$/;"	f	file:
read_data	nand/kmeter1_nand.c	17;"	d	file:
read_data_from_flash_mem	nand/denali.c	/^static int read_data_from_flash_mem(struct denali_nand_info *denali,$/;"	f	file:
read_data_from_flash_mem	nand/denali_spl.c	/^static void read_data_from_flash_mem(uint8_t *buf, int len)$/;"	f	file:
read_dataflash	dataflash.c	/^int read_dataflash (unsigned long addr, unsigned long size, char *result)$/;"	f
read_fsr	spi/spi_flash.c	/^static int read_fsr(struct spi_flash *flash, u8 *fsr)$/;"	f	file:
read_id_bytes	nand/pxa3xx_nand.c	/^	size_t			read_id_bytes;$/;"	m	struct:pxa3xx_nand_host	file:
read_interrupt_status	nand/denali.c	/^static uint32_t read_interrupt_status(struct denali_nand_info *denali)$/;"	f	file:
read_mode	nand/kmeter1_nand.c	15;"	d	file:
read_oob_data	nand/denali.c	/^static void read_oob_data(struct mtd_info *mtd, uint8_t *buf, int page)$/;"	f	file:
read_single_page	nand/lpc32xx_nand_mlc.c	/^static int read_single_page(uint8_t *dest, int page,$/;"	f	file:
read_sr	spi/spi_flash.c	/^static int read_sr(struct spi_flash *flash, u8 *rs)$/;"	f	file:
readers	ubi/ubi.h	/^	int readers;$/;"	m	struct:ubi_volume
readnfc	nand/mxc_nand.h	201;"	d
readnfc	nand/mxc_nand.h	205;"	d
recover_peb	ubi/eba.c	/^static int recover_peb(struct ubi_device *ubi, int pnum, int vol_id, int lnum,$/;"	f	file:
ref_count	ubi/ubi.h	/^	int ref_count;$/;"	m	struct:ubi_device
ref_count	ubi/ubi.h	/^	int ref_count;$/;"	m	struct:ubi_volume
reg	nand/tegra_nand.c	/^	struct nand_ctlr *reg;$/;"	m	struct:fdt_nand	typeref:struct:fdt_nand::nand_ctlr	file:
reg	nand/tegra_nand.c	/^	struct nand_ctlr *reg;$/;"	m	struct:nand_drv	typeref:struct:nand_drv::nand_ctlr	file:
reg	onenand/samsung.c	/^	struct samsung_onenand *reg;$/;"	m	struct:s3c_onenand	typeref:struct:s3c_onenand::samsung_onenand	file:
reg_ndcr	nand/pxa3xx_nand.c	/^	uint32_t		reg_ndcr;$/;"	m	struct:pxa3xx_nand_info	file:
regions	jedec_flash.c	/^	const ulong regions[6];$/;"	m	struct:amd_flash_info	file:
register_mtd_parser	mtdpart.c	/^EXPORT_SYMBOL_GPL(register_mtd_parser);$/;"	v
register_mtd_parser	mtdpart.c	/^void register_mtd_parser(struct mtd_part_parser *p)$/;"	f
register_mtd_user	mtdcore.c	/^EXPORT_SYMBOL_GPL(register_mtd_user);$/;"	v
register_mtd_user	mtdcore.c	/^void register_mtd_user (struct mtd_notifier *new)$/;"	f
regs	altera_qspi.c	/^	struct altera_qspi_regs *regs;$/;"	m	struct:altera_qspi_platdata	typeref:struct:altera_qspi_platdata::altera_qspi_regs	file:
regs	nand/fsl_elbc_nand.c	/^	fsl_lbc_t *regs;$/;"	m	struct:fsl_elbc_ctrl	file:
regs	nand/fsl_ifc_nand.c	/^	struct fsl_ifc regs;$/;"	m	struct:fsl_ifc_ctrl	typeref:struct:fsl_ifc_ctrl::fsl_ifc	file:
regs	nand/mpc5121_nfc.c	/^	void __iomem *regs;$/;"	m	struct:mpc5121_nfc_prv	file:
regs	nand/mxc_nand.c	/^	struct mxc_nand_regs __iomem	*regs;$/;"	m	struct:mxc_nand_host	typeref:struct:mxc_nand_host::__iomem	file:
regs	nand/sunxi_nand.c	/^	void __iomem *regs;$/;"	m	struct:sunxi_nfc	file:
regs	nand/vf610_nfc.c	/^	void __iomem *regs;$/;"	m	struct:vf610_nfc	file:
rem	nand/atmel_nand_ecc.h	/^		u32 rem[16];$/;"	m	struct:pmecc_regs::__anon22
rem_port	nand/atmel_nand_ecc.h	/^	} rem_port[PMECC_MAX_SECTOR_NUM];$/;"	m	struct:pmecc_regs	typeref:struct:pmecc_regs::__anon22
remove	ubi/ubi.h	/^	int remove;$/;"	m	struct:ubi_rename_entry
reserved0	nand/atmel_nand_ecc.h	/^	u32 reserved0;	\/* 0x24 Reserved *\/$/;"	m	struct:pmecc_errloc_regs
reserved0	nand/atmel_nand_ecc.h	/^	u32 reserved0[5];	\/* 0x2C-0x3C Reserved *\/$/;"	m	struct:pmecc_regs
reserved0	nand/zynq_nand.c	/^	u32 reserved0[2];$/;"	m	struct:zynq_nand_smc_regs	file:
reserved1	nand/atmel_nand_ecc.h	/^		u32 reserved1[2];$/;"	m	struct:pmecc_regs::__anon21
reserved1	nand/atmel_nand_ecc.h	/^	u32 reserved1[53];$/;"	m	struct:pmecc_errloc_regs
reserved1	nand/atmel_nand_ecc.h	/^	u32 reserved1[5];	\/* 0xEC-0xFC Reserved *\/$/;"	m	struct:pmecc_errloc_regs
reserved1	nand/mxc_nand.h	/^	u8 reserved1[NAND_MXC_REG_OFFSET$/;"	m	struct:mxc_nand_regs
reserved1	nand/zynq_nand.c	/^	u32 reserved1[249];$/;"	m	struct:zynq_nand_smc_regs	file:
reserved2	nand/atmel_nand_ecc.h	/^	u32 reserved2[63];$/;"	m	struct:pmecc_errloc_regs
reserved2	nand/mxc_nand.h	/^	u16 reserved2;$/;"	m	struct:mxc_nand_regs
reserved2	nand/mxc_nand.h	/^	u16 reserved2[2];$/;"	m	struct:mxc_nand_regs
reserved2	nand/zynq_nand.c	/^	u32 reserved2[2];$/;"	m	struct:zynq_nand_smc_regs	file:
reserved3	nand/atmel_nand_ecc.h	/^	u32 reserved3[16];	\/* 0x440-0x47C Reserved *\/$/;"	m	struct:pmecc_regs
reserved3	nand/mxc_nand.h	/^	u16 reserved3[2];$/;"	m	struct:mxc_nand_regs
reserved4	nand/mxc_nand.h	/^	u16 reserved4;$/;"	m	struct:mxc_nand_regs
reserved_pebs	ubi/ubi-media.h	/^	__be32  reserved_pebs;$/;"	m	struct:ubi_vtbl_record
reserved_pebs	ubi/ubi-media.h	/^	__be32 reserved_pebs;$/;"	m	struct:ubi_fm_eba
reserved_pebs	ubi/ubi.h	/^	int reserved_pebs;$/;"	m	struct:ubi_volume
reset_bank	nand/denali.c	/^static void reset_bank(struct denali_nand_info *denali)$/;"	f	file:
reset_buf	nand/denali.c	/^static void reset_buf(struct denali_nand_info *denali)$/;"	f	file:
reset_ecc	nand/bfin_nand.c	/^static void reset_ecc(void)$/;"	f	file:
resp	nand/tegra_nand.h	/^	u32	resp;		\/* offset 18h *\/$/;"	m	struct:nand_ctlr
resv1	nand/tegra_nand.h	/^	u32	resv1;		\/* offset 48h *\/$/;"	m	struct:nand_ctlr
resv2	nand/tegra_nand.h	/^	u32	resv2[29];$/;"	m	struct:nand_ctlr
retcode	nand/pxa3xx_nand.c	/^	int			retcode;$/;"	m	struct:pxa3xx_nand_info	file:
return_fm_pebs	ubi/fastmap.c	/^static void return_fm_pebs(struct ubi_device *ubi,$/;"	f	file:
return_unused_pool_pebs	ubi/fastmap-wl.c	/^static void return_unused_pool_pebs(struct ubi_device *ubi,$/;"	f	file:
ro_mode	ubi/ubi.h	/^	int ro_mode;$/;"	m	struct:ubi_device
robp	nand/lpc32xx_nand_mlc.c	/^	u32 robp;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
root	ubi/ubi.h	/^	struct rb_root root;$/;"	m	struct:ubi_ainf_volume	typeref:struct:ubi_ainf_volume::rb_root
row_addr_cycles	nand/pxa3xx_nand.c	/^	unsigned int		row_addr_cycles;$/;"	m	struct:pxa3xx_nand_host	file:
rpr	nand/lpc32xx_nand_mlc.c	/^	u32 rpr;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
rsltmain_area	nand/mxc_nand.h	/^	u16 rsltmain_area;$/;"	m	struct:mxc_nand_regs
rsltspare_area	nand/mxc_nand.h	/^	u16 rsltspare_area;$/;"	m	struct:mxc_nand_regs
rsvd_pebs	ubi/ubi.h	/^	int rsvd_pebs;$/;"	m	struct:ubi_device
rubp	nand/lpc32xx_nand_mlc.c	/^	u32 rubp;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
runtime_regs_address	nand/fsl_ifc_spl.c	/^static inline struct fsl_ifc_runtime *runtime_regs_address(void)$/;"	f	file:
s3c24x0_dev_ready	nand/s3c2410_nand.c	/^static int s3c24x0_dev_ready(struct mtd_info *mtd)$/;"	f	file:
s3c24x0_hwcontrol	nand/s3c2410_nand.c	/^static void s3c24x0_hwcontrol(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
s3c24x0_nand_calculate_ecc	nand/s3c2410_nand.c	/^static int s3c24x0_nand_calculate_ecc(struct mtd_info *mtd, const u_char *dat,$/;"	f	file:
s3c24x0_nand_correct_data	nand/s3c2410_nand.c	/^static int s3c24x0_nand_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
s3c24x0_nand_enable_hwecc	nand/s3c2410_nand.c	/^void s3c24x0_nand_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f
s3c_get_bufferram	onenand/samsung.c	/^static unsigned char *s3c_get_bufferram(struct mtd_info *mtd, int area)$/;"	f	file:
s3c_mem_addr	onenand/samsung.c	/^static unsigned int s3c_mem_addr(int fba, int fpa, int fsa)$/;"	f	file:
s3c_onenand	onenand/samsung.c	/^struct s3c_onenand {$/;"	s	file:
s3c_onenand_bbt_wait	onenand/samsung.c	/^static int s3c_onenand_bbt_wait(struct mtd_info *mtd, int state)$/;"	f	file:
s3c_onenand_check_lock_status	onenand/samsung.c	/^static void s3c_onenand_check_lock_status(struct mtd_info *mtd)$/;"	f	file:
s3c_onenand_command	onenand/samsung.c	/^static int s3c_onenand_command(struct mtd_info *mtd, int cmd,$/;"	f	file:
s3c_onenand_do_lock_cmd	onenand/samsung.c	/^static void s3c_onenand_do_lock_cmd(struct mtd_info *mtd, loff_t ofs,$/;"	f	file:
s3c_onenand_init	onenand/samsung.c	/^void s3c_onenand_init(struct mtd_info *mtd)$/;"	f
s3c_onenand_readw	onenand/samsung.c	/^static unsigned short s3c_onenand_readw(void __iomem *addr)$/;"	f	file:
s3c_onenand_reset	onenand/samsung.c	/^static void s3c_onenand_reset(void)$/;"	f	file:
s3c_onenand_unlock_all	onenand/samsung.c	/^static void s3c_onenand_unlock_all(struct mtd_info *mtd)$/;"	f	file:
s3c_onenand_wait	onenand/samsung.c	/^static int s3c_onenand_wait(struct mtd_info *mtd, int state)$/;"	f	file:
s3c_onenand_writew	onenand/samsung.c	/^static void s3c_onenand_writew(unsigned short value, void __iomem *addr)$/;"	f	file:
s3c_read_cmd	onenand/samsung.c	/^static int s3c_read_cmd(unsigned int cmd)$/;"	f	file:
s3c_write_cmd	onenand/samsung.c	/^static void s3c_write_cmd(int value, unsigned int cmd)$/;"	f	file:
s5pc110_chip_probe	onenand/samsung.c	/^int s5pc110_chip_probe(struct mtd_info *mtd)$/;"	f
s5pc210_chip_probe	onenand/samsung.c	/^int s5pc210_chip_probe(struct mtd_info *mtd)$/;"	f
saddr	nand/atmel_nand_ecc.h	/^	u32 saddr;		\/* 0x08 PMECC Start Address Register *\/$/;"	m	struct:pmecc_regs
sandbox_cmdline_cb_spi_sf	spi/sandbox.c	/^static int sandbox_cmdline_cb_spi_sf(struct sandbox_state *state,$/;"	f	file:
sandbox_erase_part	spi/sandbox.c	/^int sandbox_erase_part(struct sandbox_spi_flash *sbsf, int size)$/;"	f
sandbox_sf_0xff	spi/sandbox.c	/^static u8 sandbox_sf_0xff[0x1000];$/;"	v	file:
sandbox_sf_bind_bus_cs	spi/sandbox.c	/^static int sandbox_sf_bind_bus_cs(struct sandbox_state *state, int busnum,$/;"	f	file:
sandbox_sf_bind_emul	spi/sandbox.c	/^int sandbox_sf_bind_emul(struct sandbox_state *state, int busnum, int cs,$/;"	f
sandbox_sf_cs_activate	spi/sandbox.c	/^static void sandbox_sf_cs_activate(struct udevice *dev)$/;"	f	file:
sandbox_sf_cs_deactivate	spi/sandbox.c	/^static void sandbox_sf_cs_deactivate(struct udevice *dev)$/;"	f	file:
sandbox_sf_emul	spi/sandbox.c	/^U_BOOT_DRIVER(sandbox_sf_emul) = {$/;"	v
sandbox_sf_emul_ops	spi/sandbox.c	/^static const struct dm_spi_emul_ops sandbox_sf_emul_ops = {$/;"	v	typeref:struct:dm_spi_emul_ops	file:
sandbox_sf_ids	spi/sandbox.c	/^static const struct udevice_id sandbox_sf_ids[] = {$/;"	v	typeref:struct:udevice_id	file:
sandbox_sf_ofdata_to_platdata	spi/sandbox.c	/^int sandbox_sf_ofdata_to_platdata(struct udevice *dev)$/;"	f
sandbox_sf_probe	spi/sandbox.c	/^static int sandbox_sf_probe(struct udevice *dev)$/;"	f	file:
sandbox_sf_process_cmd	spi/sandbox.c	/^static int sandbox_sf_process_cmd(struct sandbox_spi_flash *sbsf, const u8 *rx,$/;"	f	file:
sandbox_sf_remove	spi/sandbox.c	/^static int sandbox_sf_remove(struct udevice *dev)$/;"	f	file:
sandbox_sf_state	spi/sandbox.c	/^enum sandbox_sf_state {$/;"	g	file:
sandbox_sf_state_name	spi/sandbox.c	/^static const char *sandbox_sf_state_name(enum sandbox_sf_state state)$/;"	f	file:
sandbox_sf_unbind_emul	spi/sandbox.c	/^void sandbox_sf_unbind_emul(struct sandbox_state *state, int busnum, int cs)$/;"	f
sandbox_sf_xfer	spi/sandbox.c	/^static int sandbox_sf_xfer(struct udevice *dev, unsigned int bitlen,$/;"	f	file:
sandbox_spi_flash	spi/sandbox.c	/^struct sandbox_spi_flash {$/;"	s	file:
sandbox_spi_flash_plat_data	spi/sandbox.c	/^struct sandbox_spi_flash_plat_data {$/;"	s	file:
sandbox_spi_get_emul	spi/sandbox.c	/^int sandbox_spi_get_emul(struct sandbox_state *state,$/;"	f
sandbox_spi_tristate	spi/sandbox.c	/^static void sandbox_spi_tristate(u8 *buf, uint len)$/;"	f	file:
sanitize_string	nand/nand_base.c	/^static void sanitize_string(char *s, size_t len)$/;"	f	file:
sarea	nand/atmel_nand_ecc.h	/^	u32 sarea;		\/* 0x04 PMECC Spare Area Size Register *\/$/;"	m	struct:pmecc_regs
scan_all	ubi/attach.c	/^static int scan_all(struct ubi_device *ubi, struct ubi_attach_info *ai,$/;"	f	file:
scan_block_fast	nand/nand_bbt.c	/^static int scan_block_fast(struct mtd_info *mtd, struct nand_bbt_descr *bd,$/;"	f	file:
scan_fast	ubi/attach.c	/^static int scan_fast(struct ubi_device *ubi, struct ubi_attach_info **ai)$/;"	f	file:
scan_ff_pattern	nand/fsl_elbc_nand.c	/^static u8 scan_ff_pattern[] = { 0xff, };$/;"	v	file:
scan_ff_pattern	nand/nand_bbt.c	/^static uint8_t scan_ff_pattern[] = { 0xff, 0xff };$/;"	v	file:
scan_ff_pattern	onenand/onenand_bbt.c	/^static uint8_t scan_ff_pattern[] = { 0xff, 0xff };$/;"	v	file:
scan_peb	ubi/attach.c	/^static int scan_peb(struct ubi_device *ubi, struct ubi_attach_info *ai,$/;"	f	file:
scan_pool	ubi/fastmap.c	/^static int scan_pool(struct ubi_device *ubi, struct ubi_attach_info *ai,$/;"	f	file:
scan_pool	ubispl/ubispl.c	/^static int scan_pool(struct ubi_scan_info *ubi, __be32 *pebs, int pool_size)$/;"	f	file:
scan_read	nand/nand_bbt.c	/^static int scan_read(struct mtd_info *mtd, uint8_t *buf, loff_t offs,$/;"	f	file:
scan_read_data	nand/nand_bbt.c	/^static int scan_read_data(struct mtd_info *mtd, uint8_t *buf, loff_t offs,$/;"	f	file:
scan_read_oob	nand/nand_bbt.c	/^static int scan_read_oob(struct mtd_info *mtd, uint8_t *buf, loff_t offs,$/;"	f	file:
scan_write_bbt	nand/nand_bbt.c	/^static int scan_write_bbt(struct mtd_info *mtd, loff_t offs, size_t len,$/;"	f	file:
scanned	ubispl/ubispl.h	/^	unsigned long			scanned[UBI_FM_BM_SIZE];$/;"	m	struct:ubi_scan_info
schedule_erase	ubi/wl.c	/^static int schedule_erase(struct ubi_device *ubi, struct ubi_wl_entry *e,$/;"	f	file:
schedule_ubi_work	ubi/wl.c	/^static void schedule_ubi_work(struct ubi_device *ubi, struct ubi_work *wrk)$/;"	f	file:
scr	nand/zynq_nand.c	/^	u32 scr;		\/* 0x14 *\/$/;"	m	struct:zynq_nand_smc_regs	file:
scratch_buf	nand/nand_spl_simple.c	/^static u8 scratch_buf[CONFIG_SYS_NAND_PAGE_SIZE];$/;"	v	file:
scratch_buf	onenand/onenand_spl.c	/^static u8 scratch_buf[PAGE_4K];$/;"	v	file:
scrub	ubi/ubi.h	/^	struct rb_root scrub;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rb_root
scrub	ubi/ubi.h	/^	unsigned int scrub:1;$/;"	m	struct:ubi_ainf_peb
scrub_peb_count	ubi/ubi-media.h	/^	__be32 scrub_peb_count;$/;"	m	struct:ubi_fm_hdr
search_bbt	nand/nand_bbt.c	/^static int search_bbt(struct mtd_info *mtd, uint8_t *buf, struct nand_bbt_descr *td)$/;"	f	file:
search_read_bbts	nand/nand_bbt.c	/^static void search_read_bbts(struct mtd_info *mtd, uint8_t *buf,$/;"	f	file:
sector_erased	cfi_flash.c	/^static int sector_erased(flash_info_t *info, int i)$/;"	f	file:
sector_size	spi/sf_internal.h	/^	u32		sector_size;$/;"	m	struct:spi_flash_info
sectorsize	st_smi.c	/^	unsigned long sectorsize;$/;"	m	struct:flash_device	file:
selected	nand/sunxi_nand.c	/^	int selected;$/;"	m	struct:sunxi_nand_chip	file:
self_check_ai	ubi/attach.c	/^static int self_check_ai(struct ubi_device *ubi, struct ubi_attach_info *ai)$/;"	f	file:
self_check_eba	ubi/eba.c	/^int self_check_eba(struct ubi_device *ubi, struct ubi_attach_info *ai_fastmap,$/;"	f
self_check_ec	ubi/wl.c	/^static int self_check_ec(struct ubi_device *ubi, int pnum, int ec)$/;"	f	file:
self_check_ec_hdr	ubi/io.c	/^static int self_check_ec_hdr(const struct ubi_device *ubi, int pnum,$/;"	f	file:
self_check_in_pq	ubi/wl.c	/^static int self_check_in_pq(const struct ubi_device *ubi,$/;"	f	file:
self_check_in_wl_tree	ubi/wl.c	/^static int self_check_in_wl_tree(const struct ubi_device *ubi,$/;"	f	file:
self_check_not_bad	ubi/io.c	/^static int self_check_not_bad(const struct ubi_device *ubi, int pnum)$/;"	f	file:
self_check_peb_ec_hdr	ubi/io.c	/^static int self_check_peb_ec_hdr(const struct ubi_device *ubi, int pnum)$/;"	f	file:
self_check_peb_vid_hdr	ubi/io.c	/^static int self_check_peb_vid_hdr(const struct ubi_device *ubi, int pnum)$/;"	f	file:
self_check_seen	ubi/fastmap.c	/^static int self_check_seen(struct ubi_device *ubi, int *seen)$/;"	f	file:
self_check_vid_hdr	ubi/io.c	/^static int self_check_vid_hdr(const struct ubi_device *ubi, int pnum,$/;"	f	file:
self_check_volume	ubi/vmt.c	/^static int self_check_volume(struct ubi_device *ubi, int vol_id)$/;"	f	file:
self_check_volumes	ubi/vmt.c	/^static int self_check_volumes(struct ubi_device *ubi)$/;"	f	file:
self_check_write	ubi/io.c	/^static int self_check_write(struct ubi_device *ubi, const void *buf, int pnum,$/;"	f	file:
self_vtbl_check	ubi/vtbl.c	/^static void self_vtbl_check(const struct ubi_device *ubi)$/;"	f	file:
sels	nand/sunxi_nand.c	/^	struct sunxi_nand_chip_sel sels[0];$/;"	m	struct:sunxi_nand_chip	typeref:struct:sunxi_nand_chip::sunxi_nand_chip_sel	file:
send_addr	nand/mxc_nand.c	/^static void send_addr(struct mxc_nand_host *host, uint16_t addr)$/;"	f	file:
send_cmd	nand/mxc_nand.c	/^static void send_cmd(struct mxc_nand_host *host, uint16_t cmd)$/;"	f	file:
send_prog_page	nand/mxc_nand.c	/^static void send_prog_page(struct mxc_nand_host *host, uint8_t buf_id,$/;"	f	file:
send_read_id	nand/mxc_nand.c	/^static void send_read_id(struct mxc_nand_host *host)$/;"	f	file:
send_read_page	nand/mxc_nand.c	/^static void send_read_page(struct mxc_nand_host *host, uint8_t buf_id,$/;"	f	file:
serve_prot_queue	ubi/wl.c	/^static void serve_prot_queue(struct ubi_device *ubi)$/;"	f	file:
set_addr	nand/fsl_elbc_nand.c	/^static void set_addr(struct mtd_info *mtd, int column, int page_addr, int oob)$/;"	f	file:
set_addr	nand/fsl_ifc_nand.c	/^static void set_addr(struct mtd_info *mtd, int column, int page_addr, int oob)$/;"	f	file:
set_bus_width_page_size	nand/tegra_nand.c	/^static int set_bus_width_page_size(struct fdt_nand *config,$/;"	f	file:
set_command_address	nand/pxa3xx_nand.c	/^static void set_command_address(struct pxa3xx_nand_info *info,$/;"	f	file:
set_quad_mode	spi/spi_flash.c	/^static int set_quad_mode(struct spi_flash *flash,$/;"	f	file:
set_seen	ubi/fastmap.c	/^static inline void set_seen(struct ubi_device *ubi, int pnum, int *seen)$/;"	f	file:
set_update_marker	ubi/upd.c	/^static int set_update_marker(struct ubi_device *ubi, struct ubi_volume *vol)$/;"	f	file:
setup_ecc_for_xfer	nand/denali.c	/^static void setup_ecc_for_xfer(struct denali_nand_info *denali, bool ecc_en,$/;"	f	file:
setup_timing	nand/tegra_nand.c	/^static void setup_timing(unsigned timing[FDT_NAND_TIMING_COUNT],$/;"	f	file:
sf_mtd_info	spi/sf_mtd.c	/^static struct mtd_info sf_mtd_info;$/;"	v	typeref:struct:mtd_info	file:
sf_mtd_name	spi/sf_mtd.c	/^static char sf_mtd_name[8];$/;"	v	file:
shutdown_work	ubi/wl.c	/^static void shutdown_work(struct ubi_device *ubi)$/;"	f	file:
sigma	nand/atmel_nand_ecc.h	/^	u32 sigma[25];	\/* 0x28-0x88 Error Location Sigma Registers *\/$/;"	m	struct:pmecc_errloc_regs
sigma	nand/atmel_nand_ecc.h	/^	u32 sigma[33];	\/* 0x28-0xA8 Error Location Sigma Registers *\/$/;"	m	struct:pmecc_errloc_regs
single_erase	nand/nand_base.c	/^static int single_erase(struct mtd_info *mtd, int page)$/;"	f	file:
size	altera_qspi.c	/^	unsigned long size;$/;"	m	struct:altera_qspi_platdata	file:
size	ubi/ubi-media.h	/^	__be16 size;$/;"	m	struct:ubi_fm_scan_pool
size	ubi/ubi.h	/^	int size;$/;"	m	struct:ubi_fm_pool
size	ubispl/ubi-wrapper.h	/^	int size;$/;"	m	struct:ubi_fm_pool
size_dataflash	dataflash.c	/^int size_dataflash (AT91PS_DataFlash pdataFlash, unsigned long addr,$/;"	f
size_in_bytes	st_smi.c	/^	unsigned long size_in_bytes;$/;"	m	struct:flash_device	file:
slc_ecc_copy_to_buffer	nand/lpc32xx_nand_slc.c	/^static u32 slc_ecc_copy_to_buffer(u8 *spare, const u32 *ecc, int count)$/;"	f	file:
smi_init	st_smi.c	/^void smi_init(void)$/;"	f
smi_read_id	st_smi.c	/^static unsigned int smi_read_id(flash_info_t *info, int banknum)$/;"	f	file:
smi_read_sr	st_smi.c	/^static int smi_read_sr(int bank)$/;"	f	file:
smi_sector_erase	st_smi.c	/^static int smi_sector_erase(flash_info_t *info, unsigned int sector)$/;"	f	file:
smi_wait_till_ready	st_smi.c	/^static int smi_wait_till_ready(int bank, int timeout)$/;"	f	file:
smi_wait_xfer_finish	st_smi.c	/^static int smi_wait_xfer_finish(int timeout)$/;"	f	file:
smi_write	st_smi.c	/^static int smi_write(unsigned int *src_addr, unsigned int *dst_addr,$/;"	f	file:
smi_write_enable	st_smi.c	/^static int smi_write_enable(int bank)$/;"	f	file:
smicntl	st_smi.c	/^static struct smi_regs *const smicntl =$/;"	v	file:
sor	nand/zynq_nand.c	/^	u32 sor;		\/* 0x18 *\/$/;"	m	struct:zynq_nand_smc_regs	file:
spansion_quad_enable	spi/spi_flash.c	/^static int spansion_quad_enable(struct spi_flash *flash)$/;"	f	file:
spare_area	nand/mxc_nand.h	/^	u8 spare_area[NAND_MXC_NR_BUFS][NAND_MXC_SPARE_BUF_SIZE];$/;"	m	struct:mxc_nand_regs
spare_area_size	nand/mxc_nand.h	/^	u16 spare_area_size;$/;"	m	struct:mxc_nand_regs
spare_only	nand/mxc_nand.c	/^	int				spare_only;$/;"	m	struct:mxc_nand_host	file:
spare_size	nand/pxa3xx_nand.c	/^	unsigned int		spare_size;$/;"	m	struct:pxa3xx_nand_info	file:
spareonly	nand/mpc5121_nfc.c	/^	int spareonly;$/;"	m	struct:mpc5121_nfc_prv	file:
spi0_deinit	spi/sunxi_spi_spl.c	/^static void spi0_deinit(void)$/;"	f	file:
spi0_disable_clock	spi/sunxi_spi_spl.c	/^static void spi0_disable_clock(void)$/;"	f	file:
spi0_enable_clock	spi/sunxi_spi_spl.c	/^static void spi0_enable_clock(void)$/;"	f	file:
spi0_init	spi/sunxi_spi_spl.c	/^static void spi0_init(void)$/;"	f	file:
spi0_pinmux_setup	spi/sunxi_spi_spl.c	/^static void spi0_pinmux_setup(unsigned int pin_function)$/;"	f	file:
spi0_read_data	spi/sunxi_spi_spl.c	/^static void spi0_read_data(void *buf, u32 addr, u32 len)$/;"	f	file:
spi_dataflash	spi/sf_dataflash.c	/^U_BOOT_DRIVER(spi_dataflash) = {$/;"	v
spi_dataflash_erase	spi/sf_dataflash.c	/^static int spi_dataflash_erase(struct udevice *dev, u32 offset, size_t len)$/;"	f	file:
spi_dataflash_ids	spi/sf_dataflash.c	/^static const struct udevice_id spi_dataflash_ids[] = {$/;"	v	typeref:struct:udevice_id	file:
spi_dataflash_ops	spi/sf_dataflash.c	/^static const struct dm_spi_flash_ops spi_dataflash_ops = {$/;"	v	typeref:struct:dm_spi_flash_ops	file:
spi_dataflash_probe	spi/sf_dataflash.c	/^static int spi_dataflash_probe(struct udevice *dev)$/;"	f	file:
spi_dataflash_read	spi/sf_dataflash.c	/^static int spi_dataflash_read(struct udevice *dev, u32 offset, size_t len,$/;"	f	file:
spi_dataflash_write	spi/sf_dataflash.c	/^int spi_dataflash_write(struct udevice *dev, u32 offset, size_t len,$/;"	f
spi_dual_flash	spi/sf_internal.h	/^enum spi_dual_flash {$/;"	g
spi_flash	spi/sf-uclass.c	/^UCLASS_DRIVER(spi_flash) = {$/;"	v
spi_flash_addr	spi/spi_flash.c	/^static void spi_flash_addr(u32 addr, u8 *cmd)$/;"	f	file:
spi_flash_cmd	spi/sf.c	/^int spi_flash_cmd(struct spi_slave *spi, u8 cmd, void *response, size_t len)$/;"	f
spi_flash_cmd_erase_ops	spi/spi_flash.c	/^int spi_flash_cmd_erase_ops(struct spi_flash *flash, u32 offset, size_t len)$/;"	f
spi_flash_cmd_read	spi/sf.c	/^int spi_flash_cmd_read(struct spi_slave *spi, const u8 *cmd,$/;"	f
spi_flash_cmd_read_ops	spi/spi_flash.c	/^int spi_flash_cmd_read_ops(struct spi_flash *flash, u32 offset,$/;"	f
spi_flash_cmd_write	spi/sf.c	/^int spi_flash_cmd_write(struct spi_slave *spi, const u8 *cmd, size_t cmd_len,$/;"	f
spi_flash_cmd_write_disable	spi/sf_internal.h	/^static inline int spi_flash_cmd_write_disable(struct spi_flash *flash)$/;"	f
spi_flash_cmd_write_enable	spi/sf_internal.h	/^static inline int spi_flash_cmd_write_enable(struct spi_flash *flash)$/;"	f
spi_flash_cmd_write_ops	spi/spi_flash.c	/^int spi_flash_cmd_write_ops(struct spi_flash *flash, u32 offset,$/;"	f
spi_flash_copy_mmap	spi/spi_flash.c	/^void __weak spi_flash_copy_mmap(void *data, void *offset, size_t len)$/;"	f
spi_flash_decode_fdt	spi/spi_flash.c	/^int spi_flash_decode_fdt(const void *blob, struct spi_flash *flash)$/;"	f
spi_flash_dual	spi/spi_flash.c	/^static void spi_flash_dual(struct spi_flash *flash, u32 *addr)$/;"	f	file:
spi_flash_erase_dm	spi/sf-uclass.c	/^int spi_flash_erase_dm(struct udevice *dev, u32 offset, size_t len)$/;"	f
spi_flash_free	spi/sf-uclass.c	/^void spi_flash_free(struct spi_flash *flash)$/;"	f
spi_flash_free	spi/sf_probe.c	/^void spi_flash_free(struct spi_flash *flash)$/;"	f
spi_flash_fsr_ready	spi/spi_flash.c	/^static int spi_flash_fsr_ready(struct spi_flash *flash)$/;"	f	file:
spi_flash_ids	spi/spi_flash_ids.c	/^const struct spi_flash_info spi_flash_ids[] = {$/;"	v	typeref:struct:spi_flash_info
spi_flash_info	spi/sf_internal.h	/^struct spi_flash_info {$/;"	s
spi_flash_mtd_erase	spi/sf_mtd.c	/^static int spi_flash_mtd_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
spi_flash_mtd_number	spi/sf_mtd.c	/^static int spi_flash_mtd_number(void)$/;"	f	file:
spi_flash_mtd_read	spi/sf_mtd.c	/^static int spi_flash_mtd_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
spi_flash_mtd_register	spi/sf_mtd.c	/^int spi_flash_mtd_register(struct spi_flash *flash)$/;"	f
spi_flash_mtd_sync	spi/sf_mtd.c	/^static void spi_flash_mtd_sync(struct mtd_info *mtd)$/;"	f	file:
spi_flash_mtd_unregister	spi/sf_mtd.c	/^void spi_flash_mtd_unregister(void)$/;"	f
spi_flash_mtd_write	spi/sf_mtd.c	/^static int spi_flash_mtd_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
spi_flash_post_bind	spi/sf-uclass.c	/^static int spi_flash_post_bind(struct udevice *dev)$/;"	f	file:
spi_flash_probe	spi/sf-uclass.c	/^struct spi_flash *spi_flash_probe(unsigned int bus, unsigned int cs,$/;"	f
spi_flash_probe	spi/sf_probe.c	/^struct spi_flash *spi_flash_probe(unsigned int busnum, unsigned int cs,$/;"	f
spi_flash_probe_bus_cs	spi/sf-uclass.c	/^int spi_flash_probe_bus_cs(unsigned int busnum, unsigned int cs,$/;"	f
spi_flash_probe_fdt	spi/sf_probe.c	/^struct spi_flash *spi_flash_probe_fdt(const void *blob, int slave_node,$/;"	f
spi_flash_probe_slave	spi/sf_probe.c	/^static int spi_flash_probe_slave(struct spi_flash *flash)$/;"	f	file:
spi_flash_probe_tail	spi/sf_probe.c	/^static struct spi_flash *spi_flash_probe_tail(struct spi_slave *bus)$/;"	f	file:
spi_flash_read_common	spi/spi_flash.c	/^int spi_flash_read_common(struct spi_flash *flash, const u8 *cmd,$/;"	f
spi_flash_read_dm	spi/sf-uclass.c	/^int spi_flash_read_dm(struct udevice *dev, u32 offset, size_t len, void *buf)$/;"	f
spi_flash_read_id	spi/spi_flash.c	/^static const struct spi_flash_info *spi_flash_read_id(struct spi_flash *flash)$/;"	f	file:
spi_flash_read_write	spi/sf.c	/^static int spi_flash_read_write(struct spi_slave *spi,$/;"	f	file:
spi_flash_ready	spi/spi_flash.c	/^static int spi_flash_ready(struct spi_flash *flash)$/;"	f	file:
spi_flash_scan	spi/spi_flash.c	/^int spi_flash_scan(struct spi_flash *flash)$/;"	f
spi_flash_sr_ready	spi/spi_flash.c	/^static int spi_flash_sr_ready(struct spi_flash *flash)$/;"	f	file:
spi_flash_std	spi/sf_probe.c	/^U_BOOT_DRIVER(spi_flash_std) = {$/;"	v
spi_flash_std_erase	spi/sf_probe.c	/^static int spi_flash_std_erase(struct udevice *dev, u32 offset, size_t len)$/;"	f	file:
spi_flash_std_ids	spi/sf_probe.c	/^static const struct udevice_id spi_flash_std_ids[] = {$/;"	v	typeref:struct:udevice_id	file:
spi_flash_std_ops	spi/sf_probe.c	/^static const struct dm_spi_flash_ops spi_flash_std_ops = {$/;"	v	typeref:struct:dm_spi_flash_ops	file:
spi_flash_std_probe	spi/sf_probe.c	/^static int spi_flash_std_probe(struct udevice *dev)$/;"	f	file:
spi_flash_std_read	spi/sf_probe.c	/^static int spi_flash_std_read(struct udevice *dev, u32 offset, size_t len,$/;"	f	file:
spi_flash_std_write	spi/sf_probe.c	/^static int spi_flash_std_write(struct udevice *dev, u32 offset, size_t len,$/;"	f	file:
spi_flash_wait_till_ready	spi/spi_flash.c	/^static int spi_flash_wait_till_ready(struct spi_flash *flash,$/;"	f	file:
spi_flash_write_common	spi/spi_flash.c	/^int spi_flash_write_common(struct spi_flash *flash, const u8 *cmd,$/;"	f
spi_flash_write_dm	spi/sf-uclass.c	/^int spi_flash_write_dm(struct udevice *dev, u32 offset, size_t len,$/;"	f
spi_nor_option_flags	spi/sf_internal.h	/^enum spi_nor_option_flags {$/;"	g
spl_nand_erase_one	nand/atmel_nand.c	/^int spl_nand_erase_one(int block, int page)$/;"	f
spl_spi_load_image	spi/sunxi_spi_spl.c	/^static int spl_spi_load_image(struct spl_image_info *spl_image,$/;"	f	file:
sqnum	ubi/ubi-media.h	/^	__be64  sqnum;$/;"	m	struct:ubi_vid_hdr
sqnum	ubi/ubi-media.h	/^	__be64 sqnum;$/;"	m	struct:ubi_fm_sb
sqnum	ubi/ubi.h	/^	unsigned long long sqnum;$/;"	m	struct:ubi_ainf_peb
sr	nand/atmel_nand_ecc.h	/^	u32 sr;			\/* 0x18 PMECC Status Register *\/$/;"	m	struct:pmecc_regs
sr	stm32_flash.h	/^	u32 sr;$/;"	m	struct:stm32_flash_regs
sst_byte_write	spi/spi_flash.c	/^static int sst_byte_write(struct spi_flash *flash, u32 offset, const void *buf)$/;"	f	file:
sst_write_bp	spi/spi_flash.c	/^int sst_write_bp(struct spi_flash *flash, u32 offset, size_t len,$/;"	f
sst_write_wp	spi/spi_flash.c	/^int sst_write_wp(struct spi_flash *flash, u32 offset, size_t len,$/;"	f
start_cmd	nand/zynq_nand.c	/^	u8 start_cmd;$/;"	m	struct:zynq_nand_command_format	file:
start_command	nand/tegra_nand.c	/^static void start_command(struct nand_ctlr *reg)$/;"	f	file:
stat	nand/lpc32xx_nand_slc.c	/^	u32 stat;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
state	nand/pxa3xx_nand.c	/^	unsigned int		state;$/;"	m	struct:pxa3xx_nand_info	file:
state	spi/sandbox.c	/^	enum sandbox_sf_state state;$/;"	m	struct:sandbox_spi_flash	typeref:enum:sandbox_spi_flash::sandbox_sf_state	file:
status	nand/denali.h	/^	int status;$/;"	m	struct:denali_nand_info
status	nand/fsl_elbc_nand.c	/^	unsigned int status;     \/* status read from LTESR after last op  *\/$/;"	m	struct:fsl_elbc_ctrl	file:
status	nand/fsl_ifc_nand.c	/^	unsigned int status;     \/* status read from NEESR after last op  *\/$/;"	m	struct:fsl_ifc_ctrl	file:
status	nand/tegra_nand.h	/^	u32	status;		\/* offset 04h *\/$/;"	m	struct:nand_ctlr
status	spi/sandbox.c	/^	u16 status;$/;"	m	struct:sandbox_spi_flash	file:
status_request	nand/mxc_nand.c	/^	int				status_request;$/;"	m	struct:mxc_nand_host	file:
status_sum	nand/mxc_nand.h	/^	u32 status_sum;$/;"	m	struct:mxc_nand_regs
stm32_flash_latency_cfg	stm32_flash.c	/^void stm32_flash_latency_cfg(int latency)$/;"	f
stm32_flash_lock	stm32_flash.c	/^static void stm32_flash_lock(u8 lock)$/;"	f	file:
stm32_flash_regs	stm32_flash.h	/^struct stm32_flash_regs {$/;"	s
stm_get_locked_range	spi/spi_flash.c	/^static void stm_get_locked_range(struct spi_flash *flash, u8 sr, loff_t *ofs,$/;"	f	file:
stm_is_locked	spi/spi_flash.c	/^int stm_is_locked(struct spi_flash *flash, u32 ofs, size_t len)$/;"	f
stm_is_locked_sr	spi/spi_flash.c	/^static int stm_is_locked_sr(struct spi_flash *flash, loff_t ofs, u64 len,$/;"	f	file:
stm_lock	spi/spi_flash.c	/^int stm_lock(struct spi_flash *flash, u32 ofs, size_t len)$/;"	f
stm_unlock	spi/spi_flash.c	/^int stm_unlock(struct spi_flash *flash, u32 ofs, size_t len)$/;"	f
stop	nand/lpc32xx_nand_slc.c	/^	u32 stop;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
stop_command	nand/tegra_nand.c	/^static void stop_command(struct nand_ctlr *reg)$/;"	f	file:
store_be	ubi/crc32.c	/^static void store_be(u32 x, unsigned char *buf)$/;"	f	file:
store_le	ubi/crc32.c	/^static void store_le(u32 x, unsigned char *buf)$/;"	f	file:
subdev	mtdconcat.c	/^	struct mtd_info **subdev;$/;"	m	struct:mtd_concat	typeref:struct:mtd_concat::mtd_info	file:
sunxi_nand_chip	nand/sunxi_nand.c	/^struct sunxi_nand_chip {$/;"	s	file:
sunxi_nand_chip_init	nand/sunxi_nand.c	/^static int sunxi_nand_chip_init(int node, struct sunxi_nfc *nfc, int devnum)$/;"	f	file:
sunxi_nand_chip_init_timings	nand/sunxi_nand.c	/^static int sunxi_nand_chip_init_timings(struct sunxi_nand_chip *chip)$/;"	f	file:
sunxi_nand_chip_sel	nand/sunxi_nand.c	/^struct sunxi_nand_chip_sel {$/;"	s	file:
sunxi_nand_chip_set_timings	nand/sunxi_nand.c	/^static int sunxi_nand_chip_set_timings(struct sunxi_nand_chip *chip,$/;"	f	file:
sunxi_nand_chips_cleanup	nand/sunxi_nand.c	/^static void sunxi_nand_chips_cleanup(struct sunxi_nfc *nfc)$/;"	f	file:
sunxi_nand_chips_init	nand/sunxi_nand.c	/^static int sunxi_nand_chips_init(int node, struct sunxi_nfc *nfc)$/;"	f	file:
sunxi_nand_ecc_cleanup	nand/sunxi_nand.c	/^static void sunxi_nand_ecc_cleanup(struct nand_ecc_ctrl *ecc)$/;"	f	file:
sunxi_nand_ecc_init	nand/sunxi_nand.c	/^static int sunxi_nand_ecc_init(struct mtd_info *mtd, struct nand_ecc_ctrl *ecc)$/;"	f	file:
sunxi_nand_hw_common_ecc_ctrl_cleanup	nand/sunxi_nand.c	/^static void sunxi_nand_hw_common_ecc_ctrl_cleanup(struct nand_ecc_ctrl *ecc)$/;"	f	file:
sunxi_nand_hw_common_ecc_ctrl_init	nand/sunxi_nand.c	/^static int sunxi_nand_hw_common_ecc_ctrl_init(struct mtd_info *mtd,$/;"	f	file:
sunxi_nand_hw_ecc	nand/sunxi_nand.c	/^struct sunxi_nand_hw_ecc {$/;"	s	file:
sunxi_nand_hw_ecc_ctrl_init	nand/sunxi_nand.c	/^static int sunxi_nand_hw_ecc_ctrl_init(struct mtd_info *mtd,$/;"	f	file:
sunxi_nand_hw_syndrome_ecc_ctrl_init	nand/sunxi_nand.c	/^static int sunxi_nand_hw_syndrome_ecc_ctrl_init(struct mtd_info *mtd,$/;"	f	file:
sunxi_nand_init	nand/sunxi_nand.c	/^void sunxi_nand_init(void)$/;"	f
sunxi_nand_lookup_timing	nand/sunxi_nand.c	1221;"	d	file:
sunxi_nand_rb	nand/sunxi_nand.c	/^struct sunxi_nand_rb {$/;"	s	file:
sunxi_nand_rb_type	nand/sunxi_nand.c	/^enum sunxi_nand_rb_type {$/;"	g	file:
sunxi_nfc	nand/sunxi_nand.c	/^struct sunxi_nfc {$/;"	s	file:
sunxi_nfc_buf_to_user_data	nand/sunxi_nand.c	/^static inline u32 sunxi_nfc_buf_to_user_data(const u8 *buf)$/;"	f	file:
sunxi_nfc_cmd_ctrl	nand/sunxi_nand.c	/^static void sunxi_nfc_cmd_ctrl(struct mtd_info *mtd, int dat,$/;"	f	file:
sunxi_nfc_dev_ready	nand/sunxi_nand.c	/^static int sunxi_nfc_dev_ready(struct mtd_info *mtd)$/;"	f	file:
sunxi_nfc_hw_ecc_disable	nand/sunxi_nand.c	/^static void sunxi_nfc_hw_ecc_disable(struct mtd_info *mtd)$/;"	f	file:
sunxi_nfc_hw_ecc_enable	nand/sunxi_nand.c	/^static void sunxi_nfc_hw_ecc_enable(struct mtd_info *mtd)$/;"	f	file:
sunxi_nfc_hw_ecc_read_chunk	nand/sunxi_nand.c	/^static int sunxi_nfc_hw_ecc_read_chunk(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_hw_ecc_read_extra_oob	nand/sunxi_nand.c	/^static void sunxi_nfc_hw_ecc_read_extra_oob(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_hw_ecc_read_page	nand/sunxi_nand.c	/^static int sunxi_nfc_hw_ecc_read_page(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_hw_ecc_read_subpage	nand/sunxi_nand.c	/^static int sunxi_nfc_hw_ecc_read_subpage(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_hw_ecc_write_chunk	nand/sunxi_nand.c	/^static int sunxi_nfc_hw_ecc_write_chunk(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_hw_ecc_write_extra_oob	nand/sunxi_nand.c	/^static void sunxi_nfc_hw_ecc_write_extra_oob(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_hw_ecc_write_page	nand/sunxi_nand.c	/^static int sunxi_nfc_hw_ecc_write_page(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_hw_ecc_write_subpage	nand/sunxi_nand.c	/^static int sunxi_nfc_hw_ecc_write_subpage(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_hw_syndrome_ecc_read_page	nand/sunxi_nand.c	/^static int sunxi_nfc_hw_syndrome_ecc_read_page(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_hw_syndrome_ecc_write_page	nand/sunxi_nand.c	/^static int sunxi_nfc_hw_syndrome_ecc_write_page(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_randomize_bbm	nand/sunxi_nand.c	/^static void sunxi_nfc_randomize_bbm(struct mtd_info *mtd, int page, u8 *bbm)$/;"	f	file:
sunxi_nfc_randomizer_config	nand/sunxi_nand.c	/^static void sunxi_nfc_randomizer_config(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_randomizer_disable	nand/sunxi_nand.c	/^static void sunxi_nfc_randomizer_disable(struct mtd_info *mtd)$/;"	f	file:
sunxi_nfc_randomizer_ecc1024_seeds	nand/sunxi_nand.c	/^static const u16 sunxi_nfc_randomizer_ecc1024_seeds[] = {$/;"	v	file:
sunxi_nfc_randomizer_ecc512_seeds	nand/sunxi_nand.c	/^static const u16 sunxi_nfc_randomizer_ecc512_seeds[] = {$/;"	v	file:
sunxi_nfc_randomizer_enable	nand/sunxi_nand.c	/^static void sunxi_nfc_randomizer_enable(struct mtd_info *mtd)$/;"	f	file:
sunxi_nfc_randomizer_page_seeds	nand/sunxi_nand.c	/^static const u16 sunxi_nfc_randomizer_page_seeds[] = {$/;"	v	file:
sunxi_nfc_randomizer_read_buf	nand/sunxi_nand.c	/^static void sunxi_nfc_randomizer_read_buf(struct mtd_info *mtd, uint8_t *buf,$/;"	f	file:
sunxi_nfc_randomizer_state	nand/sunxi_nand.c	/^static u16 sunxi_nfc_randomizer_state(struct mtd_info *mtd, int page, bool ecc)$/;"	f	file:
sunxi_nfc_randomizer_step	nand/sunxi_nand.c	/^static u16 sunxi_nfc_randomizer_step(u16 state, int count)$/;"	f	file:
sunxi_nfc_randomizer_write_buf	nand/sunxi_nand.c	/^static void sunxi_nfc_randomizer_write_buf(struct mtd_info *mtd,$/;"	f	file:
sunxi_nfc_read_buf	nand/sunxi_nand.c	/^static void sunxi_nfc_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
sunxi_nfc_read_byte	nand/sunxi_nand.c	/^static uint8_t sunxi_nfc_read_byte(struct mtd_info *mtd)$/;"	f	file:
sunxi_nfc_rst	nand/sunxi_nand.c	/^static int sunxi_nfc_rst(struct sunxi_nfc *nfc)$/;"	f	file:
sunxi_nfc_select_chip	nand/sunxi_nand.c	/^static void sunxi_nfc_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
sunxi_nfc_set_clk_rate	nand/sunxi_nand.c	/^static void sunxi_nfc_set_clk_rate(unsigned long hz)$/;"	f	file:
sunxi_nfc_user_data_to_buf	nand/sunxi_nand.c	/^static inline void sunxi_nfc_user_data_to_buf(u32 user_data, u8 *buf)$/;"	f	file:
sunxi_nfc_wait_cmd_fifo_empty	nand/sunxi_nand.c	/^static int sunxi_nfc_wait_cmd_fifo_empty(struct sunxi_nfc *nfc)$/;"	f	file:
sunxi_nfc_wait_int	nand/sunxi_nand.c	/^static int sunxi_nfc_wait_int(struct sunxi_nfc *nfc, u32 flags,$/;"	f	file:
sunxi_nfc_write_buf	nand/sunxi_nand.c	/^static void sunxi_nfc_write_buf(struct mtd_info *mtd, const uint8_t *buf,$/;"	f	file:
sunxi_spi0_read_data	spi/sunxi_spi_spl.c	/^static void sunxi_spi0_read_data(u8 *buf, u32 addr, u32 bufsize,$/;"	f	file:
sw_wp_add_hig	nand/lpc32xx_nand_mlc.c	/^	u32 sw_wp_add_hig;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
sw_wp_add_low	nand/lpc32xx_nand_mlc.c	/^	u32 sw_wp_add_low;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
sync_erase	ubi/wl.c	/^static int sync_erase(struct ubi_device *ubi, struct ubi_wl_entry *e,$/;"	f	file:
tAR	nand/pxa3xx_nand.h	/^	unsigned int	tAR;  \/* ND_ALE low to ND_nRE low delay *\/$/;"	m	struct:pxa3xx_nand_timing
tCH	nand/pxa3xx_nand.h	/^	unsigned int	tCH;  \/* Enable signal hold time *\/$/;"	m	struct:pxa3xx_nand_timing
tCS	nand/pxa3xx_nand.h	/^	unsigned int	tCS;  \/* Enable signal setup time *\/$/;"	m	struct:pxa3xx_nand_timing
tR	nand/pxa3xx_nand.h	/^	unsigned int	tR;   \/* ND_nWE high to ND_nRE low for read *\/$/;"	m	struct:pxa3xx_nand_timing
tRH	nand/pxa3xx_nand.h	/^	unsigned int	tRH;  \/* ND_nRE high duration *\/$/;"	m	struct:pxa3xx_nand_timing
tRHW_lut	nand/sunxi_nand.c	/^static const s32 tRHW_lut[] = {4, 8, 12, 20};$/;"	v	file:
tRP	nand/pxa3xx_nand.h	/^	unsigned int	tRP;  \/* ND_nRE pulse width *\/$/;"	m	struct:pxa3xx_nand_timing
tWB_lut	nand/sunxi_nand.c	/^static const s32 tWB_lut[] = {6, 12, 16, 20};$/;"	v	file:
tWH	nand/pxa3xx_nand.h	/^	unsigned int	tWH;  \/* ND_nWE high duration *\/$/;"	m	struct:pxa3xx_nand_timing
tWHR	nand/pxa3xx_nand.h	/^	unsigned int	tWHR; \/* ND_nWE high to ND_nRE low for status read *\/$/;"	m	struct:pxa3xx_nand_timing
tWP	nand/pxa3xx_nand.h	/^	unsigned int	tWP;  \/* ND_nWE pulse time *\/$/;"	m	struct:pxa3xx_nand_timing
tac	nand/lpc32xx_nand_slc.c	/^	u32 tac;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
tag_ptr	nand/tegra_nand.h	/^	u32	tag_ptr;	\/* offset 44h *\/$/;"	m	struct:nand_ctlr
tail	nand/denali.h	/^	int tail;$/;"	m	struct:nand_buf
tc	nand/lpc32xx_nand_slc.c	/^	u32 tc;$/;"	m	struct:lpc32xx_nand_slc_regs	file:
tegra_nand_init	nand/tegra_nand.c	/^int tegra_nand_init(struct nand_chip *nand, int devnum)$/;"	f
test_step	ubi/crc32.c	/^static u32 test_step(u32 init, unsigned char *buf, size_t len)$/;"	f	file:
thread_enabled	ubi/ubi.h	/^	int thread_enabled;$/;"	m	struct:ubi_device
time_reg	nand/lpc32xx_nand_mlc.c	/^	u32 time_reg;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
timing	ftsmc020.c	/^	unsigned int	timing;$/;"	m	struct:ftsmc020_config	file:
timing	nand/pxa3xx_nand.c	/^static struct pxa3xx_nand_timing timing[] = {$/;"	v	typeref:struct:pxa3xx_nand_timing	file:
timing	nand/pxa3xx_nand.h	/^	struct pxa3xx_nand_timing *timing; \/* NAND Flash timing *\/$/;"	m	struct:pxa3xx_nand_flash	typeref:struct:pxa3xx_nand_flash::pxa3xx_nand_timing
timing	nand/tegra_nand.c	/^	u32 timing[FDT_NAND_TIMING_COUNT];$/;"	m	struct:fdt_nand	file:
timing	nand/tegra_nand.h	/^	u32	timing;		\/* offset 14h *\/$/;"	m	struct:nand_ctlr
timing2	nand/tegra_nand.h	/^	u32	timing2;	\/* offset 1Ch *\/$/;"	m	struct:nand_ctlr
timing_cfg	nand/sunxi_nand.c	/^	u32 timing_cfg;$/;"	m	struct:sunxi_nand_chip	file:
timing_ctl	nand/sunxi_nand.c	/^	u32 timing_ctl;$/;"	m	struct:sunxi_nand_chip	file:
tmg_reg	nand/arasan_nfc.c	/^	u32 tmg_reg;$/;"	m	struct:nand_regs	file:
to_be_tortured	ubi/ubi.h	/^	int to_be_tortured[UBI_FM_MAX_BLOCKS];$/;"	m	struct:ubi_fastmap_layout
to_be_tortured	ubispl/ubi-wrapper.h	/^	int to_be_tortured[UBI_FM_MAX_BLOCKS];$/;"	m	struct:ubi_fastmap_layout
to_sunxi_nand	nand/sunxi_nand.c	/^static inline struct sunxi_nand_chip *to_sunxi_nand(struct nand_chip *nand)$/;"	f	file:
to_sunxi_nfc	nand/sunxi_nand.c	/^static inline struct sunxi_nfc *to_sunxi_nfc(struct nand_hw_control *ctrl)$/;"	f	file:
tobe	ubi/crc32.c	43;"	d	file:
tobe	ubi/crc32.c	46;"	d	file:
tole	ubi/crc32.c	42;"	d	file:
tole	ubi/crc32.c	45;"	d	file:
toload	ubispl/ubispl.h	/^	unsigned long			toload[UBI_FM_BM_SIZE];$/;"	m	struct:ubi_scan_info
torture	ubi/ubi.h	/^	int torture;$/;"	m	struct:ubi_work
torture_peb	ubi/io.c	/^static int torture_peb(struct ubi_device *ubi, int pnum)$/;"	f	file:
total_nand_size	nand/nand.c	/^static unsigned long total_nand_size; \/* in kiB *\/$/;"	v	file:
total_used_banks	nand/denali.h	/^	int total_used_banks;$/;"	m	struct:denali_nand_info
totalblks	nand/denali.h	/^	uint32_t totalblks;$/;"	m	struct:denali_nand_info
tree_destroy	ubi/wl.c	/^static void tree_destroy(struct ubi_device *ubi, struct rb_root *root)$/;"	f	file:
type	nand/sunxi_nand.c	/^	enum sunxi_nand_rb_type type;$/;"	m	struct:sunxi_nand_rb	typeref:enum:sunxi_nand_rb::sunxi_nand_rb_type	file:
u	ubi/ubi.h	/^	} u;$/;"	m	struct:ubi_ainf_peb	typeref:union:ubi_ainf_peb::__anon6
u	ubi/ubi.h	/^	} u;$/;"	m	struct:ubi_wl_entry	typeref:union:ubi_wl_entry::__anon5
uaddr	jedec_flash.c	/^	const __u8 uaddr[4];		\/* unlock addrs for 8, 16, 32, 64 *\/$/;"	m	struct:amd_flash_info	file:
uaddr	jedec_flash.c	/^enum uaddr {$/;"	g	file:
ubi	ubi/ubi.h	/^	struct ubi_device *ubi;$/;"	m	struct:ubi_volume	typeref:struct:ubi_volume::ubi_device
ubi_add_peb_to_vol	ubispl/ubispl.c	/^static int ubi_add_peb_to_vol(struct ubi_scan_info *ubi,$/;"	f	file:
ubi_add_to_av	ubi/attach.c	/^int ubi_add_to_av(struct ubi_device *ubi, struct ubi_attach_info *ai, int pnum,$/;"	f
ubi_add_volume	ubi/vmt.c	/^int ubi_add_volume(struct ubi_device *ubi, struct ubi_volume *vol)$/;"	f
ubi_ainf_peb	ubi/ubi.h	/^struct ubi_ainf_peb {$/;"	s
ubi_ainf_volume	ubi/ubi.h	/^struct ubi_ainf_volume {$/;"	s
ubi_assert	ubi/debug.h	20;"	d
ubi_attach	ubi/attach.c	/^int ubi_attach(struct ubi_device *ubi, int force_scan)$/;"	f
ubi_attach_fastmap	ubi/fastmap.c	/^static int ubi_attach_fastmap(struct ubi_device *ubi,$/;"	f	file:
ubi_attach_fastmap	ubispl/ubispl.c	/^static int ubi_attach_fastmap(struct ubi_scan_info *ubi,$/;"	f	file:
ubi_attach_info	ubi/ubi.h	/^struct ubi_attach_info {$/;"	s
ubi_attach_info	ubispl/ubispl.c	/^struct ubi_attach_info {$/;"	s	file:
ubi_attach_mtd_dev	ubi/build.c	/^int ubi_attach_mtd_dev(struct mtd_info *mtd, int ubi_num,$/;"	f
ubi_calc_data_len	ubi/misc.c	/^int ubi_calc_data_len(const struct ubi_device *ubi, const void *buf,$/;"	f
ubi_calc_fm_size	ubi/fastmap.c	/^size_t ubi_calc_fm_size(struct ubi_device *ubi)$/;"	f
ubi_calc_fm_size	ubispl/ubispl.c	/^static size_t ubi_calc_fm_size(struct ubi_scan_info *ubi)$/;"	f	file:
ubi_calculate_reserved	ubi/misc.c	/^void ubi_calculate_reserved(struct ubi_device *ubi)$/;"	f
ubi_change_vtbl_record	ubi/vtbl.c	/^int ubi_change_vtbl_record(struct ubi_device *ubi, int idx,$/;"	f
ubi_check_pattern	ubi/misc.c	/^int ubi_check_pattern(const void *buf, uint8_t patt, int size)$/;"	f
ubi_check_volume	ubi/misc.c	/^int ubi_check_volume(struct ubi_device *ubi, int vol_id)$/;"	f
ubi_class	ubi/build.c	/^struct class ubi_class = {$/;"	v	typeref:struct:class
ubi_class_attrs	ubi/build.c	/^static struct class_attribute ubi_class_attrs[] = {$/;"	v	typeref:struct:class_attribute	file:
ubi_close_volume	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_close_volume);$/;"	v
ubi_close_volume	ubi/kapi.c	/^void ubi_close_volume(struct ubi_volume_desc *desc)$/;"	f
ubi_compare_lebs	ubi/attach.c	/^int ubi_compare_lebs(struct ubi_device *ubi, const struct ubi_ainf_peb *aeb,$/;"	f
ubi_create_gluebi	ubi/ubi.h	835;"	d
ubi_create_volume	ubi/vmt.c	/^int ubi_create_volume(struct ubi_device *ubi, struct ubi_mkvol_req *req)$/;"	f
ubi_ctrl_cdev	ubi/build.c	/^static struct miscdevice ubi_ctrl_cdev = {$/;"	v	typeref:struct:miscdevice	file:
ubi_dbg	ubispl/ubispl.h	121;"	d
ubi_dbg	ubispl/ubispl.h	123;"	d
ubi_dbg_chk_fastmap	ubi/debug.h	/^static inline int ubi_dbg_chk_fastmap(const struct ubi_device *ubi)$/;"	f
ubi_dbg_chk_gen	ubi/debug.h	/^static inline int ubi_dbg_chk_gen(const struct ubi_device *ubi)$/;"	f
ubi_dbg_chk_io	ubi/debug.h	/^static inline int ubi_dbg_chk_io(const struct ubi_device *ubi)$/;"	f
ubi_dbg_is_bgt_disabled	ubi/debug.h	/^static inline int ubi_dbg_is_bgt_disabled(const struct ubi_device *ubi)$/;"	f
ubi_dbg_is_bitflip	ubi/debug.h	/^static inline int ubi_dbg_is_bitflip(const struct ubi_device *ubi)$/;"	f
ubi_dbg_is_erase_failure	ubi/debug.h	/^static inline int ubi_dbg_is_erase_failure(const struct ubi_device *ubi)$/;"	f
ubi_dbg_is_write_failure	ubi/debug.h	/^static inline int ubi_dbg_is_write_failure(const struct ubi_device *ubi)$/;"	f
ubi_dbg_msg	ubi/debug.h	31;"	d
ubi_dbg_power_cut	ubi/debug.c	/^int ubi_dbg_power_cut(struct ubi_device *ubi, int caller)$/;"	f
ubi_dbg_print_hex_dump	ubi/debug.h	28;"	d
ubi_debug_info	ubi/ubi.h	/^struct ubi_debug_info {$/;"	s
ubi_debugfs_exit	ubi/debug.c	/^void ubi_debugfs_exit(void)$/;"	f
ubi_debugfs_exit_dev	ubi/debug.c	/^void ubi_debugfs_exit_dev(struct ubi_device *ubi)$/;"	f
ubi_debugfs_init	ubi/debug.c	/^int ubi_debugfs_init(void)$/;"	f
ubi_debugfs_init_dev	ubi/debug.c	/^int ubi_debugfs_init_dev(struct ubi_device *ubi)$/;"	f
ubi_destroy_gluebi	ubi/ubi.h	/^static inline int ubi_destroy_gluebi(struct ubi_volume *vol)$/;"	f
ubi_detach_mtd_dev	ubi/build.c	/^int ubi_detach_mtd_dev(int ubi_num, int anyway)$/;"	f
ubi_dev	ubi/build.c	/^ATTRIBUTE_GROUPS(ubi_dev);$/;"	v
ubi_dev_attrs	ubi/build.c	/^static struct attribute *ubi_dev_attrs[] = {$/;"	v	typeref:struct:attribute	file:
ubi_device	ubi/ubi.h	/^struct ubi_device {$/;"	s
ubi_devices	ubi/build.c	/^static struct ubi_device *ubi_devices[UBI_MAX_DEVICES];$/;"	v	typeref:struct:ubi_device	file:
ubi_devices	ubi/build.c	/^struct ubi_device *ubi_devices[UBI_MAX_DEVICES];$/;"	v	typeref:struct:ubi_device
ubi_devices_mutex	ubi/build.c	/^DEFINE_MUTEX(ubi_devices_mutex);$/;"	v
ubi_do_get_device_info	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_do_get_device_info);$/;"	v
ubi_do_get_device_info	ubi/kapi.c	/^void ubi_do_get_device_info(struct ubi_device *ubi, struct ubi_device_info *di)$/;"	f
ubi_do_get_volume_info	ubi/kapi.c	/^void ubi_do_get_volume_info(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_dump_aeb	ubi/debug.c	/^void ubi_dump_aeb(const struct ubi_ainf_peb *aeb, int type)$/;"	f
ubi_dump_av	ubi/debug.c	/^void ubi_dump_av(const struct ubi_ainf_volume *av)$/;"	f
ubi_dump_ec_hdr	ubi/debug.c	/^void ubi_dump_ec_hdr(const struct ubi_ec_hdr *ec_hdr)$/;"	f
ubi_dump_flash	ubi/debug.c	/^void ubi_dump_flash(struct ubi_device *ubi, int pnum, int offset, int len)$/;"	f
ubi_dump_mkvol_req	ubi/debug.c	/^void ubi_dump_mkvol_req(const struct ubi_mkvol_req *req)$/;"	f
ubi_dump_vid_hdr	ubi/debug.c	/^void ubi_dump_vid_hdr(const struct ubi_vid_hdr *vid_hdr)$/;"	f
ubi_dump_vol_info	ubi/debug.c	/^void ubi_dump_vol_info(const struct ubi_volume *vol)$/;"	f
ubi_dump_vtbl_record	ubi/debug.c	/^void ubi_dump_vtbl_record(const struct ubi_vtbl_record *r, int idx)$/;"	f
ubi_early_get_peb	ubi/attach.c	/^struct ubi_ainf_peb *ubi_early_get_peb(struct ubi_device *ubi,$/;"	f
ubi_eba_atomic_leb_change	ubi/eba.c	/^int ubi_eba_atomic_leb_change(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_eba_copy_leb	ubi/eba.c	/^int ubi_eba_copy_leb(struct ubi_device *ubi, int from, int to,$/;"	f
ubi_eba_init	ubi/eba.c	/^int ubi_eba_init(struct ubi_device *ubi, struct ubi_attach_info *ai)$/;"	f
ubi_eba_read_leb	ubi/eba.c	/^int ubi_eba_read_leb(struct ubi_device *ubi, struct ubi_volume *vol, int lnum,$/;"	f
ubi_eba_read_leb_sg	ubi/eba.c	/^int ubi_eba_read_leb_sg(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_eba_unmap_leb	ubi/eba.c	/^int ubi_eba_unmap_leb(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_eba_write_leb	ubi/eba.c	/^int ubi_eba_write_leb(struct ubi_device *ubi, struct ubi_volume *vol, int lnum,$/;"	f
ubi_eba_write_leb_st	ubi/eba.c	/^int ubi_eba_write_leb_st(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_ec_hdr	ubi/ubi-media.h	/^struct ubi_ec_hdr {$/;"	s
ubi_enable_dbg_chk_fastmap	ubi/debug.h	/^static inline void ubi_enable_dbg_chk_fastmap(struct ubi_device *ubi)$/;"	f
ubi_ensure_anchor_pebs	ubi/fastmap-wl.c	/^int ubi_ensure_anchor_pebs(struct ubi_device *ubi)$/;"	f
ubi_enumerate_volumes	ubi/build.c	/^int ubi_enumerate_volumes(struct notifier_block *nb)$/;"	f
ubi_err	ubi/ubi.h	56;"	d
ubi_err	ubispl/ubispl.h	134;"	d
ubi_exit	ubi/build.c	/^module_exit(ubi_exit);$/;"	v
ubi_exit	ubi/build.c	/^static void __exit ubi_exit(void)$/;"	f	file:
ubi_fastmap_close	ubi/fastmap-wl.c	/^static void ubi_fastmap_close(struct ubi_device *ubi)$/;"	f	file:
ubi_fastmap_close	ubi/wl.h	/^static inline void ubi_fastmap_close(struct ubi_device *ubi) { }$/;"	f
ubi_fastmap_init	ubi/wl.h	/^static inline void ubi_fastmap_init(struct ubi_device *ubi, int *count) { }$/;"	f
ubi_fastmap_init	ubi/wl.h	/^static inline void ubi_fastmap_init(struct ubi_device *ubi, int *count)$/;"	f
ubi_fastmap_layout	ubi/ubi.h	/^struct ubi_fastmap_layout {$/;"	s
ubi_fastmap_layout	ubispl/ubi-wrapper.h	/^struct ubi_fastmap_layout {$/;"	s
ubi_find_av	ubi/attach.c	/^struct ubi_ainf_volume *ubi_find_av(const struct ubi_attach_info *ai,$/;"	f
ubi_flush	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_flush);$/;"	v
ubi_flush	ubi/kapi.c	/^int ubi_flush(int ubi_num, int vol_id, int lnum)$/;"	f
ubi_fm_eba	ubi/ubi-media.h	/^struct ubi_fm_eba {$/;"	s
ubi_fm_ec	ubi/ubi-media.h	/^struct ubi_fm_ec {$/;"	s
ubi_fm_hdr	ubi/ubi-media.h	/^struct ubi_fm_hdr {$/;"	s
ubi_fm_pool	ubi/ubi.h	/^struct ubi_fm_pool {$/;"	s
ubi_fm_pool	ubispl/ubi-wrapper.h	/^struct ubi_fm_pool {$/;"	s
ubi_fm_sb	ubi/ubi-media.h	/^struct ubi_fm_sb {$/;"	s
ubi_fm_scan_pool	ubi/ubi-media.h	/^struct ubi_fm_scan_pool {$/;"	s
ubi_fm_volhdr	ubi/ubi-media.h	/^struct ubi_fm_volhdr {$/;"	s
ubi_for_each_free_peb	ubi/ubi.h	957;"	d
ubi_for_each_protected_peb	ubi/ubi.h	984;"	d
ubi_for_each_scrub_peb	ubi/ubi.h	975;"	d
ubi_for_each_used_peb	ubi/ubi.h	966;"	d
ubi_free_internal_volumes	ubi/build.c	/^void ubi_free_internal_volumes(struct ubi_device *ubi)$/;"	f
ubi_free_vid_hdr	ubi/ubi.h	/^static inline void ubi_free_vid_hdr(const struct ubi_device *ubi,$/;"	f
ubi_free_volume	ubi/vmt.c	/^void ubi_free_volume(struct ubi_device *ubi, struct ubi_volume *vol)$/;"	f
ubi_get_by_major	ubi/build.c	/^struct ubi_device *ubi_get_by_major(int major)$/;"	f
ubi_get_compat	ubi/eba.c	/^static int ubi_get_compat(const struct ubi_device *ubi, int vol_id)$/;"	f	file:
ubi_get_device	ubi/build.c	/^struct ubi_device *ubi_get_device(int ubi_num)$/;"	f
ubi_get_device_info	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_get_device_info);$/;"	v
ubi_get_device_info	ubi/kapi.c	/^int ubi_get_device_info(int ubi_num, struct ubi_device_info *di)$/;"	f
ubi_get_volume_info	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_get_volume_info);$/;"	v
ubi_get_volume_info	ubi/kapi.c	/^void ubi_get_volume_info(struct ubi_volume_desc *desc,$/;"	f
ubi_gluebi_updated	ubi/ubi.h	842;"	d
ubi_init	ubi/build.c	/^late_initcall(ubi_init);$/;"	v
ubi_init	ubi/build.c	/^static int __init ubi_init(void)$/;"	f	file:
ubi_io_is_bad	ubi/io.c	/^int ubi_io_is_bad(const struct ubi_device *ubi, int pnum)$/;"	f
ubi_io_is_bad	ubispl/ubispl.c	/^static int ubi_io_is_bad(struct ubi_scan_info *ubi, int peb)$/;"	f	file:
ubi_io_mark_bad	ubi/io.c	/^int ubi_io_mark_bad(const struct ubi_device *ubi, int pnum)$/;"	f
ubi_io_read	ubi/io.c	/^int ubi_io_read(const struct ubi_device *ubi, void *buf, int pnum, int offset,$/;"	f
ubi_io_read	ubispl/ubispl.c	/^static int ubi_io_read(struct ubi_scan_info *ubi, void *buf, int pnum,$/;"	f	file:
ubi_io_read_data	ubi/ubi.h	/^static inline int ubi_io_read_data(const struct ubi_device *ubi, void *buf,$/;"	f
ubi_io_read_ec_hdr	ubi/io.c	/^int ubi_io_read_ec_hdr(struct ubi_device *ubi, int pnum,$/;"	f
ubi_io_read_vid_hdr	ubi/io.c	/^int ubi_io_read_vid_hdr(struct ubi_device *ubi, int pnum,$/;"	f
ubi_io_read_vid_hdr	ubispl/ubispl.c	/^static int ubi_io_read_vid_hdr(struct ubi_scan_info *ubi, int pnum,$/;"	f	file:
ubi_io_sync_erase	ubi/io.c	/^int ubi_io_sync_erase(struct ubi_device *ubi, int pnum, int torture)$/;"	f
ubi_io_write	ubi/io.c	/^int ubi_io_write(struct ubi_device *ubi, const void *buf, int pnum, int offset,$/;"	f
ubi_io_write_data	ubi/ubi.h	/^static inline int ubi_io_write_data(struct ubi_device *ubi, const void *buf,$/;"	f
ubi_io_write_ec_hdr	ubi/io.c	/^int ubi_io_write_ec_hdr(struct ubi_device *ubi, int pnum,$/;"	f
ubi_io_write_vid_hdr	ubi/io.c	/^int ubi_io_write_vid_hdr(struct ubi_device *ubi, int pnum,$/;"	f
ubi_is_erase_work	ubi/fastmap-wl.c	/^int ubi_is_erase_work(struct ubi_work *wrk)$/;"	f
ubi_is_mapped	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_is_mapped);$/;"	v
ubi_is_mapped	ubi/kapi.c	/^int ubi_is_mapped(struct ubi_volume_desc *desc, int lnum)$/;"	f
ubi_is_module	ubi/build.c	52;"	d	file:
ubi_is_module	ubi/build.c	54;"	d	file:
ubi_leb_change	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_change);$/;"	v
ubi_leb_change	ubi/kapi.c	/^int ubi_leb_change(struct ubi_volume_desc *desc, int lnum, const void *buf,$/;"	f
ubi_leb_erase	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_erase);$/;"	v
ubi_leb_erase	ubi/kapi.c	/^int ubi_leb_erase(struct ubi_volume_desc *desc, int lnum)$/;"	f
ubi_leb_map	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_map);$/;"	v
ubi_leb_map	ubi/kapi.c	/^int ubi_leb_map(struct ubi_volume_desc *desc, int lnum)$/;"	f
ubi_leb_read	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_read);$/;"	v
ubi_leb_read	ubi/kapi.c	/^int ubi_leb_read(struct ubi_volume_desc *desc, int lnum, char *buf, int offset,$/;"	f
ubi_leb_read_sg	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_read_sg);$/;"	v
ubi_leb_read_sg	ubi/kapi.c	/^int ubi_leb_read_sg(struct ubi_volume_desc *desc, int lnum, struct ubi_sgl *sgl,$/;"	f
ubi_leb_unmap	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_unmap);$/;"	v
ubi_leb_unmap	ubi/kapi.c	/^int ubi_leb_unmap(struct ubi_volume_desc *desc, int lnum)$/;"	f
ubi_leb_write	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_write);$/;"	v
ubi_leb_write	ubi/kapi.c	/^int ubi_leb_write(struct ubi_volume_desc *desc, int lnum, const void *buf,$/;"	f
ubi_load_block	ubispl/ubispl.c	/^static int ubi_load_block(struct ubi_scan_info *ubi, uint8_t *laddr,$/;"	f	file:
ubi_ltree_entry	ubi/ubi.h	/^struct ubi_ltree_entry {$/;"	s
ubi_major2num	ubi/build.c	/^int ubi_major2num(int major)$/;"	f
ubi_more_leb_change_data	ubi/upd.c	/^int ubi_more_leb_change_data(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_more_update_data	ubi/upd.c	/^int ubi_more_update_data(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_move_aeb_to_list	ubi/ubi.h	/^static inline void ubi_move_aeb_to_list(struct ubi_ainf_volume *av,$/;"	f
ubi_msg	ubi/ubi.h	46;"	d
ubi_msg	ubi/ubi.h	48;"	d
ubi_msg	ubispl/ubispl.h	127;"	d
ubi_msg	ubispl/ubispl.h	129;"	d
ubi_mtd_param_parse	ubi/build.c	/^static int __init ubi_mtd_param_parse(const char *val, struct kernel_param *kp)$/;"	f	file:
ubi_name	ubi/ubi.h	/^	char ubi_name[sizeof(UBI_NAME_STR)+5];$/;"	m	struct:ubi_device
ubi_next_sqnum	ubi/eba.c	/^unsigned long long ubi_next_sqnum(struct ubi_device *ubi)$/;"	f
ubi_notifiers	ubi/kapi.c	/^BLOCKING_NOTIFIER_HEAD(ubi_notifiers);$/;"	v
ubi_notify_all	ubi/build.c	/^int ubi_notify_all(struct ubi_device *ubi, int ntype, struct notifier_block *nb)$/;"	f
ubi_num	ubi/build.c	/^	int ubi_num;$/;"	m	struct:mtd_dev_param	file:
ubi_num	ubi/ubi.h	/^	int ubi_num;$/;"	m	struct:ubi_device
ubi_open_volume	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_open_volume);$/;"	v
ubi_open_volume	ubi/kapi.c	/^struct ubi_volume_desc *ubi_open_volume(int ubi_num, int vol_id, int mode)$/;"	f
ubi_open_volume_nm	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_open_volume_nm);$/;"	v
ubi_open_volume_nm	ubi/kapi.c	/^struct ubi_volume_desc *ubi_open_volume_nm(int ubi_num, const char *name,$/;"	f
ubi_open_volume_path	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_open_volume_path);$/;"	v
ubi_open_volume_path	ubi/kapi.c	/^struct ubi_volume_desc *ubi_open_volume_path(const char *pathname, int mode)$/;"	f
ubi_put_device	ubi/build.c	/^void ubi_put_device(struct ubi_device *ubi)$/;"	f
ubi_rb_for_each_entry	ubi/ubi.h	995;"	d
ubi_read_volume_table	ubi/vtbl.c	/^int ubi_read_volume_table(struct ubi_device *ubi, struct ubi_attach_info *ai)$/;"	f
ubi_refill_pools	ubi/fastmap-wl.c	/^void ubi_refill_pools(struct ubi_device *ubi)$/;"	f
ubi_register_volume_notifier	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_register_volume_notifier);$/;"	v
ubi_register_volume_notifier	ubi/kapi.c	/^int ubi_register_volume_notifier(struct notifier_block *nb,$/;"	f
ubi_remove_av	ubi/attach.c	/^void ubi_remove_av(struct ubi_attach_info *ai, struct ubi_ainf_volume *av)$/;"	f
ubi_remove_volume	ubi/vmt.c	/^int ubi_remove_volume(struct ubi_volume_desc *desc, int no_vtbl)$/;"	f
ubi_rename_entry	ubi/ubi.h	/^struct ubi_rename_entry {$/;"	s
ubi_rename_volumes	ubi/vmt.c	/^int ubi_rename_volumes(struct ubi_device *ubi, struct list_head *rename_list)$/;"	f
ubi_rescan_fm_vid_hdr	ubispl/ubispl.c	/^static int ubi_rescan_fm_vid_hdr(struct ubi_scan_info *ubi,$/;"	f	file:
ubi_resize_volume	ubi/vmt.c	/^int ubi_resize_volume(struct ubi_volume_desc *desc, int reserved_pebs)$/;"	f
ubi_ro_mode	ubi/ubi.h	/^static inline void ubi_ro_mode(struct ubi_device *ubi)$/;"	f
ubi_scan_fastmap	ubi/fastmap.c	/^int ubi_scan_fastmap(struct ubi_device *ubi, struct ubi_attach_info *ai,$/;"	f
ubi_scan_fastmap	ubispl/ubispl.c	/^static int ubi_scan_fastmap(struct ubi_scan_info *ubi,$/;"	f	file:
ubi_scan_info	ubispl/ubispl.h	/^struct ubi_scan_info {$/;"	s
ubi_scan_vid_hdr	ubispl/ubispl.c	/^static int ubi_scan_vid_hdr(struct ubi_scan_info *ubi, struct ubi_vid_hdr *vh,$/;"	f	file:
ubi_self_check_all_ff	ubi/io.c	/^int ubi_self_check_all_ff(struct ubi_device *ubi, int pnum, int offset, int len)$/;"	f
ubi_start_leb_change	ubi/upd.c	/^int ubi_start_leb_change(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_start_update	ubi/upd.c	/^int ubi_start_update(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_sync	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_sync);$/;"	v
ubi_sync	ubi/kapi.c	/^int ubi_sync(int ubi_num)$/;"	f
ubi_sysfs_close	ubi/build.c	/^static void ubi_sysfs_close(struct ubi_device *ubi)$/;"	f	file:
ubi_sysfs_init	ubi/build.c	/^static int ubi_sysfs_init(struct ubi_device *ubi, int *ref)$/;"	f	file:
ubi_thread	ubi/wl.c	/^int ubi_thread(void *u)$/;"	f
ubi_unregister_volume_notifier	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_unregister_volume_notifier);$/;"	v
ubi_unregister_volume_notifier	ubi/kapi.c	/^int ubi_unregister_volume_notifier(struct notifier_block *nb)$/;"	f
ubi_update_fastmap	ubi/fastmap.c	/^int ubi_update_fastmap(struct ubi_device *ubi)$/;"	f
ubi_update_fastmap	ubi/ubi.h	/^static inline int ubi_update_fastmap(struct ubi_device *ubi) { return 0; }$/;"	f
ubi_update_layout_vol	ubi/vtbl.c	/^static int ubi_update_layout_vol(struct ubi_device *ubi)$/;"	f	file:
ubi_update_reserved	ubi/misc.c	/^void ubi_update_reserved(struct ubi_device *ubi)$/;"	f
ubi_version_show	ubi/build.c	/^static ssize_t ubi_version_show(struct class *class,$/;"	f	file:
ubi_vid_hdr	ubi/ubi-media.h	/^struct ubi_vid_hdr {$/;"	s
ubi_vol_info	ubispl/ubispl.h	/^struct ubi_vol_info {$/;"	s
ubi_volume	ubi/ubi.h	/^struct ubi_volume {$/;"	s
ubi_volume_desc	ubi/ubi.h	/^struct ubi_volume_desc {$/;"	s
ubi_volume_notify	ubi/build.c	/^int ubi_volume_notify(struct ubi_device *ubi, struct ubi_volume *vol, int ntype)$/;"	f
ubi_vtbl_record	ubi/ubi-media.h	/^struct ubi_vtbl_record {$/;"	s
ubi_vtbl_rename_volumes	ubi/vtbl.c	/^int ubi_vtbl_rename_volumes(struct ubi_device *ubi,$/;"	f
ubi_warn	ubi/ubi.h	53;"	d
ubi_warn	ubispl/ubispl.h	132;"	d
ubi_wl_close	ubi/wl.c	/^void ubi_wl_close(struct ubi_device *ubi)$/;"	f
ubi_wl_entry	ubi/ubi.h	/^struct ubi_wl_entry {$/;"	s
ubi_wl_entry_slab	ubi/build.c	/^struct kmem_cache *ubi_wl_entry_slab;$/;"	v	typeref:struct:kmem_cache
ubi_wl_flush	ubi/wl.c	/^int ubi_wl_flush(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f
ubi_wl_get_fm_peb	ubi/fastmap-wl.c	/^struct ubi_wl_entry *ubi_wl_get_fm_peb(struct ubi_device *ubi, int anchor)$/;"	f
ubi_wl_get_peb	ubi/fastmap-wl.c	/^int ubi_wl_get_peb(struct ubi_device *ubi)$/;"	f
ubi_wl_get_peb	ubi/wl.c	/^int ubi_wl_get_peb(struct ubi_device *ubi)$/;"	f
ubi_wl_init	ubi/wl.c	/^int ubi_wl_init(struct ubi_device *ubi, struct ubi_attach_info *ai)$/;"	f
ubi_wl_put_fm_peb	ubi/fastmap-wl.c	/^int ubi_wl_put_fm_peb(struct ubi_device *ubi, struct ubi_wl_entry *fm_e,$/;"	f
ubi_wl_put_peb	ubi/wl.c	/^int ubi_wl_put_peb(struct ubi_device *ubi, int vol_id, int lnum,$/;"	f
ubi_wl_scrub_peb	ubi/wl.c	/^int ubi_wl_scrub_peb(struct ubi_device *ubi, int pnum)$/;"	f
ubi_work	ubi/ubi.h	/^struct ubi_work {$/;"	s
ubi_write_fastmap	ubi/fastmap.c	/^static int ubi_write_fastmap(struct ubi_device *ubi,$/;"	f	file:
ubi_zalloc_vid_hdr	ubi/ubi.h	/^ubi_zalloc_vid_hdr(const struct ubi_device *ubi, gfp_t gfp_flags)$/;"	f
ubiblock_create	ubi/ubi.h	/^static inline int ubiblock_create(struct ubi_volume_info *vi)$/;"	f
ubiblock_exit	ubi/ubi.h	/^static inline void ubiblock_exit(void) {}$/;"	f
ubiblock_init	ubi/ubi.h	/^static inline int ubiblock_init(void) { return 0; }$/;"	f
ubiblock_remove	ubi/ubi.h	/^static inline int ubiblock_remove(struct ubi_volume_info *vi)$/;"	f
ubispl_load_volumes	ubispl/ubispl.c	/^int ubispl_load_volumes(struct ubispl_info *info, struct ubispl_load *lvols,$/;"	f
uif_close	ubi/build.c	/^static void uif_close(struct ubi_device *ubi)$/;"	f	file:
uif_init	ubi/build.c	/^static int uif_init(struct ubi_device *ubi, int *ref)$/;"	f	file:
unlock_addr	jedec_flash.c	/^struct unlock_addr {$/;"	s	file:
unlock_addrs	jedec_flash.c	/^static const struct unlock_addr  unlock_addrs[] = {$/;"	v	typeref:struct:unlock_addr	file:
unlockend_blkaddr	nand/mxc_nand.h	/^	u16 unlockend_blkaddr;$/;"	m	struct:mxc_nand_regs
unlockend_blkaddr1	nand/mxc_nand.h	/^	u16 unlockend_blkaddr1;$/;"	m	struct:mxc_nand_regs
unlockend_blkaddr2	nand/mxc_nand.h	/^	u16 unlockend_blkaddr2;$/;"	m	struct:mxc_nand_regs
unlockend_blkaddr3	nand/mxc_nand.h	/^	u16 unlockend_blkaddr3;$/;"	m	struct:mxc_nand_regs
unlockstart_blkaddr	nand/mxc_nand.h	/^	u16 unlockstart_blkaddr;$/;"	m	struct:mxc_nand_regs
unlockstart_blkaddr1	nand/mxc_nand.h	/^	u16 unlockstart_blkaddr1;$/;"	m	struct:mxc_nand_regs
unlockstart_blkaddr2	nand/mxc_nand.h	/^	u16 unlockstart_blkaddr2;$/;"	m	struct:mxc_nand_regs
unlockstart_blkaddr3	nand/mxc_nand.h	/^	u16 unlockstart_blkaddr3;$/;"	m	struct:mxc_nand_regs
unmap_peb	ubi/fastmap.c	/^static void unmap_peb(struct ubi_attach_info *ai, int pnum)$/;"	f	file:
unregister_mtd_user	mtdcore.c	/^EXPORT_SYMBOL_GPL(unregister_mtd_user);$/;"	v
unregister_mtd_user	mtdcore.c	/^int unregister_mtd_user (struct mtd_notifier *old)$/;"	f
upd_buf	ubi/ubi.h	/^	void *upd_buf;$/;"	m	struct:ubi_volume
upd_bytes	ubi/ubi.h	/^	long long upd_bytes;$/;"	m	struct:ubi_volume
upd_ebs	ubi/ubi.h	/^	int upd_ebs;$/;"	m	struct:ubi_volume
upd_marker	ubi/ubi-media.h	/^	__u8    upd_marker;$/;"	m	struct:ubi_vtbl_record
upd_marker	ubi/ubi.h	/^	unsigned int upd_marker:1;$/;"	m	struct:ubi_volume
upd_received	ubi/ubi.h	/^	long long upd_received;$/;"	m	struct:ubi_volume
update_fastmap_work_fn	ubi/fastmap-wl.c	/^static void update_fastmap_work_fn(struct work_struct *wrk)$/;"	f	file:
update_vol	ubi/fastmap.c	/^static int update_vol(struct ubi_device *ubi, struct ubi_attach_info *ai,$/;"	f	file:
updating	ubi/ubi.h	/^	unsigned int updating:1;$/;"	m	struct:ubi_volume
upm_nand_read_buf	nand/fsl_upm.c	/^static void upm_nand_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
upm_nand_read_byte	nand/fsl_upm.c	/^static u8 upm_nand_read_byte(struct mtd_info *mtd)$/;"	f	file:
upm_nand_write_buf	nand/fsl_upm.c	/^static void upm_nand_write_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
usable_leb_size	ubi/ubi.h	/^	int usable_leb_size;$/;"	m	struct:ubi_volume
use_ecc	nand/pxa3xx_nand.c	/^	int			use_ecc;	\/* use HW ECC ? *\/$/;"	m	struct:pxa3xx_nand_info	file:
use_ecc	nand/pxa3xx_nand.c	/^	int			use_ecc;$/;"	m	struct:pxa3xx_nand_host	file:
use_flash_status_poll	cfi_flash.c	/^static int use_flash_status_poll(flash_info_t *info)$/;"	f	file:
use_mdr	nand/fsl_elbc_nand.c	/^	unsigned int use_mdr;    \/* Non zero if the MDR is to be set      *\/$/;"	m	struct:fsl_elbc_ctrl	file:
use_spare	nand/pxa3xx_nand.c	/^	int			use_spare;	\/* use spare ? *\/$/;"	m	struct:pxa3xx_nand_info	file:
used	mtdcore.c	/^	int	used;$/;"	m	struct:idr_layer	file:
used	ubi/ubi.h	/^	int used;$/;"	m	struct:ubi_fm_pool
used	ubi/ubi.h	/^	struct rb_root used;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rb_root
used	ubispl/ubi-wrapper.h	/^	int used;$/;"	m	struct:ubi_fm_pool
used_blocks	ubi/ubi-media.h	/^	__be32 used_blocks;$/;"	m	struct:ubi_fm_sb
used_blocks	ubi/ubi.h	/^	int used_blocks;$/;"	m	struct:ubi_fastmap_layout
used_blocks	ubispl/ubi-wrapper.h	/^	int used_blocks;$/;"	m	struct:ubi_fastmap_layout
used_bytes	ubi/ubi.h	/^	long long used_bytes;$/;"	m	struct:ubi_volume
used_ebs	ubi/ubi-media.h	/^	__be32  used_ebs;$/;"	m	struct:ubi_vid_hdr
used_ebs	ubi/ubi-media.h	/^	__be32 used_ebs;$/;"	m	struct:ubi_fm_volhdr
used_ebs	ubi/ubi.h	/^	int used_ebs;$/;"	m	struct:ubi_ainf_volume
used_ebs	ubi/ubi.h	/^	int used_ebs;$/;"	m	struct:ubi_volume
used_peb_count	ubi/ubi-media.h	/^	__be32 used_peb_count;$/;"	m	struct:ubi_fm_hdr
users	ubi/ubi.h	/^	int users;$/;"	m	struct:ubi_ltree_entry
valid	nand/sunxi_nand_spl.c	/^	bool valid;$/;"	m	struct:nfc_config	file:
validate_ec_hdr	ubi/io.c	/^static int validate_ec_hdr(const struct ubi_device *ubi,$/;"	f	file:
validate_vid_hdr	ubi/attach.c	/^static int validate_vid_hdr(const struct ubi_device *ubi,$/;"	f	file:
validate_vid_hdr	ubi/io.c	/^static int validate_vid_hdr(const struct ubi_device *ubi,$/;"	f	file:
variant	nand/pxa3xx_nand.c	/^	enum pxa3xx_nand_variant variant;$/;"	m	struct:pxa3xx_nand_info	typeref:enum:pxa3xx_nand_info::pxa3xx_nand_variant	file:
vbase	nand/fsl_elbc_nand.c	/^	u8 __iomem *vbase;      \/* Chip select base virtual address  *\/$/;"	m	struct:fsl_elbc_mtd	file:
vbase	nand/fsl_ifc_nand.c	/^	u8 __iomem *vbase;      \/* Chip select base virtual address       *\/$/;"	m	struct:fsl_ifc_mtd	file:
vdbg	nand/fsl_elbc_nand.c	24;"	d	file:
vdbg	nand/fsl_elbc_nand.c	26;"	d	file:
verify_bbt_descr	nand/nand_bbt.c	/^static void verify_bbt_descr(struct mtd_info *mtd, struct nand_bbt_descr *bd)$/;"	f	file:
version	nand/atmel_nand_ecc.h	/^	u32 version;$/;"	m	struct:pmecc_errloc_regs
version	ubi/ubi-media.h	/^	__u8    version;$/;"	m	struct:ubi_ec_hdr
version	ubi/ubi-media.h	/^	__u8    version;$/;"	m	struct:ubi_vid_hdr
version	ubi/ubi-media.h	/^	__u8 version;$/;"	m	struct:ubi_fm_sb
vf610_nfc	nand/vf610_nfc.c	/^struct vf610_nfc {$/;"	s	file:
vf610_nfc_addr_cycle	nand/vf610_nfc.c	/^static void vf610_nfc_addr_cycle(struct mtd_info *mtd, int column, int page)$/;"	f	file:
vf610_nfc_alt_buf	nand/vf610_nfc.c	/^enum vf610_nfc_alt_buf {$/;"	g	file:
vf610_nfc_clear	nand/vf610_nfc.c	/^static inline void vf610_nfc_clear(struct mtd_info *mtd, uint reg, u32 bits)$/;"	f	file:
vf610_nfc_clear_status	nand/vf610_nfc.c	/^static inline void vf610_nfc_clear_status(void __iomem *regbase)$/;"	f	file:
vf610_nfc_command	nand/vf610_nfc.c	/^static void vf610_nfc_command(struct mtd_info *mtd, unsigned command,$/;"	f	file:
vf610_nfc_config	nand/vf610_nfc.c	/^struct vf610_nfc_config {$/;"	s	file:
vf610_nfc_correct_data	nand/vf610_nfc.c	/^static inline int vf610_nfc_correct_data(struct mtd_info *mtd, uint8_t *dat,$/;"	f	file:
vf610_nfc_dev_ready	nand/vf610_nfc.c	/^static int vf610_nfc_dev_ready(struct mtd_info *mtd)$/;"	f	file:
vf610_nfc_done	nand/vf610_nfc.c	/^static void vf610_nfc_done(struct mtd_info *mtd)$/;"	f	file:
vf610_nfc_ecc	nand/vf610_nfc.c	/^static struct nand_ecclayout vf610_nfc_ecc = {$/;"	v	typeref:struct:nand_ecclayout	file:
vf610_nfc_ecc_mode	nand/vf610_nfc.c	/^static inline void vf610_nfc_ecc_mode(struct mtd_info *mtd, int ecc_mode)$/;"	f	file:
vf610_nfc_get_id	nand/vf610_nfc.c	/^static u8 vf610_nfc_get_id(struct mtd_info *mtd, int col)$/;"	f	file:
vf610_nfc_get_status	nand/vf610_nfc.c	/^static u8 vf610_nfc_get_status(struct mtd_info *mtd)$/;"	f	file:
vf610_nfc_memcpy	nand/vf610_nfc.c	/^static inline void vf610_nfc_memcpy(void *dst, const void *src, size_t n)$/;"	f	file:
vf610_nfc_nand_init	nand/vf610_nfc.c	/^static int vf610_nfc_nand_init(int devnum, void __iomem *addr)$/;"	f	file:
vf610_nfc_read	nand/vf610_nfc.c	/^static inline u32 vf610_nfc_read(struct mtd_info *mtd, uint reg)$/;"	f	file:
vf610_nfc_read_buf	nand/vf610_nfc.c	/^static void vf610_nfc_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
vf610_nfc_read_byte	nand/vf610_nfc.c	/^static uint8_t vf610_nfc_read_byte(struct mtd_info *mtd)$/;"	f	file:
vf610_nfc_read_page	nand/vf610_nfc.c	/^static int vf610_nfc_read_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
vf610_nfc_read_word	nand/vf610_nfc.c	/^static u16 vf610_nfc_read_word(struct mtd_info *mtd)$/;"	f	file:
vf610_nfc_select_chip	nand/vf610_nfc.c	/^static void vf610_nfc_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
vf610_nfc_send_command	nand/vf610_nfc.c	/^static void vf610_nfc_send_command(void __iomem *regbase, u32 cmd_byte1,$/;"	f	file:
vf610_nfc_send_commands	nand/vf610_nfc.c	/^static void vf610_nfc_send_commands(void __iomem *regbase, u32 cmd_byte1,$/;"	f	file:
vf610_nfc_set	nand/vf610_nfc.c	/^static inline void vf610_nfc_set(struct mtd_info *mtd, uint reg, u32 bits)$/;"	f	file:
vf610_nfc_set_field	nand/vf610_nfc.c	/^static inline void vf610_nfc_set_field(struct mtd_info *mtd, u32 reg,$/;"	f	file:
vf610_nfc_transfer_size	nand/vf610_nfc.c	/^static inline void vf610_nfc_transfer_size(void __iomem *regbase, int size)$/;"	f	file:
vf610_nfc_write	nand/vf610_nfc.c	/^static inline void vf610_nfc_write(struct mtd_info *mtd, uint reg, u32 val)$/;"	f	file:
vf610_nfc_write_buf	nand/vf610_nfc.c	/^static void vf610_nfc_write_buf(struct mtd_info *mtd, const uint8_t *buf,$/;"	f	file:
vf610_nfc_write_page	nand/vf610_nfc.c	/^static int vf610_nfc_write_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
vid_hdr_aloffset	ubi/ubi.h	/^	int vid_hdr_aloffset;$/;"	m	struct:ubi_device
vid_hdr_alsize	ubi/ubi.h	/^	int vid_hdr_alsize;$/;"	m	struct:ubi_device
vid_hdr_offs	ubi/build.c	/^	int vid_hdr_offs;$/;"	m	struct:mtd_dev_param	file:
vid_hdr_offset	ubi/ubi-media.h	/^	__be32  vid_hdr_offset;$/;"	m	struct:ubi_ec_hdr
vid_hdr_offset	ubi/ubi.h	/^	int vid_hdr_offset;$/;"	m	struct:ubi_device
vid_hdr_shift	ubi/ubi.h	/^	int vid_hdr_shift;$/;"	m	struct:ubi_device
vid_offset	ubispl/ubispl.h	/^	unsigned long			vid_offset;$/;"	m	struct:ubi_scan_info
vidh	ubi/attach.c	/^static struct ubi_vid_hdr *vidh;$/;"	v	typeref:struct:ubi_vid_hdr	file:
vol	ubi/ubi.h	/^	struct ubi_volume *vol;$/;"	m	struct:ubi_volume_desc	typeref:struct:ubi_volume_desc::ubi_volume
vol_attribute_show	ubi/vmt.c	/^static ssize_t vol_attribute_show(struct device *dev,$/;"	f	file:
vol_count	ubi/ubi-media.h	/^	__be32 vol_count;$/;"	m	struct:ubi_fm_hdr
vol_count	ubi/ubi.h	/^	int vol_count;$/;"	m	struct:ubi_device
vol_id	ubi/ubi-media.h	/^	__be32  vol_id;$/;"	m	struct:ubi_vid_hdr
vol_id	ubi/ubi-media.h	/^	__be32 vol_id;$/;"	m	struct:ubi_fm_volhdr
vol_id	ubi/ubi.h	/^	int vol_id;$/;"	m	struct:ubi_ainf_peb
vol_id	ubi/ubi.h	/^	int vol_id;$/;"	m	struct:ubi_ainf_volume
vol_id	ubi/ubi.h	/^	int vol_id;$/;"	m	struct:ubi_ltree_entry
vol_id	ubi/ubi.h	/^	int vol_id;$/;"	m	struct:ubi_volume
vol_id	ubi/ubi.h	/^	int vol_id;$/;"	m	struct:ubi_work
vol_id2idx	ubi/ubi.h	/^static inline int vol_id2idx(const struct ubi_device *ubi, int vol_id)$/;"	f
vol_release	ubi/vmt.c	/^static void vol_release(struct device *dev)$/;"	f	file:
vol_type	ubi/ubi-media.h	/^	__u8    vol_type;$/;"	m	struct:ubi_vid_hdr
vol_type	ubi/ubi-media.h	/^	__u8    vol_type;$/;"	m	struct:ubi_vtbl_record
vol_type	ubi/ubi-media.h	/^	__u8 vol_type;$/;"	m	struct:ubi_fm_volhdr
vol_type	ubi/ubi.h	/^	int vol_type;$/;"	m	struct:ubi_ainf_volume
vol_type	ubi/ubi.h	/^	int vol_type;$/;"	m	struct:ubi_volume
volinfo	ubispl/ubispl.h	/^	struct ubi_vol_info		volinfo[UBI_SPL_VOL_IDS];$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::ubi_vol_info
vols_found	ubi/ubi.h	/^	int vols_found;$/;"	m	struct:ubi_attach_info
volume_dev	ubi/vmt.c	/^ATTRIBUTE_GROUPS(volume_dev);$/;"	v
volume_dev_attrs	ubi/vmt.c	/^static struct attribute *volume_dev_attrs[] = {$/;"	v	typeref:struct:attribute	file:
volumes	ubi/ubi.h	/^	struct rb_root volumes;$/;"	m	struct:ubi_attach_info	typeref:struct:ubi_attach_info::rb_root
volumes	ubi/ubi.h	/^	struct ubi_volume *volumes[UBI_MAX_VOLUMES+UBI_INT_VOL_COUNT];$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_volume
volumes_lock	ubi/ubi.h	/^	spinlock_t volumes_lock;$/;"	m	struct:ubi_device
vtbl	ubi/ubi.h	/^	struct ubi_vtbl_record *vtbl;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_vtbl_record
vtbl_check	ubi/vtbl.c	/^static int vtbl_check(const struct ubi_device *ubi,$/;"	f	file:
vtbl_size	ubi/ubi.h	/^	int vtbl_size;$/;"	m	struct:ubi_device
vtbl_slots	ubi/ubi.h	/^	int vtbl_slots;$/;"	m	struct:ubi_device
wait_for_irq	nand/denali.c	/^static uint32_t wait_for_irq(struct denali_nand_info *denali, uint32_t irq_mask)$/;"	f	file:
wait_for_irq	nand/denali_spl.c	/^static int wait_for_irq(uint32_t irq_mask)$/;"	f	file:
wait_op_done	nand/mxc_nand.c	/^static void wait_op_done(struct mxc_nand_host *host, int max_retries,$/;"	f	file:
wear_leveling_worker	ubi/wl.c	/^static int wear_leveling_worker(struct ubi_device *ubi, struct ubi_work *wrk,$/;"	f	file:
width	nand/tegra_nand.c	/^	s32 width;		\/* bit width, normally 8 *\/$/;"	m	struct:fdt_nand	file:
width	nand/vf610_nfc.c	/^	int width;$/;"	m	struct:vf610_nfc_config	file:
wl_entry_destroy	ubi/wl.c	/^static void wl_entry_destroy(struct ubi_device *ubi, struct ubi_wl_entry *e)$/;"	f	file:
wl_get_wle	ubi/wl.c	/^static struct ubi_wl_entry *wl_get_wle(struct ubi_device *ubi)$/;"	f	file:
wl_lock	ubi/ubi.h	/^	spinlock_t wl_lock;$/;"	m	struct:ubi_device
wl_scheduled	ubi/ubi.h	/^	int wl_scheduled;$/;"	m	struct:ubi_device
wl_tree_add	ubi/wl.c	/^static void wl_tree_add(struct ubi_wl_entry *e, struct rb_root *root)$/;"	f	file:
work_sem	ubi/ubi.h	/^	struct rw_semaphore work_sem;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rw_semaphore
works	ubi/ubi.h	/^	struct list_head works;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::list_head
works_count	ubi/ubi.h	/^	int works_count;$/;"	m	struct:ubi_device
wp_gpio	nand/tegra_nand.c	/^	struct gpio_desc wp_gpio;	\/* write-protect GPIO *\/$/;"	m	struct:fdt_nand	typeref:struct:fdt_nand::gpio_desc	file:
wpr	nand/lpc32xx_nand_mlc.c	/^	u32 wpr;$/;"	m	struct:lpc32xx_nand_mlc_registers	file:
wr_param	nand/kirkwood_nand.c	/^	u32 wr_param;	\/* 0x1041c *\/$/;"	m	struct:kwnandf_registers	file:
write_bar	spi/spi_flash.c	/^static int write_bar(struct spi_flash *flash, u32 offset)$/;"	f	file:
write_bbt	nand/nand_bbt.c	/^static int write_bbt(struct mtd_info *mtd, uint8_t *buf,$/;"	f	file:
write_buff	altera_qspi.c	/^int write_buff(flash_info_t *info, uchar *src, ulong addr, ulong cnt)$/;"	f
write_buff	cfi_flash.c	/^int write_buff (flash_info_t * info, uchar * src, ulong addr, ulong cnt)$/;"	f
write_buff	pic32_flash.c	/^int write_buff(flash_info_t *info, uchar *src, ulong addr, ulong cnt)$/;"	f
write_buff	st_smi.c	/^int write_buff(flash_info_t *info, uchar *src, ulong dest_addr, ulong length)$/;"	f
write_buff	stm32_flash.c	/^int write_buff(flash_info_t *info, uchar *src, ulong addr, ulong cnt)$/;"	f
write_byte_to_buf	nand/denali.c	/^static void write_byte_to_buf(struct denali_nand_info *denali, uint8_t byte)$/;"	f	file:
write_cr	spi/spi_flash.c	/^static int write_cr(struct spi_flash *flash, u8 wc)$/;"	f	file:
write_data	nand/kmeter1_nand.c	18;"	d	file:
write_data_to_flash_mem	nand/denali.c	/^static int write_data_to_flash_mem(struct denali_nand_info *denali,$/;"	f	file:
write_dataflash	dataflash.c	/^int write_dataflash (unsigned long addr_dest, unsigned long addr_src,$/;"	f
write_leb	ubi/upd.c	/^static int write_leb(struct ubi_device *ubi, struct ubi_volume *vol, int lnum,$/;"	f	file:
write_mode	nand/kmeter1_nand.c	16;"	d	file:
write_oob_data	nand/denali.c	/^static int write_oob_data(struct mtd_info *mtd, uint8_t *buf, int page)$/;"	f	file:
write_page	nand/denali.c	/^static int write_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
write_sr	spi/spi_flash.c	/^static int write_sr(struct spi_flash *flash, u8 ws)$/;"	f	file:
write_sz	nand/vf610_nfc.c	/^	int write_sz;$/;"	m	struct:vf610_nfc	file:
write_word	pic32_flash.c	/^static int write_word(flash_info_t *info, ulong dest, ulong word)$/;"	f	file:
writenfc	nand/mxc_nand.h	202;"	d
writenfc	nand/mxc_nand.h	206;"	d
writers	ubi/ubi.h	/^	int writers;$/;"	m	struct:ubi_volume
wrprot	nand/mxc_nand.h	/^	u16 wrprot;$/;"	m	struct:mxc_nand_regs
wrprot	nand/mxc_nand.h	/^	u32 wrprot;$/;"	m	struct:mxc_nand_ip_regs
wrprot_unlock_blkaddr	nand/mxc_nand.h	/^	u32 wrprot_unlock_blkaddr[8];$/;"	m	struct:mxc_nand_ip_regs
ws	nand/omap_gpmc.c	/^	uint8_t ws;		\/* wait status pin (0,1) *\/$/;"	m	struct:omap_nand_info	file:
wscfg	nand/omap_gpmc.c	/^static const int8_t wscfg[CONFIG_SYS_MAX_NAND_DEVICE] =$/;"	v	file:
wscfg	nand/omap_gpmc.c	/^static const int8_t wscfg[CONFIG_SYS_MAX_NAND_DEVICE];$/;"	v	file:
zynq_nand_calculate_hwecc	nand/zynq_nand.c	/^static int zynq_nand_calculate_hwecc(struct mtd_info *mtd, const u8 *data,$/;"	f	file:
zynq_nand_cmd_function	nand/zynq_nand.c	/^static void zynq_nand_cmd_function(struct mtd_info *mtd, unsigned int command,$/;"	f	file:
zynq_nand_command_format	nand/zynq_nand.c	/^struct zynq_nand_command_format {$/;"	s	file:
zynq_nand_commands	nand/zynq_nand.c	/^static const struct zynq_nand_command_format zynq_nand_commands[] = {$/;"	v	typeref:struct:zynq_nand_command_format	file:
zynq_nand_correct_data	nand/zynq_nand.c	/^static int zynq_nand_correct_data(struct mtd_info *mtd, unsigned char *buf,$/;"	f	file:
zynq_nand_device_ready	nand/zynq_nand.c	/^static int zynq_nand_device_ready(struct mtd_info *mtd)$/;"	f	file:
zynq_nand_info	nand/zynq_nand.c	/^struct zynq_nand_info {$/;"	s	file:
zynq_nand_init	nand/zynq_nand.c	/^static int zynq_nand_init(struct nand_chip *nand_chip, int devnum)$/;"	f	file:
zynq_nand_init_nand_flash	nand/zynq_nand.c	/^static int zynq_nand_init_nand_flash(int option)$/;"	f	file:
zynq_nand_read_buf	nand/zynq_nand.c	/^static void zynq_nand_read_buf(struct mtd_info *mtd, u8 *buf, int len)$/;"	f	file:
zynq_nand_read_oob	nand/zynq_nand.c	/^static int zynq_nand_read_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
zynq_nand_read_page_hwecc	nand/zynq_nand.c	/^static int zynq_nand_read_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
zynq_nand_read_page_raw	nand/zynq_nand.c	/^static int zynq_nand_read_page_raw(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
zynq_nand_read_page_raw_nooob	nand/zynq_nand.c	/^static int zynq_nand_read_page_raw_nooob(struct mtd_info *mtd,$/;"	f	file:
zynq_nand_read_page_swecc	nand/zynq_nand.c	/^static int zynq_nand_read_page_swecc(struct mtd_info *mtd,$/;"	f	file:
zynq_nand_read_subpage_raw	nand/zynq_nand.c	/^static int zynq_nand_read_subpage_raw(struct mtd_info *mtd,$/;"	f	file:
zynq_nand_select_chip	nand/zynq_nand.c	/^static void zynq_nand_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
zynq_nand_smc_base	nand/zynq_nand.c	101;"	d	file:
zynq_nand_smc_regs	nand/zynq_nand.c	/^struct zynq_nand_smc_regs {$/;"	s	file:
zynq_nand_waitfor_ecc_completion	nand/zynq_nand.c	/^static int zynq_nand_waitfor_ecc_completion(void)$/;"	f	file:
zynq_nand_write_buf	nand/zynq_nand.c	/^static void zynq_nand_write_buf(struct mtd_info *mtd, const u8 *buf, int len)$/;"	f	file:
zynq_nand_write_oob	nand/zynq_nand.c	/^static int zynq_nand_write_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
zynq_nand_write_page_hwecc	nand/zynq_nand.c	/^static int zynq_nand_write_page_hwecc(struct mtd_info *mtd,$/;"	f	file:
zynq_nand_write_page_raw	nand/zynq_nand.c	/^static int zynq_nand_write_page_raw(struct mtd_info *mtd,$/;"	f	file:
zynq_nand_write_page_swecc	nand/zynq_nand.c	/^static int zynq_nand_write_page_swecc(struct mtd_info *mtd,$/;"	f	file:
